Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 2D3CF36CF1
	for <lists+linux-kernel@lfdr.de>; Thu,  6 Jun 2019 09:05:48 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726754AbfFFHFq (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Thu, 6 Jun 2019 03:05:46 -0400
Received: from foss.arm.com ([217.140.101.70]:41530 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725267AbfFFHFp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Jun 2019 03:05:45 -0400
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id DF821374;
        Thu,  6 Jun 2019 00:05:44 -0700 (PDT)
Received: from big-swifty.misterjones.org (usa-sjc-mx-foss1.foss.arm.com [217.140.101.70])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 72C133F246;
        Thu,  6 Jun 2019 00:05:39 -0700 (PDT)
Date:   Thu, 06 Jun 2019 08:05:37 +0100
Message-ID: <86pnnrgpmm.wl-marc.zyngier@arm.com>
From:   Marc Zyngier <marc.zyngier@arm.com>
To:     Benjamin Herrenschmidt <benh@kernel.crashing.org>
Cc:     "Shenhar, Talel" <talel@amazon.com>, <nicolas.ferre@microchip.com>,
        <jason@lakedaemon.net>, <mark.rutland@arm.com>,
        <mchehab+samsung@kernel.org>, <robh+dt@kernel.org>,
        <davem@davemloft.net>, <shawn.lin@rock-chips.com>,
        <tglx@linutronix.de>, <devicetree@vger.kernel.org>,
        <gregkh@linuxfoundation.org>, <linux-kernel@vger.kernel.org>,
        <dwmw@amazon.co.uk>, <jonnyc@amazon.com>, <hhhawa@amazon.com>,
        <ronenk@amazon.com>, <hanochu@amazon.com>, <barakw@amazon.com>
Subject: Re: [PATCH v2 2/2] irqchip: al-fic: Introduce Amazon's Annapurna Labs Fabric Interrupt Controller Driver
In-Reply-To: <54df139cc6cfef9202be6b945c968c3040591607.camel@kernel.crashing.org>
References: <1559731921-14023-1-git-send-email-talel@amazon.com>
        <1559731921-14023-3-git-send-email-talel@amazon.com>
        <fa6e5a95-d9dd-19f6-43e3-3046e0898bda@arm.com>
        <553d06a4-a6b6-816f-b110-6ef7f300dde4@amazon.com>
        <0915892c-0e53-8f53-e858-b1c3298a4d35@arm.com>
        <54df139cc6cfef9202be6b945c968c3040591607.camel@kernel.crashing.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 EasyPG/1.0.0 Emacs/26
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Organization: ARM Ltd
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, 05 Jun 2019 23:06:05 +0100,
Benjamin Herrenschmidt <benh@kernel.crashing.org> wrote:
> 
> On Wed, 2019-06-05 at 16:12 +0100, Marc Zyngier wrote:
> > > Those error messages are control path messages. if we return the same 
> > > error value from here and from the previous error, how can we 
> > > differentiate between the two error cases by looking at the log?
> > > 
> > > Having informative printouts seems like a good idea for bad 
> > > configuration cases as such, wouldn't you agree?
> > 
> > I completely disagree. The kernel log isn't a dumping ground for this
> > kind of pretty useless information. Furthermore, the irq subsystem will
> > also shout at you when it gets an error, so no need to add insult to injury.
> > 
> > If you really want to keep them around, turn them into pr_debug.
> 
> I disagree Marc. This is a rather bad error which indicates that the
> device-tree is probably incorrect (or the HW was wired in a way that
> cannot work).

But surely that's something you'll spot pretty quickly. Also, you get
a splat from the irq subsystem already, telling you that things went
wrong (see __irq_set_trigger). At that stage, you can enable debugging
and figure it out.

What I'm trying to avoid is the kernel becoming a (pretty bad)
validation tool for DTS files.

> Basically a given FIC can either be entirely level sensitive or
> entirely edge sensitive. This catches cases where the DT has routed
> a mixed of both to the same FIC. Definitely worth barfing loudly
> about rather than trying to understand subtle odd misbehaviours of
> the device in the field.

Then, in the interest of not producing incorrect DTs, could the
edge/level property be encoded in the FIC description itself, rather
than in the interrupt specifiers of the individual devices? It would
sidestep the problem altogether. You can still put the wrong one in
the FIC node, but it then becomes even more obvious what is going
on...

Thanks,

	M.

-- 
Jazz is not dead, it just smells funny.
