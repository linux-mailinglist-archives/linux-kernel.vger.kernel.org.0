Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 6C9FA31052
	for <lists+linux-kernel@lfdr.de>; Fri, 31 May 2019 16:34:38 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726968AbfEaOeU (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Fri, 31 May 2019 10:34:20 -0400
Received: from mx2.suse.de ([195.135.220.15]:32830 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726559AbfEaOeS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 31 May 2019 10:34:18 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 851CDAF79;
        Fri, 31 May 2019 14:34:17 +0000 (UTC)
Date:   Fri, 31 May 2019 16:34:17 +0200
Message-ID: <s5hlfymsnfa.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     YueHaibing <yuehaibing@huawei.com>
Cc:     <lgirdwood@gmail.com>, <broonie@kernel.org>,
        <pierre-louis.bossart@linux.intel.com>,
        <yingjiang.zhu@linux.intel.com>, <perex@perex.cz>,
        <alsa-devel@alsa-project.org>, <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] ASoC: SOF: Intel: hda: Fix COMPILE_TEST build error
In-Reply-To: <20190531142526.12712-1-yuehaibing@huawei.com>
References: <20190531142526.12712-1-yuehaibing@huawei.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, 31 May 2019 16:25:26 +0200,
YueHaibing wrote:
> 
> while building without PCI:
> 
> sound/soc/sof/intel/hda.o: In function `hda_dsp_probe':
> hda.c:(.text+0x79c): undefined reference to `pci_ioremap_bar'
> hda.c:(.text+0x79c): relocation truncated to fit: R_AARCH64_CALL26 against undefined symbol `pci_ioremap_bar'
> hda.c:(.text+0x7c4): undefined reference to `pci_ioremap_bar'
> hda.c:(.text+0x7c4): relocation truncated to fit: R_AARCH64_CALL26 against undefined symbol `pci_ioremap_bar'
> 
> Reported-by: Hulk Robot <hulkci@huawei.com>
> Fixes: e13ef82a9ab8 ("ASoC: SOF: add COMPILE_TEST for PCI options")
> Signed-off-by: YueHaibing <yuehaibing@huawei.com>
> ---
>  sound/soc/sof/intel/hda.c | 4 ++++
>  1 file changed, 4 insertions(+)
> 
> diff --git a/sound/soc/sof/intel/hda.c b/sound/soc/sof/intel/hda.c
> index 68db2ac..c1703c4 100644
> --- a/sound/soc/sof/intel/hda.c
> +++ b/sound/soc/sof/intel/hda.c
> @@ -231,7 +231,9 @@ static int hda_init(struct snd_sof_dev *sdev)
>  
>  	/* initialise hdac bus */
>  	bus->addr = pci_resource_start(pci, 0);
> +#if IS_ENABLED(CONFIG_PCI)
>  	bus->remap_addr = pci_ioremap_bar(pci, 0);
> +#endif
>  	if (!bus->remap_addr) {
>  		dev_err(bus->dev, "error: ioremap error\n");
>  		return -ENXIO;
> @@ -458,7 +460,9 @@ int hda_dsp_probe(struct snd_sof_dev *sdev)
>  		goto hdac_bus_unmap;
>  
>  	/* DSP base */
> +#if IS_ENABLED(CONFIG_PCI)
>  	sdev->bar[HDA_DSP_BAR] = pci_ioremap_bar(pci, HDA_DSP_BAR);
> +#endif
>  	if (!sdev->bar[HDA_DSP_BAR]) {
>  		dev_err(sdev->dev, "error: ioremap error\n");
>  		ret = -ENXIO;

IMO, this should be better addressed by fixing in linux/pci.h
instead, something like below (totally untested).


thanks,

Takashi

--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -2005,8 +2005,19 @@ static inline void pci_mmcfg_late_init(void) { }
 
 int pci_ext_cfg_avail(void);
 
+#ifdef CONFIG_PCI
 void __iomem *pci_ioremap_bar(struct pci_dev *pdev, int bar);
 void __iomem *pci_ioremap_wc_bar(struct pci_dev *pdev, int bar);
+#else
+static inline void __iomem *pci_ioremap_bar(struct pci_dev *pdev, int bar)
+{
+	return NULL;
+}
+static inline void __iomem *pci_ioremap_wc_bar(struct pci_dev *pdev, int bar)
+{
+	return NULL;
+}
+#endif
 
 #ifdef CONFIG_PCI_IOV
 int pci_iov_virtfn_bus(struct pci_dev *dev, int id);
