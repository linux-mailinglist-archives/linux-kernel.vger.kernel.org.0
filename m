Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id BF91CE419D
	for <lists+linux-kernel@lfdr.de>; Fri, 25 Oct 2019 04:39:04 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390343AbfJYCiz (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Thu, 24 Oct 2019 22:38:55 -0400
Received: from mail-ot1-f67.google.com ([209.85.210.67]:36820 "EHLO
        mail-ot1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728416AbfJYCiy (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 24 Oct 2019 22:38:54 -0400
Received: by mail-ot1-f67.google.com with SMTP id c7so860199otm.3;
        Thu, 24 Oct 2019 19:38:50 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=26nlmZpZwSTIGzW2rf35rnNzzw2vFUJOreV2zfU8qCw=;
        b=IZW4XV/InxPHxjR0HTsTFEbu0Gd30CHPlFktJ4V18fPaBdeLqbsjj34dVa37h1BwMu
         LChw1BjtsEq1kBAq5se55t5i00oBKadBPuIqMmfZpOqkdKY5Syj0OA+ghTil2Eeb8lpK
         TpoBoBjVkdIBDamsPTkGDrQY37ifF8y3ZnoM8CVigi7Q7Hb6rlRkSNo5kMnb0Oy47I/j
         z2p+JbJvBXqGKRrhBVAT6+GJ5+KVKgfhFTXTxk3LGaZX2XndzO4gpt4kMgVuopmwqcXF
         3Z8nEbNHOc5YILAL+0HFjVXMR1QFpHcpW9llSq+1CZtIwBm0I3dp6rr2Kz9Y/djEpIxL
         UrJg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=26nlmZpZwSTIGzW2rf35rnNzzw2vFUJOreV2zfU8qCw=;
        b=LfbiDMleTljiv0lCAvfpj10LrOBtnPUUo8Tk2XjuVYR4I0BTAbObC/Woh1mqn8MSV6
         u9FHEKc6UDim9ekSIM57kQqofotXf9t+iFfo1TwT96NatSb9OEPeaYG2njgKGGWgLhlT
         IKPUH5N9Y3zvguMHXrmoALtmND3HTdGUnWliG/0VZFK/HjYHvsUGPT4QNyewALoVsGxI
         M0XuPaQ0qnksqs/Kh1F5vYbg3jAxiRJZ7BLH6hB5AJJ4VIjm2/66rCElNWtPy7doJ6x0
         NBVYJ8CLIEFkGe6p7jO4VqPkQlBrfFNSaOprN0mGM5yiOF/hpWZljLFmwRAGhiLRD7Lk
         xAbA==
X-Gm-Message-State: APjAAAVK89z7B1sOOqRsWBdxRsoAZsSIrbHJRjxkeD3592L6gbCg+3wf
        4oqiB9ys8rlg6Rpa+s1dCd6SUxMhzCPDnNgJYnQ=
X-Google-Smtp-Source: APXvYqyEASq0KMwralpwpaPXwnx5qEd8v60mc+h1yC6lJISzRkddZCJcIc4FekdHNiPDRJH3ShKcjK66pcVAjzS2drw=
X-Received: by 2002:a05:6830:18f7:: with SMTP id d23mr761081otf.205.1571971129473;
 Thu, 24 Oct 2019 19:38:49 -0700 (PDT)
MIME-Version: 1.0
Received: by 2002:a9d:648:0:0:0:0:0 with HTTP; Thu, 24 Oct 2019 19:38:46 -0700 (PDT)
In-Reply-To: <CAFjuqNg8_G-B5Owz1NBxa-nw620hXwcn9WkE4sfETVR81MWatA@mail.gmail.com>
References: <20191020090800.GA2778@light.dominikbrodowski.net>
 <20191021160952.GA229204@google.com> <CAFjuqNg2BjbxsOeOpoo8FQRwatQHeHKhj01hbwNrSHjz9p3vYw@mail.gmail.com>
 <20191021184701.GA1823@light.dominikbrodowski.net> <CAFjuqNiyS4cd=YEFvn3tLkp5zSPbO2vj8JfHsymUuDyEmLydUA@mail.gmail.com>
 <CAFjuqNg8_G-B5Owz1NBxa-nw620hXwcn9WkE4sfETVR81MWatA@mail.gmail.com>
From:   "Michael ." <keltoiboy@gmail.com>
Date:   Fri, 25 Oct 2019 13:38:46 +1100
Message-ID: <CAFjuqNiToDC9BSJVdahdkPz8Ejb-rM3VRkyoBNUTJr8go=7zrg@mail.gmail.com>
Subject: Re: PCI device function not being enumerated [Was: PCMCIA not working
 on Panasonic Toughbook CF-29]
To:     Bjorn Helgaas <helgaas@kernel.org>
Cc:     Dominik Brodowski <linux@dominikbrodowski.net>,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        Trevor Jacobs <trevor_jacobs@aol.com>,
        Kris Cleveland <tridentperfusion@yahoo.com>,
        Jeff <bluerocksaddles@willitsonline.com>,
        Morgan Klym <moklym@gmail.com>
Content-Type: multipart/mixed; boundary="000000000000c53b200595b30c7c"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--000000000000c53b200595b30c7c
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Here's the resulting output of the failed compilation of 5.4rc1 with
the patch applied to quirks.c:
 CC      drivers/pci/quirks.o
drivers/pci/quirks.c:3039:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 3039 | -static void ricoh_mmc_fixup_rl5c476(struct pci_dev *dev)
      | ^
drivers/pci/quirks.c:3068:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 3068 | -DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_RL5C476, ricoh_mmc_fixup_rl5c476);
      | ^
drivers/pci/quirks.c:3069:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 3069 | -DECLARE_PCI_FIXUP_RESUME_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_RL5C476, ricoh_mmc_fixup_rl5c476);
      | ^
drivers/pci/quirks.c:3070:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 3070 | -
      | ^
In file included from ./include/linux/export.h:44,
                 from ./include/linux/linkage.h:7,
                 from ./include/linux/kernel.h:8,
                 from drivers/pci/quirks.c:16:
drivers/pci/quirks.c:3120:74: error: =E2=80=98ricoh_mmc_fixup_r5c832=E2=80=
=99
undeclared here (not in a function)
 3120 | DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_R5C832, ricoh_mmc_fixup_r5c832);
      |
          ^~~~~~~~~~~~~~~~~~~~~~
./include/linux/compiler.h:302:53: note: in definition of macro =E2=80=98__=
ADDRESSABLE=E2=80=99
  302 |   __PASTE(__addressable_##sym, __LINE__) =3D (void *)&sym;
      |                                                     ^~~
./include/linux/pci.h:1911:2: note: in expansion of macro
=E2=80=98__DECLARE_PCI_FIXUP_SECTION=E2=80=99
 1911 |  __DECLARE_PCI_FIXUP_SECTION(sec, name, vendor, device, class, \
      |  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/pci.h:1956:2: note: in expansion of macro
=E2=80=98DECLARE_PCI_FIXUP_SECTION=E2=80=99
 1956 |  DECLARE_PCI_FIXUP_SECTION(.pci_fixup_early,   \
      |  ^~~~~~~~~~~~~~~~~~~~~~~~~
drivers/pci/quirks.c:3120:1: note: in expansion of macro
=E2=80=98DECLARE_PCI_FIXUP_EARLY=E2=80=99
 3120 | DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_R5C832, ricoh_mmc_fixup_r5c832);
      | ^~~~~~~~~~~~~~~~~~~~~~~
make[5]: *** [scripts/Makefile.build:266: drivers/pci/quirks.o] Error 1
make[4]: *** [scripts/Makefile.build:509: drivers/pci] Error 2
make[3]: *** [Makefile:1649: drivers] Error 2
make[2]: *** [debian/rules:6: build] Error 2
dpkg-buildpackage: error: debian/rules build subprocess returned exit statu=
s 2
make[1]: *** [scripts/Makefile.package:77: deb-pkg] Error 2
make: *** [Makefile:1427: deb-pkg] Error 2
root@michael-desktop:/home/michael/Debian/linux-5.4-rc4#

Please also find attached the patched quirks.c file
Cheers.
Michael

On 25/10/2019, Michael . <keltoiboy@gmail.com> wrote:
> I just tried to do a kernel compile on Debian Sid running kernel 5.2.
> Downloaded 4.19.80 modded the quirks file, please find modded file
> attached, and started the compile.
> About an hour into it it fails with:
>   CC      drivers/pci/quirks.o
> drivers/pci/quirks.c:2945:1: error: expected identifier or =E2=80=98(=E2=
=80=99 before =E2=80=98-=E2=80=99
> token
>  2945 | -static void ricoh_mmc_fixup_rl5c476(struct pci_dev *dev)
>       | ^
> drivers/pci/quirks.c:2974:1: error: expected identifier or =E2=80=98(=E2=
=80=99 before =E2=80=98-=E2=80=99
> token
>  2974 | -DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
> PCI_DEVICE_ID_RICOH_RL5C476, ricoh_mmc_fixup_rl5c476);
>       | ^
> drivers/pci/quirks.c:2975:1: error: expected identifier or =E2=80=98(=E2=
=80=99 before =E2=80=98-=E2=80=99
> token
>  2975 | -DECLARE_PCI_FIXUP_RESUME_EARLY(PCI_VENDOR_ID_RICOH,
> PCI_DEVICE_ID_RICOH_RL5C476, ricoh_mmc_fixup_rl5c476);
>       | ^
> drivers/pci/quirks.c:2976:1: error: expected identifier or =E2=80=98(=E2=
=80=99 before =E2=80=98-=E2=80=99
> token
>  2976 | -
>       | ^
> In file included from ./include/linux/export.h:45,
>                  from ./include/linux/linkage.h:7,
>                  from ./include/linux/kernel.h:7,
>                  from drivers/pci/quirks.c:16:
> drivers/pci/quirks.c:3026:74: error: =E2=80=98ricoh_mmc_fixup_r5c832=E2=
=80=99
> undeclared here (not in a function)
>  3026 | DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
> PCI_DEVICE_ID_RICOH_R5C832, ricoh_mmc_fixup_r5c832);
>       |
>           ^~~~~~~~~~~~~~~~~~~~~~
> ./include/linux/compiler.h:296:53: note: in definition of macro
> =E2=80=98__ADDRESSABLE=E2=80=99
>   296 |   __PASTE(__addressable_##sym, __LINE__) =3D (void *)&sym;
>       |                                                     ^~~
> ./include/linux/pci.h:1847:2: note: in expansion of macro
> =E2=80=98__DECLARE_PCI_FIXUP_SECTION=E2=80=99
>  1847 |  __DECLARE_PCI_FIXUP_SECTION(sec, name, vendor, device, class, \
>       |  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
> ./include/linux/pci.h:1892:2: note: in expansion of macro
> =E2=80=98DECLARE_PCI_FIXUP_SECTION=E2=80=99
>  1892 |  DECLARE_PCI_FIXUP_SECTION(.pci_fixup_early,   \
>       |  ^~~~~~~~~~~~~~~~~~~~~~~~~
> drivers/pci/quirks.c:3026:1: note: in expansion of macro
> =E2=80=98DECLARE_PCI_FIXUP_EARLY=E2=80=99
>  3026 | DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
> PCI_DEVICE_ID_RICOH_R5C832, ricoh_mmc_fixup_r5c832);
>       | ^~~~~~~~~~~~~~~~~~~~~~~
> make[5]: *** [scripts/Makefile.build:304: drivers/pci/quirks.o] Error 1
> make[4]: *** [scripts/Makefile.build:544: drivers/pci] Error 2
> make[3]: *** [Makefile:1046: drivers] Error 2
> make[2]: *** [debian/rules:4: build] Error 2
> dpkg-buildpackage: error: debian/rules build subprocess returned exit sta=
tus
> 2
> make[1]: *** [scripts/package/Makefile:75: deb-pkg] Error 2
> make: *** [Makefile:1359: deb-pkg] Error 2
> root@michael-desktop:/home/michael/Debian/linux-4.19.80#
>
> I will try later with the latest 5.4-rc to see if the diff is
> incompatible with 4.19.
> Cheers.
> Michael
>
> On 22/10/2019, Michael . <keltoiboy@gmail.com> wrote:
>> Thanks Domunik I'll get onto this and report back the results.
>>
>> On 22/10/2019, Dominik Brodowski <linux@dominikbrodowski.net> wrote:
>>> On Tue, Oct 22, 2019 at 05:17:12AM +1100, Michael . wrote:
>>>> Thank you Dominik for looking at this for us and passing it on.
>>>>
>>>> Good morning Bjorn, thank you also for looking into this for us and
>>>> thank you for CCing us into this as non of us are on the mailing list.
>>>> One question how do we apply this patch or is this for Dominik to try?
>>>
>>> That's for you and/or other users of this hardware; I cannot test this
>>> myself, sorry. As to how to apply the patch: you'd need to apply the
>>> patch
>>> for the linux kernel sources, and then build a custom kernel. Some hint=
s
>>> on
>>> that (details depend on the distribtion):
>>>
>>> 	https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel
>>> 	https://wiki.ubuntu.com/KernelTeam/GitKernelBuild
>>> 	https://wiki.archlinux.org/index.php/Kernels/Arch_Build_System
>>> 	https://kernelnewbies.org/KernelBuild
>>>
>>> Best,
>>> 	Dominik
>>>
>>
>

--000000000000c53b200595b30c7c
Content-Type: text/x-csrc; charset="UTF-8"; name="quirks.c"
Content-Disposition: attachment; filename="quirks.c"
Content-Transfer-Encoding: base64
X-Attachment-Id: file0

Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKLyoKICogVGhpcyBmaWxlIGNvbnRh
aW5zIHdvcmstYXJvdW5kcyBmb3IgbWFueSBrbm93biBQQ0kgaGFyZHdhcmUgYnVncy4KICogRGV2
aWNlcyBwcmVzZW50IG9ubHkgb24gY2VydGFpbiBhcmNoaXRlY3R1cmVzIChob3N0IGJyaWRnZXMg
ZXQgY2V0ZXJhKQogKiBzaG91bGQgYmUgaGFuZGxlZCBpbiBhcmNoLXNwZWNpZmljIGNvZGUuCiAq
CiAqIE5vdGU6IGFueSBxdWlya3MgZm9yIGhvdHBsdWdnYWJsZSBkZXZpY2VzIG11c3QgX05PVF8g
YmUgZGVjbGFyZWQgX19pbml0LgogKgogKiBDb3B5cmlnaHQgKGMpIDE5OTkgTWFydGluIE1hcmVz
IDxtakB1Y3cuY3o+CiAqCiAqIEluaXQvcmVzZXQgcXVpcmtzIGZvciBVU0IgaG9zdCBjb250cm9s
bGVycyBzaG91bGQgYmUgaW4gdGhlIFVTQiBxdWlya3MKICogZmlsZSwgd2hlcmUgdGhlaXIgZHJp
dmVycyBjYW4gdXNlIHRoZW0uCiAqLwoKI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiNpbmNsdWRl
IDxsaW51eC9rZXJuZWwuaD4KI2luY2x1ZGUgPGxpbnV4L2V4cG9ydC5oPgojaW5jbHVkZSA8bGlu
dXgvcGNpLmg+CiNpbmNsdWRlIDxsaW51eC9pbml0Lmg+CiNpbmNsdWRlIDxsaW51eC9kZWxheS5o
PgojaW5jbHVkZSA8bGludXgvYWNwaS5oPgojaW5jbHVkZSA8bGludXgvZG1pLmg+CiNpbmNsdWRl
IDxsaW51eC9pb3BvcnQuaD4KI2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CiNpbmNsdWRlIDxsaW51
eC9rdGltZS5oPgojaW5jbHVkZSA8bGludXgvbW0uaD4KI2luY2x1ZGUgPGxpbnV4L252bWUuaD4K
I2luY2x1ZGUgPGxpbnV4L3BsYXRmb3JtX2RhdGEveDg2L2FwcGxlLmg+CiNpbmNsdWRlIDxsaW51
eC9wbV9ydW50aW1lLmg+CiNpbmNsdWRlIDxsaW51eC9zd2l0Y2h0ZWMuaD4KI2luY2x1ZGUgPGFz
bS9kbWEuaD4JLyogaXNhX2RtYV9icmlkZ2VfYnVnZ3kgKi8KI2luY2x1ZGUgInBjaS5oIgoKc3Rh
dGljIGt0aW1lX3QgZml4dXBfZGVidWdfc3RhcnQoc3RydWN0IHBjaV9kZXYgKmRldiwKCQkJCSB2
b2lkICgqZm4pKHN0cnVjdCBwY2lfZGV2ICpkZXYpKQp7CglpZiAoaW5pdGNhbGxfZGVidWcpCgkJ
cGNpX2luZm8oZGV2LCAiY2FsbGluZyAgJXBTIEAgJWlcbiIsIGZuLCB0YXNrX3BpZF9ucihjdXJy
ZW50KSk7CgoJcmV0dXJuIGt0aW1lX2dldCgpOwp9CgpzdGF0aWMgdm9pZCBmaXh1cF9kZWJ1Z19y
ZXBvcnQoc3RydWN0IHBjaV9kZXYgKmRldiwga3RpbWVfdCBjYWxsdGltZSwKCQkJICAgICAgIHZv
aWQgKCpmbikoc3RydWN0IHBjaV9kZXYgKmRldikpCnsKCWt0aW1lX3QgZGVsdGEsIHJldHRpbWU7
Cgl1bnNpZ25lZCBsb25nIGxvbmcgZHVyYXRpb247CgoJcmV0dGltZSA9IGt0aW1lX2dldCgpOwoJ
ZGVsdGEgPSBrdGltZV9zdWIocmV0dGltZSwgY2FsbHRpbWUpOwoJZHVyYXRpb24gPSAodW5zaWdu
ZWQgbG9uZyBsb25nKSBrdGltZV90b19ucyhkZWx0YSkgPj4gMTA7CglpZiAoaW5pdGNhbGxfZGVi
dWcgfHwgZHVyYXRpb24gPiAxMDAwMCkKCQlwY2lfaW5mbyhkZXYsICIlcFMgdG9vayAlbGxkIHVz
ZWNzXG4iLCBmbiwgZHVyYXRpb24pOwp9CgpzdGF0aWMgdm9pZCBwY2lfZG9fZml4dXBzKHN0cnVj
dCBwY2lfZGV2ICpkZXYsIHN0cnVjdCBwY2lfZml4dXAgKmYsCgkJCSAgc3RydWN0IHBjaV9maXh1
cCAqZW5kKQp7CglrdGltZV90IGNhbGx0aW1lOwoKCWZvciAoOyBmIDwgZW5kOyBmKyspCgkJaWYg
KChmLT5jbGFzcyA9PSAodTMyKSAoZGV2LT5jbGFzcyA+PiBmLT5jbGFzc19zaGlmdCkgfHwKCQkg
ICAgIGYtPmNsYXNzID09ICh1MzIpIFBDSV9BTllfSUQpICYmCgkJICAgIChmLT52ZW5kb3IgPT0g
ZGV2LT52ZW5kb3IgfHwKCQkgICAgIGYtPnZlbmRvciA9PSAodTE2KSBQQ0lfQU5ZX0lEKSAmJgoJ
CSAgICAoZi0+ZGV2aWNlID09IGRldi0+ZGV2aWNlIHx8CgkJICAgICBmLT5kZXZpY2UgPT0gKHUx
NikgUENJX0FOWV9JRCkpIHsKCQkJdm9pZCAoKmhvb2spKHN0cnVjdCBwY2lfZGV2ICpkZXYpOwoj
aWZkZWYgQ09ORklHX0hBVkVfQVJDSF9QUkVMMzJfUkVMT0NBVElPTlMKCQkJaG9vayA9IG9mZnNl
dF90b19wdHIoJmYtPmhvb2tfb2Zmc2V0KTsKI2Vsc2UKCQkJaG9vayA9IGYtPmhvb2s7CiNlbmRp
ZgoJCQljYWxsdGltZSA9IGZpeHVwX2RlYnVnX3N0YXJ0KGRldiwgaG9vayk7CgkJCWhvb2soZGV2
KTsKCQkJZml4dXBfZGVidWdfcmVwb3J0KGRldiwgY2FsbHRpbWUsIGhvb2spOwoJCX0KfQoKZXh0
ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19zdGFydF9wY2lfZml4dXBzX2Vhcmx5W107CmV4dGVybiBz
dHJ1Y3QgcGNpX2ZpeHVwIF9fZW5kX3BjaV9maXh1cHNfZWFybHlbXTsKZXh0ZXJuIHN0cnVjdCBw
Y2lfZml4dXAgX19zdGFydF9wY2lfZml4dXBzX2hlYWRlcltdOwpleHRlcm4gc3RydWN0IHBjaV9m
aXh1cCBfX2VuZF9wY2lfZml4dXBzX2hlYWRlcltdOwpleHRlcm4gc3RydWN0IHBjaV9maXh1cCBf
X3N0YXJ0X3BjaV9maXh1cHNfZmluYWxbXTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19lbmRf
cGNpX2ZpeHVwc19maW5hbFtdOwpleHRlcm4gc3RydWN0IHBjaV9maXh1cCBfX3N0YXJ0X3BjaV9m
aXh1cHNfZW5hYmxlW107CmV4dGVybiBzdHJ1Y3QgcGNpX2ZpeHVwIF9fZW5kX3BjaV9maXh1cHNf
ZW5hYmxlW107CmV4dGVybiBzdHJ1Y3QgcGNpX2ZpeHVwIF9fc3RhcnRfcGNpX2ZpeHVwc19yZXN1
bWVbXTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19lbmRfcGNpX2ZpeHVwc19yZXN1bWVbXTsK
ZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19zdGFydF9wY2lfZml4dXBzX3Jlc3VtZV9lYXJseVtd
OwpleHRlcm4gc3RydWN0IHBjaV9maXh1cCBfX2VuZF9wY2lfZml4dXBzX3Jlc3VtZV9lYXJseVtd
OwpleHRlcm4gc3RydWN0IHBjaV9maXh1cCBfX3N0YXJ0X3BjaV9maXh1cHNfc3VzcGVuZFtdOwpl
eHRlcm4gc3RydWN0IHBjaV9maXh1cCBfX2VuZF9wY2lfZml4dXBzX3N1c3BlbmRbXTsKZXh0ZXJu
IHN0cnVjdCBwY2lfZml4dXAgX19zdGFydF9wY2lfZml4dXBzX3N1c3BlbmRfbGF0ZVtdOwpleHRl
cm4gc3RydWN0IHBjaV9maXh1cCBfX2VuZF9wY2lfZml4dXBzX3N1c3BlbmRfbGF0ZVtdOwoKc3Rh
dGljIGJvb2wgcGNpX2FwcGx5X2ZpeHVwX2ZpbmFsX3F1aXJrczsKCnZvaWQgcGNpX2ZpeHVwX2Rl
dmljZShlbnVtIHBjaV9maXh1cF9wYXNzIHBhc3MsIHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXN0
cnVjdCBwY2lfZml4dXAgKnN0YXJ0LCAqZW5kOwoKCXN3aXRjaCAocGFzcykgewoJY2FzZSBwY2lf
Zml4dXBfZWFybHk6CgkJc3RhcnQgPSBfX3N0YXJ0X3BjaV9maXh1cHNfZWFybHk7CgkJZW5kID0g
X19lbmRfcGNpX2ZpeHVwc19lYXJseTsKCQlicmVhazsKCgljYXNlIHBjaV9maXh1cF9oZWFkZXI6
CgkJc3RhcnQgPSBfX3N0YXJ0X3BjaV9maXh1cHNfaGVhZGVyOwoJCWVuZCA9IF9fZW5kX3BjaV9m
aXh1cHNfaGVhZGVyOwoJCWJyZWFrOwoKCWNhc2UgcGNpX2ZpeHVwX2ZpbmFsOgoJCWlmICghcGNp
X2FwcGx5X2ZpeHVwX2ZpbmFsX3F1aXJrcykKCQkJcmV0dXJuOwoJCXN0YXJ0ID0gX19zdGFydF9w
Y2lfZml4dXBzX2ZpbmFsOwoJCWVuZCA9IF9fZW5kX3BjaV9maXh1cHNfZmluYWw7CgkJYnJlYWs7
CgoJY2FzZSBwY2lfZml4dXBfZW5hYmxlOgoJCXN0YXJ0ID0gX19zdGFydF9wY2lfZml4dXBzX2Vu
YWJsZTsKCQllbmQgPSBfX2VuZF9wY2lfZml4dXBzX2VuYWJsZTsKCQlicmVhazsKCgljYXNlIHBj
aV9maXh1cF9yZXN1bWU6CgkJc3RhcnQgPSBfX3N0YXJ0X3BjaV9maXh1cHNfcmVzdW1lOwoJCWVu
ZCA9IF9fZW5kX3BjaV9maXh1cHNfcmVzdW1lOwoJCWJyZWFrOwoKCWNhc2UgcGNpX2ZpeHVwX3Jl
c3VtZV9lYXJseToKCQlzdGFydCA9IF9fc3RhcnRfcGNpX2ZpeHVwc19yZXN1bWVfZWFybHk7CgkJ
ZW5kID0gX19lbmRfcGNpX2ZpeHVwc19yZXN1bWVfZWFybHk7CgkJYnJlYWs7CgoJY2FzZSBwY2lf
Zml4dXBfc3VzcGVuZDoKCQlzdGFydCA9IF9fc3RhcnRfcGNpX2ZpeHVwc19zdXNwZW5kOwoJCWVu
ZCA9IF9fZW5kX3BjaV9maXh1cHNfc3VzcGVuZDsKCQlicmVhazsKCgljYXNlIHBjaV9maXh1cF9z
dXNwZW5kX2xhdGU6CgkJc3RhcnQgPSBfX3N0YXJ0X3BjaV9maXh1cHNfc3VzcGVuZF9sYXRlOwoJ
CWVuZCA9IF9fZW5kX3BjaV9maXh1cHNfc3VzcGVuZF9sYXRlOwoJCWJyZWFrOwoKCWRlZmF1bHQ6
CgkJLyogc3R1cGlkIGNvbXBpbGVyIHdhcm5pbmcsIHlvdSB3b3VsZCB0aGluayB3aXRoIGFuIGVu
dW0uLi4gKi8KCQlyZXR1cm47Cgl9CglwY2lfZG9fZml4dXBzKGRldiwgc3RhcnQsIGVuZCk7Cn0K
RVhQT1JUX1NZTUJPTChwY2lfZml4dXBfZGV2aWNlKTsKCnN0YXRpYyBpbnQgX19pbml0IHBjaV9h
cHBseV9maW5hbF9xdWlya3Modm9pZCkKewoJc3RydWN0IHBjaV9kZXYgKmRldiA9IE5VTEw7Cgl1
OCBjbHMgPSAwOwoJdTggdG1wOwoKCWlmIChwY2lfY2FjaGVfbGluZV9zaXplKQoJCXByX2luZm8o
IlBDSTogQ0xTICV1IGJ5dGVzXG4iLCBwY2lfY2FjaGVfbGluZV9zaXplIDw8IDIpOwoKCXBjaV9h
cHBseV9maXh1cF9maW5hbF9xdWlya3MgPSB0cnVlOwoJZm9yX2VhY2hfcGNpX2RldihkZXYpIHsK
CQlwY2lfZml4dXBfZGV2aWNlKHBjaV9maXh1cF9maW5hbCwgZGV2KTsKCQkvKgoJCSAqIElmIGFy
Y2ggaGFzbid0IHNldCBpdCBleHBsaWNpdGx5IHlldCwgdXNlIHRoZSBDTFMKCQkgKiB2YWx1ZSBz
aGFyZWQgYnkgYWxsIFBDSSBkZXZpY2VzLiAgSWYgdGhlcmUncyBhCgkJICogbWlzbWF0Y2gsIGZh
bGwgYmFjayB0byB0aGUgZGVmYXVsdCB2YWx1ZS4KCQkgKi8KCQlpZiAoIXBjaV9jYWNoZV9saW5l
X3NpemUpIHsKCQkJcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBQQ0lfQ0FDSEVfTElORV9TSVpF
LCAmdG1wKTsKCQkJaWYgKCFjbHMpCgkJCQljbHMgPSB0bXA7CgkJCWlmICghdG1wIHx8IGNscyA9
PSB0bXApCgkJCQljb250aW51ZTsKCgkJCXBjaV9pbmZvKGRldiwgIkNMUyBtaXNtYXRjaCAoJXUg
IT0gJXUpLCB1c2luZyAldSBieXRlc1xuIiwKCQkJICAgICAgICAgY2xzIDw8IDIsIHRtcCA8PCAy
LAoJCQkJIHBjaV9kZmxfY2FjaGVfbGluZV9zaXplIDw8IDIpOwoJCQlwY2lfY2FjaGVfbGluZV9z
aXplID0gcGNpX2RmbF9jYWNoZV9saW5lX3NpemU7CgkJfQoJfQoKCWlmICghcGNpX2NhY2hlX2xp
bmVfc2l6ZSkgewoJCXByX2luZm8oIlBDSTogQ0xTICV1IGJ5dGVzLCBkZWZhdWx0ICV1XG4iLCBj
bHMgPDwgMiwKCQkJcGNpX2RmbF9jYWNoZV9saW5lX3NpemUgPDwgMik7CgkJcGNpX2NhY2hlX2xp
bmVfc2l6ZSA9IGNscyA/IGNscyA6IHBjaV9kZmxfY2FjaGVfbGluZV9zaXplOwoJfQoKCXJldHVy
biAwOwp9CmZzX2luaXRjYWxsX3N5bmMocGNpX2FwcGx5X2ZpbmFsX3F1aXJrcyk7CgovKgogKiBE
ZWNvZGluZyBzaG91bGQgYmUgZGlzYWJsZWQgZm9yIGEgUENJIGRldmljZSBkdXJpbmcgQkFSIHNp
emluZyB0byBhdm9pZAogKiBjb25mbGljdC4gQnV0IGRvaW5nIHNvIG1heSBjYXVzZSBwcm9ibGVt
cyBvbiBob3N0IGJyaWRnZSBhbmQgcGVyaGFwcyBvdGhlcgogKiBrZXkgc3lzdGVtIGRldmljZXMu
IEZvciBkZXZpY2VzIHRoYXQgbmVlZCB0byBoYXZlIG1taW8gZGVjb2RpbmcgYWx3YXlzLW9uLAog
KiB3ZSBuZWVkIHRvIHNldCB0aGUgZGV2LT5tbWlvX2Fsd2F5c19vbiBiaXQuCiAqLwpzdGF0aWMg
dm9pZCBxdWlya19tbWlvX2Fsd2F5c19vbihzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPm1t
aW9fYWx3YXlzX29uID0gMTsKfQpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19FQVJMWShQQ0lfQU5Z
X0lELCBQQ0lfQU5ZX0lELAoJCQkJUENJX0NMQVNTX0JSSURHRV9IT1NULCA4LCBxdWlya19tbWlv
X2Fsd2F5c19vbik7CgovKgogKiBUaGUgTWVsbGFub3ggVGF2b3IgZGV2aWNlIGdpdmVzIGZhbHNl
IHBvc2l0aXZlIHBhcml0eSBlcnJvcnMuICBNYXJrIHRoaXMKICogZGV2aWNlIHdpdGggYSBicm9r
ZW5fcGFyaXR5X3N0YXR1cyB0byBhbGxvdyBQQ0kgc2Nhbm5pbmcgY29kZSB0byAic2tpcCIKICog
dGhpcyBub3cgYmxhY2tsaXN0ZWQgZGV2aWNlLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfbWVsbGFu
b3hfdGF2b3Ioc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2LT5icm9rZW5fcGFyaXR5X3N0YXR1
cyA9IDE7CS8qIFRoaXMgZGV2aWNlIGdpdmVzIGZhbHNlIHBvc2l0aXZlcyAqLwp9CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfTUVMTEFOT1gsIFBDSV9ERVZJQ0VfSURfTUVM
TEFOT1hfVEFWT1IsIHF1aXJrX21lbGxhbm94X3Rhdm9yKTsKREVDTEFSRV9QQ0lfRklYVVBfRklO
QUwoUENJX1ZFTkRPUl9JRF9NRUxMQU5PWCwgUENJX0RFVklDRV9JRF9NRUxMQU5PWF9UQVZPUl9C
UklER0UsIHF1aXJrX21lbGxhbm94X3Rhdm9yKTsKCi8qCiAqIERlYWwgd2l0aCBicm9rZW4gQklP
U2VzIHRoYXQgbmVnbGVjdCB0byBlbmFibGUgcGFzc2l2ZSByZWxlYXNlLAogKiB3aGljaCBjYW4g
Y2F1c2UgcHJvYmxlbXMgaW4gY29tYmluYXRpb24gd2l0aCB0aGUgODI0NDFGWC9QUHJvIE1UUlJz
CiAqLwpzdGF0aWMgdm9pZCBxdWlya19wYXNzaXZlX3JlbGVhc2Uoc3RydWN0IHBjaV9kZXYgKmRl
dikKewoJc3RydWN0IHBjaV9kZXYgKmQgPSBOVUxMOwoJdW5zaWduZWQgY2hhciBkbGM7CgoJLyoK
CSAqIFdlIGhhdmUgdG8gbWFrZSBzdXJlIGEgcGFydGljdWxhciBiaXQgaXMgc2V0IGluIHRoZSBQ
SUlYMwoJICogSVNBIGJyaWRnZSwgc28gd2UgaGF2ZSB0byBnbyBvdXQgYW5kIGZpbmQgaXQuCgkg
Ki8KCXdoaWxlICgoZCA9IHBjaV9nZXRfZGV2aWNlKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9E
RVZJQ0VfSURfSU5URUxfODIzNzFTQl8wLCBkKSkpIHsKCQlwY2lfcmVhZF9jb25maWdfYnl0ZShk
LCAweDgyLCAmZGxjKTsKCQlpZiAoIShkbGMgJiAxPDwxKSkgewoJCQlwY2lfaW5mbyhkLCAiUElJ
WDM6IEVuYWJsaW5nIFBhc3NpdmUgUmVsZWFzZVxuIik7CgkJCWRsYyB8PSAxPDwxOwoJCQlwY2lf
d3JpdGVfY29uZmlnX2J5dGUoZCwgMHg4MiwgZGxjKTsKCQl9Cgl9Cn0KREVDTEFSRV9QQ0lfRklY
VVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjQ0MSwJ
cXVpcmtfcGFzc2l2ZV9yZWxlYXNlKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9WRU5E
T1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI0NDEsCXF1aXJrX3Bhc3NpdmVfcmVs
ZWFzZSk7CgovKgogKiBUaGUgVklBIFZQMi9WUDMvTVZQMyBzZWVtIHRvIGhhdmUgc29tZSAnZmVh
dHVyZXMnLiBUaGVyZSBtYXkgYmUgYQogKiB3b3JrYXJvdW5kIGJ1dCBWSUEgZG9uJ3QgYW5zd2Vy
IHF1ZXJpZXMuIElmIHlvdSBoYXBwZW4gdG8gaGF2ZSBnb29kCiAqIGNvbnRhY3RzIGF0IFZJQSBh
c2sgdGhlbSBmb3IgbWUgcGxlYXNlIC0tIEFsYW4KICoKICogVGhpcyBhcHBlYXJzIHRvIGJlIEJJ
T1Mgbm90IHZlcnNpb24gZGVwZW5kZW50LiBTbyBwcmVzdW1hYmx5IHRoZXJlIGlzIGEKICogY2hp
cHNldCBsZXZlbCBmaXguCiAqLwpzdGF0aWMgdm9pZCBxdWlya19pc2FfZG1hX2hhbmdzKHN0cnVj
dCBwY2lfZGV2ICpkZXYpCnsKCWlmICghaXNhX2RtYV9icmlkZ2VfYnVnZ3kpIHsKCQlpc2FfZG1h
X2JyaWRnZV9idWdneSA9IDE7CgkJcGNpX2luZm8oZGV2LCAiQWN0aXZhdGluZyBJU0EgRE1BIGhh
bmcgd29ya2Fyb3VuZHNcbiIpOwoJfQp9Ci8qCiAqIEl0J3Mgbm90IHRvdGFsbHkgY2xlYXIgd2hp
Y2ggY2hpcHNldHMgYXJlIHRoZSBwcm9ibGVtYXRpYyBvbmVzLiAgV2Uga25vdwogKiA4MkM1ODYg
YW5kIDgyQzU5NiB2YXJpYW50cyBhcmUgYWZmZWN0ZWQuCiAqLwpERUNMQVJFX1BDSV9GSVhVUF9G
SU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNTg2XzAsCXF1aXJr
X2lzYV9kbWFfaGFuZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJ
QSwJUENJX0RFVklDRV9JRF9WSUFfODJDNTk2LAlxdWlya19pc2FfZG1hX2hhbmdzKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgICAgUENJX0RFVklDRV9JRF9J
TlRFTF84MjM3MVNCXzAsICBxdWlya19pc2FfZG1hX2hhbmdzKTsKREVDTEFSRV9QQ0lfRklYVVBf
RklOQUwoUENJX1ZFTkRPUl9JRF9BTCwJUENJX0RFVklDRV9JRF9BTF9NMTUzMywJCXF1aXJrX2lz
YV9kbWFfaGFuZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX05FQywJ
UENJX0RFVklDRV9JRF9ORUNfQ0JVU18xLAlxdWlya19pc2FfZG1hX2hhbmdzKTsKREVDTEFSRV9Q
Q0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9ORUMsCVBDSV9ERVZJQ0VfSURfTkVDX0NCVVNf
MiwJcXVpcmtfaXNhX2RtYV9oYW5ncyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5E
T1JfSURfTkVDLAlQQ0lfREVWSUNFX0lEX05FQ19DQlVTXzMsCXF1aXJrX2lzYV9kbWFfaGFuZ3Mp
OwoKLyoKICogSW50ZWwgTk0xMCAiVGlnZXJQb2ludCIgTFBDIFBNMWFfU1RTLkJNX1NUUyBtdXN0
IGJlIGNsZWFyCiAqIGZvciBzb21lIEhUIG1hY2hpbmVzIHRvIHVzZSBDNCB3L28gaGFuZ2luZy4K
ICovCnN0YXRpYyB2b2lkIHF1aXJrX3RpZ2VycG9pbnRfYm1fc3RzKHN0cnVjdCBwY2lfZGV2ICpk
ZXYpCnsKCXUzMiBwbWJhc2U7Cgl1MTYgcG0xYTsKCglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2
LCAweDQwLCAmcG1iYXNlKTsKCXBtYmFzZSA9IHBtYmFzZSAmIDB4ZmY4MDsKCXBtMWEgPSBpbnco
cG1iYXNlKTsKCglpZiAocG0xYSAmIDB4MTApIHsKCQlwY2lfaW5mbyhkZXYsIEZXX0JVRyAiVGln
ZXJQb2ludCBMUEMuQk1fU1RTIGNsZWFyZWRcbiIpOwoJCW91dHcoMHgxMCwgcG1iYXNlKTsKCX0K
fQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0RFVklD
RV9JRF9JTlRFTF9UR1BfTFBDLCBxdWlya190aWdlcnBvaW50X2JtX3N0cyk7CgovKiBDaGlwc2V0
cyB3aGVyZSBQQ0ktPlBDSSB0cmFuc2ZlcnMgdmFuaXNoIG9yIGhhbmcgKi8Kc3RhdGljIHZvaWQg
cXVpcmtfbm9wY2lwY2koc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKChwY2lfcGNpX3Byb2Js
ZW1zICYgUENJUENJX0ZBSUwpID09IDApIHsKCQlwY2lfaW5mbyhkZXYsICJEaXNhYmxpbmcgZGly
ZWN0IFBDSS9QQ0kgdHJhbnNmZXJzXG4iKTsKCQlwY2lfcGNpX3Byb2JsZW1zIHw9IFBDSVBDSV9G
QUlMOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9E
RVZJQ0VfSURfU0lfNTU5NywJCXF1aXJrX25vcGNpcGNpKTsKREVDTEFSRV9QQ0lfRklYVVBfRklO
QUwoUENJX1ZFTkRPUl9JRF9TSSwJUENJX0RFVklDRV9JRF9TSV80OTYsCQlxdWlya19ub3BjaXBj
aSk7CgpzdGF0aWMgdm9pZCBxdWlya19ub3BjaWFtZChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1
OCByZXY7CglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4MDgsICZyZXYpOwoJaWYgKHJldiA9
PSAweDEzKSB7CgkJLyogRXJyYXR1bSAyNCAqLwoJCXBjaV9pbmZvKGRldiwgIkNoaXBzZXQgZXJy
YXR1bTogRGlzYWJsaW5nIGRpcmVjdCBQQ0kvQUdQIHRyYW5zZmVyc1xuIik7CgkJcGNpX3BjaV9w
cm9ibGVtcyB8PSBQQ0lBR1BfRkFJTDsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lf
VkVORE9SX0lEX0FNRCwJUENJX0RFVklDRV9JRF9BTURfODE1MV8wLAlxdWlya19ub3BjaWFtZCk7
CgovKiBUcml0b24gcmVxdWlyZXMgd29ya2Fyb3VuZHMgdG8gYmUgdXNlZCBieSB0aGUgZHJpdmVy
cyAqLwpzdGF0aWMgdm9pZCBxdWlya190cml0b24oc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYg
KChwY2lfcGNpX3Byb2JsZW1zJlBDSVBDSV9UUklUT04pID09IDApIHsKCQlwY2lfaW5mbyhkZXYs
ICJMaW1pdGluZyBkaXJlY3QgUENJL1BDSSB0cmFuc2ZlcnNcbiIpOwoJCXBjaV9wY2lfcHJvYmxl
bXMgfD0gUENJUENJX1RSSVRPTjsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyNDM3LAlxdWlya190cml0b24pOwpE
RUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lE
X0lOVEVMXzgyNDM3VlgsCXF1aXJrX3RyaXRvbik7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI0MzksCXF1aXJrX3RyaXRv
bik7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJ
Q0VfSURfSU5URUxfODI0MzlUWCwJcXVpcmtfdHJpdG9uKTsKCi8qCiAqIFZJQSBBcG9sbG8gS1Qx
MzMgbmVlZHMgUENJIGxhdGVuY3kgcGF0Y2gKICogTWFkZSBhY2NvcmRpbmcgdG8gYSBXaW5kb3dz
IGRyaXZlci1iYXNlZCBwYXRjaCBieSBHZW9yZ2UgRS4gQnJlZXNlOwogKiBzZWUgUENJIExhdGVu
Y3kgQWRqdXN0IG9uIGh0dHA6Ly93d3cudmlhaGFyZHdhcmUuY29tL2Rvd25sb2FkL3ZpYXR3ZWFr
LnNodG0KICogQWxzbyBzZWUgaHR0cDovL3d3dy5hdS1qYS5vcmcvcmV2aWV3LWt0MTMzYS0xLWVu
LnBodG1sIGZvciB0aGUgaW5mbyBvbgogKiB3aGljaCBNciBCcmVlc2UgYmFzZWQgaGlzIHdvcmsu
CiAqCiAqIFVwZGF0ZWQgYmFzZWQgb24gZnVydGhlciBpbmZvcm1hdGlvbiBmcm9tIHRoZSBzaXRl
IGFuZCBhbHNvIG9uCiAqIGluZm9ybWF0aW9uIHByb3ZpZGVkIGJ5IFZJQQogKi8Kc3RhdGljIHZv
aWQgcXVpcmtfdmlhbGF0ZW5jeShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglzdHJ1Y3QgcGNpX2Rl
diAqcDsKCXU4IGJ1c2FyYjsKCgkvKgoJICogT2ssIHdlIGhhdmUgYSBwb3RlbnRpYWwgcHJvYmxl
bSBjaGlwc2V0IGhlcmUuIE5vdyBzZWUgaWYgd2UgaGF2ZQoJICogYSBidWdneSBzb3V0aGJyaWRn
ZS4KCSAqLwoJcCA9IHBjaV9nZXRfZGV2aWNlKFBDSV9WRU5ET1JfSURfVklBLCBQQ0lfREVWSUNF
X0lEX1ZJQV84MkM2ODYsIE5VTEwpOwoJaWYgKHAgIT0gTlVMTCkgewoKCQkvKgoJCSAqIDB4NDAg
LSAweDRmID09IDY4NkIsIDB4MTAgLSAweDJmID09IDY4NkE7CgkJICogdGhhbmtzIERhbiBIb2xs
aXMuCgkJICogQ2hlY2sgZm9yIGJ1Z2d5IHBhcnQgcmV2aXNpb25zCgkJICovCgkJaWYgKHAtPnJl
dmlzaW9uIDwgMHg0MCB8fCBwLT5yZXZpc2lvbiA+IDB4NDIpCgkJCWdvdG8gZXhpdDsKCX0gZWxz
ZSB7CgkJcCA9IHBjaV9nZXRfZGV2aWNlKFBDSV9WRU5ET1JfSURfVklBLCBQQ0lfREVWSUNFX0lE
X1ZJQV84MjMxLCBOVUxMKTsKCQlpZiAocCA9PSBOVUxMKQkvKiBObyBwcm9ibGVtIHBhcnRzICov
CgkJCWdvdG8gZXhpdDsKCgkJLyogQ2hlY2sgZm9yIGJ1Z2d5IHBhcnQgcmV2aXNpb25zICovCgkJ
aWYgKHAtPnJldmlzaW9uIDwgMHgxMCB8fCBwLT5yZXZpc2lvbiA+IDB4MTIpCgkJCWdvdG8gZXhp
dDsKCX0KCgkvKgoJICogT2sgd2UgaGF2ZSB0aGUgcHJvYmxlbS4gTm93IHNldCB0aGUgUENJIG1h
c3RlciBncmFudCB0byBvY2N1cgoJICogZXZlcnkgbWFzdGVyIGdyYW50LiBUaGUgYXBwYXJlbnQg
YnVnIGlzIHRoYXQgdW5kZXIgaGlnaCBQQ0kgbG9hZAoJICogKHF1aXRlIGNvbW1vbiBpbiBMaW51
eCBvZiBjb3Vyc2UpIHlvdSBjYW4gZ2V0IGRhdGEgbG9zcyB3aGVuIHRoZQoJICogQ1BVIGlzIGhl
bGQgb2ZmIHRoZSBidXMgZm9yIDMgYnVzIG1hc3RlciByZXF1ZXN0cy4gIFRoaXMgaGFwcGVucwoJ
ICogdG8gaW5jbHVkZSB0aGUgSURFIGNvbnRyb2xsZXJzLi4uLgoJICoKCSAqIFZJQSBvbmx5IGFw
cGx5IHRoaXMgZml4IHdoZW4gYW4gU0IgTGl2ZSEgaXMgcHJlc2VudCBidXQgdW5kZXIKCSAqIGJv
dGggTGludXggYW5kIFdpbmRvd3MgdGhpcyBpc24ndCBlbm91Z2gsIGFuZCB3ZSBoYXZlIHNlZW4K
CSAqIGNvcnJ1cHRpb24gd2l0aG91dCBTQiBMaXZlISBidXQgd2l0aCB0aGluZ3MgbGlrZSAzIFVE
TUEgSURFCgkgKiBjb250cm9sbGVycy4gU28gd2UgaWdub3JlIHRoYXQgYml0IG9mIHRoZSBWSUEg
cmVjb21tZW5kYXRpb24uLgoJICovCglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4NzYsICZi
dXNhcmIpOwoKCS8qCgkgKiBTZXQgYml0IDQgYW5kIGJpdCA1IG9mIGJ5dGUgNzYgdG8gMHgwMQoJ
ICogIk1hc3RlciBwcmlvcml0eSByb3RhdGlvbiBvbiBldmVyeSBQQ0kgbWFzdGVyIGdyYW50IgoJ
ICovCglidXNhcmIgJj0gfigxPDw1KTsKCWJ1c2FyYiB8PSAoMTw8NCk7CglwY2lfd3JpdGVfY29u
ZmlnX2J5dGUoZGV2LCAweDc2LCBidXNhcmIpOwoJcGNpX2luZm8oZGV2LCAiQXBwbHlpbmcgVklB
IHNvdXRoYnJpZGdlIHdvcmthcm91bmRcbiIpOwpleGl0OgoJcGNpX2Rldl9wdXQocCk7Cn0KREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0VfSURfVklB
XzgzNjNfMCwJcXVpcmtfdmlhbGF0ZW5jeSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MzcxXzEsCXF1aXJrX3ZpYWxhdGVuY3kp
OwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9J
RF9WSUFfODM2MSwJCXF1aXJrX3ZpYWxhdGVuY3kpOwovKiBNdXN0IHJlc3RvcmUgdGhpcyBvbiBh
IHJlc3VtZSBmcm9tIFJBTSAqLwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9J
RF9WSUEsCVBDSV9ERVZJQ0VfSURfVklBXzgzNjNfMCwJcXVpcmtfdmlhbGF0ZW5jeSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFf
ODM3MV8xLAlxdWlya192aWFsYXRlbmN5KTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9W
RU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MzYxLAkJcXVpcmtfdmlhbGF0ZW5jeSk7
CgovKiBWSUEgQXBvbGxvIFZQMyBuZWVkcyBFVEJGIG9uIEJUODQ4Lzg3OCAqLwpzdGF0aWMgdm9p
ZCBxdWlya192aWFldGJmKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWlmICgocGNpX3BjaV9wcm9i
bGVtcyZQQ0lQQ0lfVklBRVRCRikgPT0gMCkgewoJCXBjaV9pbmZvKGRldiwgIkxpbWl0aW5nIGRp
cmVjdCBQQ0kvUENJIHRyYW5zZmVyc1xuIik7CgkJcGNpX3BjaV9wcm9ibGVtcyB8PSBQQ0lQQ0lf
VklBRVRCRjsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwJ
UENJX0RFVklDRV9JRF9WSUFfODJDNTk3XzAsCXF1aXJrX3ZpYWV0YmYpOwoKc3RhdGljIHZvaWQg
cXVpcmtfdnNmeChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAoKHBjaV9wY2lfcHJvYmxlbXMm
UENJUENJX1ZTRlgpID09IDApIHsKCQlwY2lfaW5mbyhkZXYsICJMaW1pdGluZyBkaXJlY3QgUENJ
L1BDSSB0cmFuc2ZlcnNcbiIpOwoJCXBjaV9wY2lfcHJvYmxlbXMgfD0gUENJUENJX1ZTRlg7Cgl9
Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0Vf
SURfVklBXzgyQzU3NiwJcXVpcmtfdnNmeCk7CgovKgogKiBBTGkgTWFnaWsgcmVxdWlyZXMgd29y
a2Fyb3VuZHMgdG8gYmUgdXNlZCBieSB0aGUgZHJpdmVycyB0aGF0IERNQSB0byBBR1AKICogc3Bh
Y2UuIExhdGVuY3kgbXVzdCBiZSBzZXQgdG8gMHhBIGFuZCBUcml0b24gd29ya2Fyb3VuZCBhcHBs
aWVkIHRvby4KICogW0luZm8ga2luZGx5IHByb3ZpZGVkIGJ5IEFMaV0KICovCnN0YXRpYyB2b2lk
IHF1aXJrX2FsaW1hZ2lrKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWlmICgocGNpX3BjaV9wcm9i
bGVtcyZQQ0lQQ0lfQUxJTUFHSUspID09IDApIHsKCQlwY2lfaW5mbyhkZXYsICJMaW1pdGluZyBk
aXJlY3QgUENJL1BDSSB0cmFuc2ZlcnNcbiIpOwoJCXBjaV9wY2lfcHJvYmxlbXMgfD0gUENJUENJ
X0FMSU1BR0lLfFBDSVBDSV9UUklUT047Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJ
X1ZFTkRPUl9JRF9BTCwJUENJX0RFVklDRV9JRF9BTF9NMTY0NywJCXF1aXJrX2FsaW1hZ2lrKTsK
REVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BTCwJUENJX0RFVklDRV9JRF9B
TF9NMTY1MSwJCXF1aXJrX2FsaW1hZ2lrKTsKCi8qIE5hdG9tYSBoYXMgc29tZSBpbnRlcmVzdGlu
ZyBib3VuZGFyeSBjb25kaXRpb25zIHdpdGggWm9yYW4gc3R1ZmYgYXQgbGVhc3QgKi8Kc3RhdGlj
IHZvaWQgcXVpcmtfbmF0b21hKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWlmICgocGNpX3BjaV9w
cm9ibGVtcyZQQ0lQQ0lfTkFUT01BKSA9PSAwKSB7CgkJcGNpX2luZm8oZGV2LCAiTGltaXRpbmcg
ZGlyZWN0IFBDSS9QQ0kgdHJhbnNmZXJzXG4iKTsKCQlwY2lfcGNpX3Byb2JsZW1zIHw9IFBDSVBD
SV9OQVRPTUE7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRF
TCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjQ0MSwJcXVpcmtfbmF0b21hKTsKREVDTEFSRV9QQ0lf
RklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjQ0
M0xYXzAsCXF1aXJrX25hdG9tYSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI0NDNMWF8xLAlxdWlya19uYXRvbWEpOwpE
RUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lE
X0lOVEVMXzgyNDQzQlhfMCwJcXVpcmtfbmF0b21hKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
UENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjQ0M0JYXzEsCXF1aXJr
X25hdG9tYSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBD
SV9ERVZJQ0VfSURfSU5URUxfODI0NDNCWF8yLAlxdWlya19uYXRvbWEpOwoKLyoKICogVGhpcyBj
aGlwIGNhbiBjYXVzZSBQQ0kgcGFyaXR5IGVycm9ycyBpZiBjb25maWcgcmVnaXN0ZXIgMHhBMCBp
cyByZWFkCiAqIHdoaWxlIERNQXMgYXJlIG9jY3VycmluZy4KICovCnN0YXRpYyB2b2lkIHF1aXJr
X2NpdHJpbmUoc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2LT5jZmdfc2l6ZSA9IDB4QTA7Cn0K
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSUJNLAlQQ0lfREVWSUNFX0lE
X0lCTV9DSVRSSU5FLAlxdWlya19jaXRyaW5lKTsKCi8qCiAqIFRoaXMgY2hpcCBjYW4gY2F1c2Ug
YnVzIGxvY2t1cHMgaWYgY29uZmlnIGFkZHJlc3NlcyBhYm92ZSAweDYwMAogKiBhcmUgcmVhZCBv
ciB3cml0dGVuLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfbmZwNjAwMChzdHJ1Y3QgcGNpX2RldiAq
ZGV2KQp7CglkZXYtPmNmZ19zaXplID0gMHg2MDA7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVS
KFBDSV9WRU5ET1JfSURfTkVUUk9OT01FLAlQQ0lfREVWSUNFX0lEX05FVFJPTk9NRV9ORlA0MDAw
LAlxdWlya19uZnA2MDAwKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
TkVUUk9OT01FLAlQQ0lfREVWSUNFX0lEX05FVFJPTk9NRV9ORlA2MDAwLAlxdWlya19uZnA2MDAw
KTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTkVUUk9OT01FLAlQQ0lf
REVWSUNFX0lEX05FVFJPTk9NRV9ORlA1MDAwLAlxdWlya19uZnA2MDAwKTsKREVDTEFSRV9QQ0lf
RklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTkVUUk9OT01FLAlQQ0lfREVWSUNFX0lEX05FVFJP
Tk9NRV9ORlA2MDAwX1ZGLAlxdWlya19uZnA2MDAwKTsKCi8qICBPbiBJQk0gQ3JvY29kaWxlIGlw
ciBTQVMgYWRhcHRlcnMsIGV4cGFuZCBCQVIgdG8gc3lzdGVtIHBhZ2Ugc2l6ZSAqLwpzdGF0aWMg
dm9pZCBxdWlya19leHRlbmRfYmFyX3RvX3BhZ2Uoc3RydWN0IHBjaV9kZXYgKmRldikKewoJaW50
IGk7CgoJZm9yIChpID0gMDsgaSA8PSBQQ0lfU1REX1JFU09VUkNFX0VORDsgaSsrKSB7CgkJc3Ry
dWN0IHJlc291cmNlICpyID0gJmRldi0+cmVzb3VyY2VbaV07CgoJCWlmIChyLT5mbGFncyAmIElP
UkVTT1VSQ0VfTUVNICYmIHJlc291cmNlX3NpemUocikgPCBQQUdFX1NJWkUpIHsKCQkJci0+ZW5k
ID0gUEFHRV9TSVpFIC0gMTsKCQkJci0+c3RhcnQgPSAwOwoJCQlyLT5mbGFncyB8PSBJT1JFU09V
UkNFX1VOU0VUOwoJCQlwY2lfaW5mbyhkZXYsICJleHBhbmRlZCBCQVIgJWQgdG8gcGFnZSBzaXpl
OiAlcFJcbiIsCgkJCQkgaSwgcik7CgkJfQoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX0lCTSwgMHgwMzRhLCBxdWlya19leHRlbmRfYmFyX3RvX3BhZ2UpOwoKLyoK
ICogUzMgODY4IGFuZCA5NjggY2hpcHMgcmVwb3J0IHJlZ2lvbiBzaXplIGVxdWFsIHRvIDMyTSwg
YnV0IHRoZXkgZGVjb2RlIDY0TS4KICogSWYgaXQncyBuZWVkZWQsIHJlLWFsbG9jYXRlIHRoZSBy
ZWdpb24uCiAqLwpzdGF0aWMgdm9pZCBxdWlya19zM182NE0oc3RydWN0IHBjaV9kZXYgKmRldikK
ewoJc3RydWN0IHJlc291cmNlICpyID0gJmRldi0+cmVzb3VyY2VbMF07CgoJaWYgKChyLT5zdGFy
dCAmIDB4M2ZmZmZmZikgfHwgci0+ZW5kICE9IHItPnN0YXJ0ICsgMHgzZmZmZmZmKSB7CgkJci0+
ZmxhZ3MgfD0gSU9SRVNPVVJDRV9VTlNFVDsKCQlyLT5zdGFydCA9IDA7CgkJci0+ZW5kID0gMHgz
ZmZmZmZmOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1MzLAlQ
Q0lfREVWSUNFX0lEX1MzXzg2OCwJCXF1aXJrX3MzXzY0TSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX1MzLAlQQ0lfREVWSUNFX0lEX1MzXzk2OCwJCXF1aXJrX3MzXzY0
TSk7CgpzdGF0aWMgdm9pZCBxdWlya19pbyhzdHJ1Y3QgcGNpX2RldiAqZGV2LCBpbnQgcG9zLCB1
bnNpZ25lZCBzaXplLAoJCSAgICAgY29uc3QgY2hhciAqbmFtZSkKewoJdTMyIHJlZ2lvbjsKCXN0
cnVjdCBwY2lfYnVzX3JlZ2lvbiBidXNfcmVnaW9uOwoJc3RydWN0IHJlc291cmNlICpyZXMgPSBk
ZXYtPnJlc291cmNlICsgcG9zOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIFBDSV9CQVNF
X0FERFJFU1NfMCArIChwb3MgPDwgMiksICZyZWdpb24pOwoKCWlmICghcmVnaW9uKQoJCXJldHVy
bjsKCglyZXMtPm5hbWUgPSBwY2lfbmFtZShkZXYpOwoJcmVzLT5mbGFncyA9IHJlZ2lvbiAmIH5Q
Q0lfQkFTRV9BRERSRVNTX0lPX01BU0s7CglyZXMtPmZsYWdzIHw9CgkJKElPUkVTT1VSQ0VfSU8g
fCBJT1JFU09VUkNFX1BDSV9GSVhFRCB8IElPUkVTT1VSQ0VfU0laRUFMSUdOKTsKCXJlZ2lvbiAm
PSB+KHNpemUgLSAxKTsKCgkvKiBDb252ZXJ0IGZyb20gUENJIGJ1cyB0byByZXNvdXJjZSBzcGFj
ZSAqLwoJYnVzX3JlZ2lvbi5zdGFydCA9IHJlZ2lvbjsKCWJ1c19yZWdpb24uZW5kID0gcmVnaW9u
ICsgc2l6ZSAtIDE7CglwY2liaW9zX2J1c190b19yZXNvdXJjZShkZXYtPmJ1cywgcmVzLCAmYnVz
X3JlZ2lvbik7CgoJcGNpX2luZm8oZGV2LCBGV19CVUcgIiVzIHF1aXJrOiByZWcgMHgleDogJXBS
XG4iLAoJCSBuYW1lLCBQQ0lfQkFTRV9BRERSRVNTXzAgKyAocG9zIDw8IDIpLCByZXMpOwp9Cgov
KgogKiBTb21lIENTNTUzNiBCSU9TZXMgKGZvciBleGFtcGxlLCB0aGUgU29la3JpcyBORVQ1NTAx
IGJvYXJkIHcvIGNvbUJJT1MKICogdmVyLiAxLjMzICAyMDA3MDEwMykgZG9uJ3Qgc2V0IHRoZSBj
b3JyZWN0IElTQSBQQ0kgcmVnaW9uIGhlYWRlciBpbmZvLgogKiBCQVIwIHNob3VsZCBiZSA4IGJ5
dGVzOyBpbnN0ZWFkLCBpdCBtYXkgYmUgc2V0IHRvIHNvbWV0aGluZyBsaWtlIDhrCiAqICh3aGlj
aCBjb25mbGljdHMgdy8gQkFSMSdzIG1lbW9yeSByYW5nZSkuCiAqCiAqIENTNTUzeCdzIElTQSBQ
Q0kgQkFScyBtYXkgYWxzbyBiZSByZWFkLW9ubHkgKHJlZjoKICogaHR0cHM6Ly9idWd6aWxsYS5r
ZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD04NTk5MSAtIENvbW1lbnQgIzQgZm9yd2FyZCkuCiAq
LwpzdGF0aWMgdm9pZCBxdWlya19jczU1MzZfdnNhKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXN0
YXRpYyBjaGFyICpuYW1lID0gIkNTNTUzNiBJU0EgYnJpZGdlIjsKCglpZiAocGNpX3Jlc291cmNl
X2xlbihkZXYsIDApICE9IDgpIHsKCQlxdWlya19pbyhkZXYsIDAsICAgOCwgbmFtZSk7CS8qIFNN
QiAqLwoJCXF1aXJrX2lvKGRldiwgMSwgMjU2LCBuYW1lKTsJLyogR1BJTyAqLwoJCXF1aXJrX2lv
KGRldiwgMiwgIDY0LCBuYW1lKTsJLyogTUZHUFQgKi8KCQlwY2lfaW5mbyhkZXYsICIlcyBidWcg
ZGV0ZWN0ZWQgKGluY29ycmVjdCBoZWFkZXIpOyB3b3JrYXJvdW5kIGFwcGxpZWRcbiIsCgkJCSBu
YW1lKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BTUQsIFBD
SV9ERVZJQ0VfSURfQU1EX0NTNTUzNl9JU0EsIHF1aXJrX2NzNTUzNl92c2EpOwoKc3RhdGljIHZv
aWQgcXVpcmtfaW9fcmVnaW9uKHN0cnVjdCBwY2lfZGV2ICpkZXYsIGludCBwb3J0LAoJCQkJdW5z
aWduZWQgc2l6ZSwgaW50IG5yLCBjb25zdCBjaGFyICpuYW1lKQp7Cgl1MTYgcmVnaW9uOwoJc3Ry
dWN0IHBjaV9idXNfcmVnaW9uIGJ1c19yZWdpb247CglzdHJ1Y3QgcmVzb3VyY2UgKnJlcyA9IGRl
di0+cmVzb3VyY2UgKyBucjsKCglwY2lfcmVhZF9jb25maWdfd29yZChkZXYsIHBvcnQsICZyZWdp
b24pOwoJcmVnaW9uICY9IH4oc2l6ZSAtIDEpOwoKCWlmICghcmVnaW9uKQoJCXJldHVybjsKCgly
ZXMtPm5hbWUgPSBwY2lfbmFtZShkZXYpOwoJcmVzLT5mbGFncyA9IElPUkVTT1VSQ0VfSU87CgoJ
LyogQ29udmVydCBmcm9tIFBDSSBidXMgdG8gcmVzb3VyY2Ugc3BhY2UgKi8KCWJ1c19yZWdpb24u
c3RhcnQgPSByZWdpb247CglidXNfcmVnaW9uLmVuZCA9IHJlZ2lvbiArIHNpemUgLSAxOwoJcGNp
Ymlvc19idXNfdG9fcmVzb3VyY2UoZGV2LT5idXMsIHJlcywgJmJ1c19yZWdpb24pOwoKCWlmICgh
cGNpX2NsYWltX3Jlc291cmNlKGRldiwgbnIpKQoJCXBjaV9pbmZvKGRldiwgInF1aXJrOiAlcFIg
Y2xhaW1lZCBieSAlc1xuIiwgcmVzLCBuYW1lKTsKfQoKLyoKICogQVRJIE5vcnRoYnJpZGdlIHNl
dHVwcyBNQ0UgdGhlIHByb2Nlc3NvciBpZiB5b3UgZXZlbiByZWFkIHNvbWV3aGVyZQogKiBiZXR3
ZWVuIDB4M2IwLT4weDNiYiBvciByZWFkIDB4M2QzCiAqLwpzdGF0aWMgdm9pZCBxdWlya19hdGlf
ZXhwbG9kaW5nX21jZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglwY2lfaW5mbyhkZXYsICJBVEkg
Tm9ydGhicmlkZ2UsIHJlc2VydmluZyBJL08gcG9ydHMgMHgzYjAgdG8gMHgzYmJcbiIpOwoJLyog
TWFlIHJoYWlkIGkgbmkgYmVpZGlvIGFnIGVkcnljaCBhciB5IGxsZW9saWFkaWF1IEkvTyBoeW4g
Ki8KCXJlcXVlc3RfcmVnaW9uKDB4M2IwLCAweDBDLCAiUmFkZW9uSUdQIik7CglyZXF1ZXN0X3Jl
Z2lvbigweDNkMywgMHgwMSwgIlJhZGVvbklHUCIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfQVRJLAlQQ0lfREVWSUNFX0lEX0FUSV9SUzEwMCwgICBxdWlya19hdGlf
ZXhwbG9kaW5nX21jZSk7CgovKgogKiBJbiB0aGUgQU1EIE5MIHBsYXRmb3JtLCB0aGlzIGRldmlj
ZSAoWzEwMjI6NzkxMl0pIGhhcyBhIGNsYXNzIGNvZGUgb2YKICogUENJX0NMQVNTX1NFUklBTF9V
U0JfWEhDSSAoMHgwYzAzMzApLCB3aGljaCBtZWFucyB0aGUgeGhjaSBkcml2ZXIgd2lsbAogKiBj
bGFpbSBpdC4KICoKICogQnV0IHRoZSBkd2MzIGRyaXZlciBpcyBhIG1vcmUgc3BlY2lmaWMgZHJp
dmVyIGZvciB0aGlzIGRldmljZSwgYW5kIHdlJ2QKICogcHJlZmVyIHRvIHVzZSBpdCBpbnN0ZWFk
IG9mIHhoY2kuIFRvIHByZXZlbnQgeGhjaSBmcm9tIGNsYWltaW5nIHRoZQogKiBkZXZpY2UsIGNo
YW5nZSB0aGUgY2xhc3MgY29kZSB0byAweDBjMDNmZSwgd2hpY2ggdGhlIFBDSSByMy4wIHNwZWMK
ICogZGVmaW5lcyBhcyAiVVNCIGRldmljZSAobm90IGhvc3QgY29udHJvbGxlcikiLiBUaGUgZHdj
MyBkcml2ZXIgY2FuIHRoZW4KICogY2xhaW0gaXQgYmFzZWQgb24gaXRzIFZlbmRvciBhbmQgRGV2
aWNlIElELgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfYW1kX25sX2NsYXNzKHN0cnVjdCBwY2lfZGV2
ICpwZGV2KQp7Cgl1MzIgY2xhc3MgPSBwZGV2LT5jbGFzczsKCgkvKiBVc2UgIlVTQiBEZXZpY2Ug
KG5vdCBob3N0IGNvbnRyb2xsZXIpIiBjbGFzcyAqLwoJcGRldi0+Y2xhc3MgPSBQQ0lfQ0xBU1Nf
U0VSSUFMX1VTQl9ERVZJQ0U7CglwY2lfaW5mbyhwZGV2LCAiUENJIGNsYXNzIG92ZXJyaWRkZW4g
KCUjMDh4IC0+ICUjMDh4KSBzbyBkd2MzIGRyaXZlciBjYW4gY2xhaW0gdGhpcyBpbnN0ZWFkIG9m
IHhoY2lcbiIsCgkJIGNsYXNzLCBwZGV2LT5jbGFzcyk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVB
REVSKFBDSV9WRU5ET1JfSURfQU1ELCBQQ0lfREVWSUNFX0lEX0FNRF9OTF9VU0IsCgkJcXVpcmtf
YW1kX25sX2NsYXNzKTsKCi8qCiAqIFN5bm9wc3lzIFVTQiAzLnggaG9zdCBIQVBTIHBsYXRmb3Jt
IGhhcyBhIGNsYXNzIGNvZGUgb2YKICogUENJX0NMQVNTX1NFUklBTF9VU0JfWEhDSSwgYW5kIHho
Y2kgZHJpdmVyIGNhbiBjbGFpbSBpdC4gIEhvd2V2ZXIsIHRoZXNlCiAqIGRldmljZXMgc2hvdWxk
IHVzZSBkd2MzLWhhcHMgZHJpdmVyLiAgQ2hhbmdlIHRoZXNlIGRldmljZXMnIGNsYXNzIGNvZGUg
dG8KICogUENJX0NMQVNTX1NFUklBTF9VU0JfREVWSUNFIHRvIHByZXZlbnQgdGhlIHhoY2ktcGNp
IGRyaXZlciBmcm9tIGNsYWltaW5nCiAqIHRoZW0uCiAqLwpzdGF0aWMgdm9pZCBxdWlya19zeW5v
cHN5c19oYXBzKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7Cgl1MzIgY2xhc3MgPSBwZGV2LT5jbGFz
czsKCglzd2l0Y2ggKHBkZXYtPmRldmljZSkgewoJY2FzZSBQQ0lfREVWSUNFX0lEX1NZTk9QU1lT
X0hBUFNVU0IzOgoJY2FzZSBQQ0lfREVWSUNFX0lEX1NZTk9QU1lTX0hBUFNVU0IzX0FYSToKCWNh
c2UgUENJX0RFVklDRV9JRF9TWU5PUFNZU19IQVBTVVNCMzE6CgkJcGRldi0+Y2xhc3MgPSBQQ0lf
Q0xBU1NfU0VSSUFMX1VTQl9ERVZJQ0U7CgkJcGNpX2luZm8ocGRldiwgIlBDSSBjbGFzcyBvdmVy
cmlkZGVuICglIzA4eCAtPiAlIzA4eCkgc28gZHdjMyBkcml2ZXIgY2FuIGNsYWltIHRoaXMgaW5z
dGVhZCBvZiB4aGNpXG4iLAoJCQkgY2xhc3MsIHBkZXYtPmNsYXNzKTsKCQlicmVhazsKCX0KfQpE
RUNMQVJFX1BDSV9GSVhVUF9DTEFTU19IRUFERVIoUENJX1ZFTkRPUl9JRF9TWU5PUFNZUywgUENJ
X0FOWV9JRCwKCQkJICAgICAgIFBDSV9DTEFTU19TRVJJQUxfVVNCX1hIQ0ksIDAsCgkJCSAgICAg
ICBxdWlya19zeW5vcHN5c19oYXBzKTsKCi8qCiAqIExldCdzIG1ha2UgdGhlIHNvdXRoYnJpZGdl
IGluZm9ybWF0aW9uIGV4cGxpY2l0IGluc3RlYWQgb2YgaGF2aW5nIHRvCiAqIHdvcnJ5IGFib3V0
IHBlb3BsZSBwcm9iaW5nIHRoZSBBQ1BJIGFyZWFzLCBmb3IgZXhhbXBsZS4uIChZZXMsIGl0CiAq
IGhhcHBlbnMsIGFuZCBpZiB5b3UgcmVhZCB0aGUgd3JvbmcgQUNQSSByZWdpc3RlciBpdCB3aWxs
IHB1dCB0aGUgbWFjaGluZQogKiB0byBzbGVlcCB3aXRoIG5vIHdheSBvZiB3YWtpbmcgaXQgdXAg
YWdhaW4uIEJ1bW1lcikuCiAqCiAqIEFMSSBNNzEwMTogVHdvIElPIHJlZ2lvbnMgcG9pbnRlZCB0
byBieSB3b3JkcyBhdAogKgkweEUwICg2NCBieXRlcyBvZiBBQ1BJIHJlZ2lzdGVycykKICoJMHhF
MiAoMzIgYnl0ZXMgb2YgU01CIHJlZ2lzdGVycykKICovCnN0YXRpYyB2b2lkIHF1aXJrX2FsaTcx
MDFfYWNwaShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglxdWlya19pb19yZWdpb24oZGV2LCAweEUw
LCA2NCwgUENJX0JSSURHRV9SRVNPVVJDRVMsICJhbGk3MTAxIEFDUEkiKTsKCXF1aXJrX2lvX3Jl
Z2lvbihkZXYsIDB4RTIsIDMyLCBQQ0lfQlJJREdFX1JFU09VUkNFUysxLCAiYWxpNzEwMSBTTUIi
KTsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BTCwJUENJX0RFVklD
RV9JRF9BTF9NNzEwMSwJCXF1aXJrX2FsaTcxMDFfYWNwaSk7CgpzdGF0aWMgdm9pZCBwaWl4NF9p
b19xdWlyayhzdHJ1Y3QgcGNpX2RldiAqZGV2LCBjb25zdCBjaGFyICpuYW1lLCB1bnNpZ25lZCBp
bnQgcG9ydCwgdW5zaWduZWQgaW50IGVuYWJsZSkKewoJdTMyIGRldnJlczsKCXUzMiBtYXNrLCBz
aXplLCBiYXNlOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIHBvcnQsICZkZXZyZXMpOwoJ
aWYgKChkZXZyZXMgJiBlbmFibGUpICE9IGVuYWJsZSkKCQlyZXR1cm47CgltYXNrID0gKGRldnJl
cyA+PiAxNikgJiAxNTsKCWJhc2UgPSBkZXZyZXMgJiAweGZmZmY7CglzaXplID0gMTY7Cglmb3Ig
KDs7KSB7CgkJdW5zaWduZWQgYml0ID0gc2l6ZSA+PiAxOwoJCWlmICgoYml0ICYgbWFzaykgPT0g
Yml0KQoJCQlicmVhazsKCQlzaXplID0gYml0OwoJfQoJLyoKCSAqIEZvciBub3cgd2Ugb25seSBw
cmludCBpdCBvdXQuIEV2ZW50dWFsbHkgd2UnbGwgd2FudCB0bwoJICogcmVzZXJ2ZSBpdCAoYXQg
bGVhc3QgaWYgaXQncyBpbiB0aGUgMHgxMDAwKyByYW5nZSksIGJ1dAoJICogbGV0J3MgZ2V0IGVu
b3VnaCBjb25maXJtYXRpb24gcmVwb3J0cyBmaXJzdC4KCSAqLwoJYmFzZSAmPSAtc2l6ZTsKCXBj
aV9pbmZvKGRldiwgIiVzIFBJTyBhdCAlMDR4LSUwNHhcbiIsIG5hbWUsIGJhc2UsIGJhc2UgKyBz
aXplIC0gMSk7Cn0KCnN0YXRpYyB2b2lkIHBpaXg0X21lbV9xdWlyayhzdHJ1Y3QgcGNpX2RldiAq
ZGV2LCBjb25zdCBjaGFyICpuYW1lLCB1bnNpZ25lZCBpbnQgcG9ydCwgdW5zaWduZWQgaW50IGVu
YWJsZSkKewoJdTMyIGRldnJlczsKCXUzMiBtYXNrLCBzaXplLCBiYXNlOwoKCXBjaV9yZWFkX2Nv
bmZpZ19kd29yZChkZXYsIHBvcnQsICZkZXZyZXMpOwoJaWYgKChkZXZyZXMgJiBlbmFibGUpICE9
IGVuYWJsZSkKCQlyZXR1cm47CgliYXNlID0gZGV2cmVzICYgMHhmZmZmMDAwMDsKCW1hc2sgPSAo
ZGV2cmVzICYgMHgzZikgPDwgMTY7CglzaXplID0gMTI4IDw8IDE2OwoJZm9yICg7OykgewoJCXVu
c2lnbmVkIGJpdCA9IHNpemUgPj4gMTsKCQlpZiAoKGJpdCAmIG1hc2spID09IGJpdCkKCQkJYnJl
YWs7CgkJc2l6ZSA9IGJpdDsKCX0KCgkvKgoJICogRm9yIG5vdyB3ZSBvbmx5IHByaW50IGl0IG91
dC4gRXZlbnR1YWxseSB3ZSdsbCB3YW50IHRvCgkgKiByZXNlcnZlIGl0LCBidXQgbGV0J3MgZ2V0
IGVub3VnaCBjb25maXJtYXRpb24gcmVwb3J0cyBmaXJzdC4KCSAqLwoJYmFzZSAmPSAtc2l6ZTsK
CXBjaV9pbmZvKGRldiwgIiVzIE1NSU8gYXQgJTA0eC0lMDR4XG4iLCBuYW1lLCBiYXNlLCBiYXNl
ICsgc2l6ZSAtIDEpOwp9CgovKgogKiBQSUlYNCBBQ1BJOiBUd28gSU8gcmVnaW9ucyBwb2ludGVk
IHRvIGJ5IGxvbmd3b3JkcyBhdAogKgkweDQwICg2NCBieXRlcyBvZiBBQ1BJIHJlZ2lzdGVycykK
ICoJMHg5MCAoMTYgYnl0ZXMgb2YgU01CIHJlZ2lzdGVycykKICogYW5kIGEgZmV3IHN0cmFuZ2Ug
cHJvZ3JhbW1hYmxlIFBJSVg0IGRldmljZSByZXNvdXJjZXMuCiAqLwpzdGF0aWMgdm9pZCBxdWly
a19waWl4NF9hY3BpKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUzMiByZXNfYTsKCglxdWlya19p
b19yZWdpb24oZGV2LCAweDQwLCA2NCwgUENJX0JSSURHRV9SRVNPVVJDRVMsICJQSUlYNCBBQ1BJ
Iik7CglxdWlya19pb19yZWdpb24oZGV2LCAweDkwLCAxNiwgUENJX0JSSURHRV9SRVNPVVJDRVMr
MSwgIlBJSVg0IFNNQiIpOwoKCS8qIERldmljZSByZXNvdXJjZSBBIGhhcyBlbmFibGVzIGZvciBz
b21lIG9mIHRoZSBvdGhlciBvbmVzICovCglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCAweDVj
LCAmcmVzX2EpOwoKCXBpaXg0X2lvX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBCIiwgMHg2MCwg
MyA8PCAyMSk7CglwaWl4NF9pb19xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMgQyIsIDB4NjQsIDMg
PDwgMjEpOwoKCS8qIERldmljZSByZXNvdXJjZSBEIGlzIGp1c3QgYml0ZmllbGRzIGZvciBzdGF0
aWMgcmVzb3VyY2VzICovCgoJLyogRGV2aWNlIDEyIGVuYWJsZWQ/ICovCglpZiAocmVzX2EgJiAo
MSA8PCAyOSkpIHsKCQlwaWl4NF9pb19xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMgRSIsIDB4Njgs
IDEgPDwgMjApOwoJCXBpaXg0X21lbV9xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMgRiIsIDB4NmMs
IDEgPDwgNyk7Cgl9CgkvKiBEZXZpY2UgMTMgZW5hYmxlZD8gKi8KCWlmIChyZXNfYSAmICgxIDw8
IDMwKSkgewoJCXBpaXg0X2lvX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBHIiwgMHg3MCwgMSA8
PCAyMCk7CgkJcGlpeDRfbWVtX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBIIiwgMHg3NCwgMSA8
PCA3KTsKCX0KCXBpaXg0X2lvX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBJIiwgMHg3OCwgMSA8
PCAyMCk7CglwaWl4NF9pb19xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMgSiIsIDB4N2MsIDEgPDwg
MjApOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lf
REVWSUNFX0lEX0lOVEVMXzgyMzcxQUJfMywJcXVpcmtfcGlpeDRfYWNwaSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgy
NDQzTVhfMywJcXVpcmtfcGlpeDRfYWNwaSk7CgojZGVmaW5lIElDSF9QTUJBU0UJMHg0MAojZGVm
aW5lIElDSF9BQ1BJX0NOVEwJMHg0NAojZGVmaW5lICBJQ0g0X0FDUElfRU4JMHgxMAojZGVmaW5l
ICBJQ0g2X0FDUElfRU4JMHg4MAojZGVmaW5lIElDSDRfR1BJT0JBU0UJMHg1OAojZGVmaW5lIElD
SDRfR1BJT19DTlRMCTB4NWMKI2RlZmluZSAgSUNINF9HUElPX0VOCTB4MTAKI2RlZmluZSBJQ0g2
X0dQSU9CQVNFCTB4NDgKI2RlZmluZSBJQ0g2X0dQSU9fQ05UTAkweDRjCiNkZWZpbmUgIElDSDZf
R1BJT19FTgkweDEwCgovKgogKiBJQ0g0LCBJQ0g0LU0sIElDSDUsIElDSDUtTSBBQ1BJOiBUaHJl
ZSBJTyByZWdpb25zIHBvaW50ZWQgdG8gYnkgbG9uZ3dvcmRzIGF0CiAqCTB4NDAgKDEyOCBieXRl
cyBvZiBBQ1BJLCBHUElPICYgVENPIHJlZ2lzdGVycykKICoJMHg1OCAoNjQgYnl0ZXMgb2YgR1BJ
TyBJL08gc3BhY2UpCiAqLwpzdGF0aWMgdm9pZCBxdWlya19pY2g0X2xwY19hY3BpKHN0cnVjdCBw
Y2lfZGV2ICpkZXYpCnsKCXU4IGVuYWJsZTsKCgkvKgoJICogVGhlIGNoZWNrIGZvciBQQ0lCSU9T
X01JTl9JTyBpcyB0byBlbnN1cmUgd2Ugd29uJ3QgY3JlYXRlIGEgY29uZmxpY3QKCSAqIHdpdGgg
bG93IGxlZ2FjeSAoYW5kIGZpeGVkKSBwb3J0cy4gV2UgZG9uJ3Qga25vdyB0aGUgZGVjb2RpbmcK
CSAqIHByaW9yaXR5IGFuZCBjYW4ndCB0ZWxsIHdoZXRoZXIgdGhlIGxlZ2FjeSBkZXZpY2Ugb3Ig
dGhlIG9uZSBjcmVhdGVkCgkgKiBoZXJlIGlzIHJlYWxseSBhdCB0aGF0IGFkZHJlc3MuICBUaGlz
IGhhcHBlbnMgb24gYm9hcmRzIHdpdGggYnJva2VuCgkgKiBCSU9TZXMuCgkgKi8KCXBjaV9yZWFk
X2NvbmZpZ19ieXRlKGRldiwgSUNIX0FDUElfQ05UTCwgJmVuYWJsZSk7CglpZiAoZW5hYmxlICYg
SUNINF9BQ1BJX0VOKQoJCXF1aXJrX2lvX3JlZ2lvbihkZXYsIElDSF9QTUJBU0UsIDEyOCwgUENJ
X0JSSURHRV9SRVNPVVJDRVMsCgkJCQkgIklDSDQgQUNQSS9HUElPL1RDTyIpOwoKCXBjaV9yZWFk
X2NvbmZpZ19ieXRlKGRldiwgSUNINF9HUElPX0NOVEwsICZlbmFibGUpOwoJaWYgKGVuYWJsZSAm
IElDSDRfR1BJT19FTikKCQlxdWlya19pb19yZWdpb24oZGV2LCBJQ0g0X0dQSU9CQVNFLCA2NCwg
UENJX0JSSURHRV9SRVNPVVJDRVMrMSwKCQkJCSJJQ0g0IEdQSU8iKTsKfQpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwgICAgUENJX0RFVklDRV9JRF9JTlRFTF84
MjgwMUFBXzAsCQlxdWlya19pY2g0X2xwY19hY3BpKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVS
KFBDSV9WRU5ET1JfSURfSU5URUwsICAgIFBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFBQl8wLAkJ
cXVpcmtfaWNoNF9scGNfYWNwaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX0lOVEVMLCAgICBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODAxQkFfMCwJCXF1aXJrX2ljaDRf
bHBjX2FjcGkpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwg
ICAgUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUJBXzEwLAlxdWlya19pY2g0X2xwY19hY3BpKTsK
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsICAgIFBDSV9ERVZJ
Q0VfSURfSU5URUxfODI4MDFDQV8wLAkJcXVpcmtfaWNoNF9scGNfYWNwaSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAgICBQQ0lfREVWSUNFX0lEX0lOVEVM
XzgyODAxQ0FfMTIsCXF1aXJrX2ljaDRfbHBjX2FjcGkpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFE
RVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwgICAgUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMURCXzAs
CQlxdWlya19pY2g0X2xwY19hY3BpKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5E
T1JfSURfSU5URUwsICAgIFBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFEQl8xMiwJcXVpcmtfaWNo
NF9scGNfYWNwaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVM
LCAgICBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODAxRUJfMCwJCXF1aXJrX2ljaDRfbHBjX2FjcGkp
OwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwgICAgUENJX0RF
VklDRV9JRF9JTlRFTF9FU0JfMSwJCXF1aXJrX2ljaDRfbHBjX2FjcGkpOwoKc3RhdGljIHZvaWQg
aWNoNl9scGNfYWNwaV9ncGlvKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXU4IGVuYWJsZTsKCglw
Y2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIElDSF9BQ1BJX0NOVEwsICZlbmFibGUpOwoJaWYgKGVu
YWJsZSAmIElDSDZfQUNQSV9FTikKCQlxdWlya19pb19yZWdpb24oZGV2LCBJQ0hfUE1CQVNFLCAx
MjgsIFBDSV9CUklER0VfUkVTT1VSQ0VTLAoJCQkJICJJQ0g2IEFDUEkvR1BJTy9UQ08iKTsKCglw
Y2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIElDSDZfR1BJT19DTlRMLCAmZW5hYmxlKTsKCWlmIChl
bmFibGUgJiBJQ0g2X0dQSU9fRU4pCgkJcXVpcmtfaW9fcmVnaW9uKGRldiwgSUNINl9HUElPQkFT
RSwgNjQsIFBDSV9CUklER0VfUkVTT1VSQ0VTKzEsCgkJCQkiSUNINiBHUElPIik7Cn0KCnN0YXRp
YyB2b2lkIGljaDZfbHBjX2dlbmVyaWNfZGVjb2RlKHN0cnVjdCBwY2lfZGV2ICpkZXYsIHVuc2ln
bmVkIHJlZywKCQkJCSAgICBjb25zdCBjaGFyICpuYW1lLCBpbnQgZHluc2l6ZSkKewoJdTMyIHZh
bDsKCXUzMiBzaXplLCBiYXNlOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIHJlZywgJnZh
bCk7CgoJLyogRW5hYmxlZD8gKi8KCWlmICghKHZhbCAmIDEpKQoJCXJldHVybjsKCWJhc2UgPSB2
YWwgJiAweGZmZmM7CglpZiAoZHluc2l6ZSkgewoJCS8qCgkJICogVGhpcyBpcyBub3QgY29ycmVj
dC4gSXQgaXMgMTYsIDMyIG9yIDY0IGJ5dGVzIGRlcGVuZGluZyBvbgoJCSAqIHJlZ2lzdGVyIEQz
MTpGMDpBRGggYml0cyA1OjQuCgkJICoKCQkgKiBCdXQgdGhpcyBnZXRzIHVzIGF0IGxlYXN0IF9w
YXJ0XyBvZiBpdC4KCQkgKi8KCQlzaXplID0gMTY7Cgl9IGVsc2UgewoJCXNpemUgPSAxMjg7Cgl9
CgliYXNlICY9IH4oc2l6ZS0xKTsKCgkvKgoJICogSnVzdCBwcmludCBpdCBvdXQgZm9yIG5vdy4g
V2Ugc2hvdWxkIHJlc2VydmUgaXQgYWZ0ZXIgbW9yZQoJICogZGVidWdnaW5nLgoJICovCglwY2lf
aW5mbyhkZXYsICIlcyBQSU8gYXQgJTA0eC0lMDR4XG4iLCBuYW1lLCBiYXNlLCBiYXNlK3NpemUt
MSk7Cn0KCnN0YXRpYyB2b2lkIHF1aXJrX2ljaDZfbHBjKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsK
CS8qIFNoYXJlZCBBQ1BJL0dQSU8gZGVjb2RlIHdpdGggYWxsIElDSDYrICovCglpY2g2X2xwY19h
Y3BpX2dwaW8oZGV2KTsKCgkvKiBJQ0g2LXNwZWNpZmljIGdlbmVyaWMgSU8gZGVjb2RlICovCglp
Y2g2X2xwY19nZW5lcmljX2RlY29kZShkZXYsIDB4ODQsICJMUEMgR2VuZXJpYyBJTyBkZWNvZGUg
MSIsIDApOwoJaWNoNl9scGNfZ2VuZXJpY19kZWNvZGUoZGV2LCAweDg4LCAiTFBDIEdlbmVyaWMg
SU8gZGVjb2RlIDIiLCAxKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9J
RF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g2XzAsIHF1aXJrX2ljaDZfbHBjKTsKREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURf
SU5URUxfSUNINl8xLCBxdWlya19pY2g2X2xwYyk7CgpzdGF0aWMgdm9pZCBpY2g3X2xwY19nZW5l
cmljX2RlY29kZShzdHJ1Y3QgcGNpX2RldiAqZGV2LCB1bnNpZ25lZCByZWcsCgkJCQkgICAgY29u
c3QgY2hhciAqbmFtZSkKewoJdTMyIHZhbDsKCXUzMiBtYXNrLCBiYXNlOwoKCXBjaV9yZWFkX2Nv
bmZpZ19kd29yZChkZXYsIHJlZywgJnZhbCk7CgoJLyogRW5hYmxlZD8gKi8KCWlmICghKHZhbCAm
IDEpKQoJCXJldHVybjsKCgkvKiBJTyBiYXNlIGluIGJpdHMgMTU6MiwgbWFzayBpbiBiaXRzIDIz
OjE4LCBib3RoIGFyZSBkd29yZC1iYXNlZCAqLwoJYmFzZSA9IHZhbCAmIDB4ZmZmYzsKCW1hc2sg
PSAodmFsID4+IDE2KSAmIDB4ZmM7CgltYXNrIHw9IDM7CgoJLyoKCSAqIEp1c3QgcHJpbnQgaXQg
b3V0IGZvciBub3cuIFdlIHNob3VsZCByZXNlcnZlIGl0IGFmdGVyIG1vcmUKCSAqIGRlYnVnZ2lu
Zy4KCSAqLwoJcGNpX2luZm8oZGV2LCAiJXMgUElPIGF0ICUwNHggKG1hc2sgJTA0eClcbiIsIG5h
bWUsIGJhc2UsIG1hc2spOwp9CgovKiBJQ0g3LTEwIGhhcyB0aGUgc2FtZSBjb21tb24gTFBDIGdl
bmVyaWMgSU8gZGVjb2RlIHJlZ2lzdGVycyAqLwpzdGF0aWMgdm9pZCBxdWlya19pY2g3X2xwYyhz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7CgkvKiBXZSBzaGFyZSB0aGUgY29tbW9uIEFDUEkvR1BJTyBk
ZWNvZGUgd2l0aCBJQ0g2ICovCglpY2g2X2xwY19hY3BpX2dwaW8oZGV2KTsKCgkvKiBBbmQgaGF2
ZSA0IElDSDcrIGdlbmVyaWMgZGVjb2RlcyAqLwoJaWNoN19scGNfZ2VuZXJpY19kZWNvZGUoZGV2
LCAweDg0LCAiSUNINyBMUEMgR2VuZXJpYyBJTyBkZWNvZGUgMSIpOwoJaWNoN19scGNfZ2VuZXJp
Y19kZWNvZGUoZGV2LCAweDg4LCAiSUNINyBMUEMgR2VuZXJpYyBJTyBkZWNvZGUgMiIpOwoJaWNo
N19scGNfZ2VuZXJpY19kZWNvZGUoZGV2LCAweDhjLCAiSUNINyBMUEMgR2VuZXJpYyBJTyBkZWNv
ZGUgMyIpOwoJaWNoN19scGNfZ2VuZXJpY19kZWNvZGUoZGV2LCAweDkwLCAiSUNINyBMUEMgR2Vu
ZXJpYyBJTyBkZWNvZGUgNCIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDdfMCwgcXVpcmtfaWNoN19scGMpOwpE
RUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF9JQ0g3XzEsIHF1aXJrX2ljaDdfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVS
KFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfSUNIN18zMSwgcXVpcmtf
aWNoN19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJ
UENJX0RFVklDRV9JRF9JTlRFTF9JQ0g4XzAsIHF1aXJrX2ljaDdfbHBjKTsKREVDTEFSRV9QQ0lf
RklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfSUNI
OF8yLCBxdWlya19pY2g3X2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDhfMywgcXVpcmtfaWNoN19scGMpOwpE
RUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF9JQ0g4XzEsIHF1aXJrX2ljaDdfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVS
KFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfSUNIOF80LCBxdWlya19p
Y2g3X2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQ
Q0lfREVWSUNFX0lEX0lOVEVMX0lDSDlfMiwgcXVpcmtfaWNoN19scGMpOwpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g5
XzQsIHF1aXJrX2ljaDdfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1Jf
SURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfSUNIOV83LCBxdWlya19pY2g3X2xwYyk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lE
X0lOVEVMX0lDSDlfOCwgcXVpcmtfaWNoN19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIo
UENJX1ZFTkRPUl9JRF9JTlRFTCwgICBQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDEwXzEsIHF1aXJr
X2ljaDdfbHBjKTsKCi8qCiAqIFZJQSBBQ1BJOiBPbmUgSU8gcmVnaW9uIHBvaW50ZWQgdG8gYnkg
bG9uZ3dvcmQgYXQKICoJMHg0OCBvciAweDIwICgyNTYgYnl0ZXMgb2YgQUNQSSByZWdpc3RlcnMp
CiAqLwpzdGF0aWMgdm9pZCBxdWlya192dDgyYzU4Nl9hY3BpKHN0cnVjdCBwY2lfZGV2ICpkZXYp
CnsKCWlmIChkZXYtPnJldmlzaW9uICYgMHgxMCkKCQlxdWlya19pb19yZWdpb24oZGV2LCAweDQ4
LCAyNTYsIFBDSV9CUklER0VfUkVTT1VSQ0VTLAoJCQkJInZ0ODJjNTg2IEFDUEkiKTsKfQpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0VfSURfVklB
XzgyQzU4Nl8zLAlxdWlya192dDgyYzU4Nl9hY3BpKTsKCi8qCiAqIFZJQSBWVDgyQzY4NiBBQ1BJ
OiBUaHJlZSBJTyByZWdpb24gcG9pbnRlZCB0byBieSAobG9uZyl3b3JkcyBhdAogKgkweDQ4ICgy
NTYgYnl0ZXMgb2YgQUNQSSByZWdpc3RlcnMpCiAqCTB4NzAgKDEyOCBieXRlcyBvZiBoYXJkd2Fy
ZSBtb25pdG9yaW5nIHJlZ2lzdGVyKQogKgkweDkwICgxNiBieXRlcyBvZiBTTUIgcmVnaXN0ZXJz
KQogKi8Kc3RhdGljIHZvaWQgcXVpcmtfdnQ4MmM2ODZfYWNwaShzdHJ1Y3QgcGNpX2RldiAqZGV2
KQp7CglxdWlya192dDgyYzU4Nl9hY3BpKGRldik7CgoJcXVpcmtfaW9fcmVnaW9uKGRldiwgMHg3
MCwgMTI4LCBQQ0lfQlJJREdFX1JFU09VUkNFUysxLAoJCQkJICJ2dDgyYzY4NiBIVy1tb24iKTsK
CglxdWlya19pb19yZWdpb24oZGV2LCAweDkwLCAxNiwgUENJX0JSSURHRV9SRVNPVVJDRVMrMiwg
InZ0ODJjNjg2IFNNQiIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNjg2XzQsCXF1aXJrX3Z0ODJjNjg2X2FjcGkpOwoK
LyoKICogVklBIFZUODIzNSBJU0EgQnJpZGdlOiBUd28gSU8gcmVnaW9ucyBwb2ludGVkIHRvIGJ5
IHdvcmRzIGF0CiAqCTB4ODggKDEyOCBieXRlcyBvZiBwb3dlciBtYW5hZ2VtZW50IHJlZ2lzdGVy
cykKICoJMHhkMCAoMTYgYnl0ZXMgb2YgU01CIHJlZ2lzdGVycykKICovCnN0YXRpYyB2b2lkIHF1
aXJrX3Z0ODIzNV9hY3BpKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXF1aXJrX2lvX3JlZ2lvbihk
ZXYsIDB4ODgsIDEyOCwgUENJX0JSSURHRV9SRVNPVVJDRVMsICJ2dDgyMzUgUE0iKTsKCXF1aXJr
X2lvX3JlZ2lvbihkZXYsIDB4ZDAsIDE2LCBQQ0lfQlJJREdFX1JFU09VUkNFUysxLCAidnQ4MjM1
IFNNQiIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1ZJQSwJUENJ
X0RFVklDRV9JRF9WSUFfODIzNSwJcXVpcmtfdnQ4MjM1X2FjcGkpOwoKLyoKICogVEkgWElPMjAw
MGEgUENJZS1QQ0kgQnJpZGdlIGVycm9uZW91c2x5IHJlcG9ydHMgaXQgc3VwcG9ydHMgZmFzdAog
KiBiYWNrLXRvLWJhY2s6IERpc2FibGUgZmFzdCBiYWNrLXRvLWJhY2sgb24gdGhlIHNlY29uZGFy
eSBidXMgc2VnbWVudAogKi8Kc3RhdGljIHZvaWQgcXVpcmtfeGlvMjAwMGEoc3RydWN0IHBjaV9k
ZXYgKmRldikKewoJc3RydWN0IHBjaV9kZXYgKnBkZXY7Cgl1MTYgY29tbWFuZDsKCglwY2lfd2Fy
bihkZXYsICJUSSBYSU8yMDAwYSBxdWlyayBkZXRlY3RlZDsgc2Vjb25kYXJ5IGJ1cyBmYXN0IGJh
Y2stdG8tYmFjayB0cmFuc2ZlcnMgZGlzYWJsZWRcbiIpOwoJbGlzdF9mb3JfZWFjaF9lbnRyeShw
ZGV2LCAmZGV2LT5zdWJvcmRpbmF0ZS0+ZGV2aWNlcywgYnVzX2xpc3QpIHsKCQlwY2lfcmVhZF9j
b25maWdfd29yZChwZGV2LCBQQ0lfQ09NTUFORCwgJmNvbW1hbmQpOwoJCWlmIChjb21tYW5kICYg
UENJX0NPTU1BTkRfRkFTVF9CQUNLKQoJCQlwY2lfd3JpdGVfY29uZmlnX3dvcmQocGRldiwgUENJ
X0NPTU1BTkQsIGNvbW1hbmQgJiB+UENJX0NPTU1BTkRfRkFTVF9CQUNLKTsKCX0KfQpERUNMQVJF
X1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1RJLCBQQ0lfREVWSUNFX0lEX1RJX1hJTzIw
MDBBLAoJCQlxdWlya194aW8yMDAwYSk7CgojaWZkZWYgQ09ORklHX1g4Nl9JT19BUElDCgojaW5j
bHVkZSA8YXNtL2lvX2FwaWMuaD4KCi8qCiAqIFZJQSA2ODZBL0I6IElmIGFuIElPLUFQSUMgaXMg
YWN0aXZlLCB3ZSBuZWVkIHRvIHJvdXRlIGFsbCBvbi1jaGlwCiAqIGRldmljZXMgdG8gdGhlIGV4
dGVybmFsIEFQSUMuCiAqCiAqIFRPRE86IFdoZW4gd2UgaGF2ZSBkZXZpY2Utc3BlY2lmaWMgaW50
ZXJydXB0IHJvdXRlcnMsIHRoaXMgY29kZSB3aWxsIGdvCiAqIGF3YXkgZnJvbSBxdWlya3MuCiAq
LwpzdGF0aWMgdm9pZCBxdWlya192aWFfaW9hcGljKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXU4
IHRtcDsKCglpZiAobnJfaW9hcGljcyA8IDEpCgkJdG1wID0gMDsgICAgLyogbm90aGluZyByb3V0
ZWQgdG8gZXh0ZXJuYWwgQVBJQyAqLwoJZWxzZQoJCXRtcCA9IDB4MWY7IC8qIGFsbCBrbm93biBi
aXRzICg0LTApIHJvdXRlZCB0byBleHRlcm5hbCBBUElDICovCgoJcGNpX2luZm8oZGV2LCAiJXNi
bGluZyBWSUEgZXh0ZXJuYWwgQVBJQyByb3V0aW5nXG4iLAoJICAgICAgIHRtcCA9PSAwID8gIkRp
c2EiIDogIkVuYSIpOwoKCS8qIE9mZnNldCAweDU4OiBFeHRlcm5hbCBBUElDIElSUSBvdXRwdXQg
Y29udHJvbCAqLwoJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHg1OCwgdG1wKTsKfQpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFf
ODJDNjg2LAlxdWlya192aWFfaW9hcGljKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZ
KFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MkM2ODYsCXF1aXJrX3ZpYV9p
b2FwaWMpOwoKLyoKICogVklBIDgyMzc6IFNvbWUgQklPU2VzIGRvbid0IHNldCB0aGUgJ0J5cGFz
cyBBUElDIERlLUFzc2VydCBNZXNzYWdlJyBCaXQuCiAqIFRoaXMgbGVhZHMgdG8gZG91YmxlZCBs
ZXZlbCBpbnRlcnJ1cHQgcmF0ZXMuCiAqIFNldCB0aGlzIGJpdCB0byBnZXQgcmlkIG9mIGN5Y2xl
IHdhc3RhZ2UuCiAqIE90aGVyd2lzZSB1bmNyaXRpY2FsLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtf
dmlhX3Z0ODIzN19ieXBhc3NfYXBpY19kZWFzc2VydChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1
OCBtaXNjX2NvbnRyb2wyOwojZGVmaW5lIEJZUEFTU19BUElDX0RFQVNTRVJUIDgKCglwY2lfcmVh
ZF9jb25maWdfYnl0ZShkZXYsIDB4NUIsICZtaXNjX2NvbnRyb2wyKTsKCWlmICghKG1pc2NfY29u
dHJvbDIgJiBCWVBBU1NfQVBJQ19ERUFTU0VSVCkpIHsKCQlwY2lfaW5mbyhkZXYsICJCeXBhc3Np
bmcgVklBIDgyMzcgQVBJQyBEZS1Bc3NlcnQgTWVzc2FnZVxuIik7CgkJcGNpX3dyaXRlX2NvbmZp
Z19ieXRlKGRldiwgMHg1QiwgbWlzY19jb250cm9sMnxCWVBBU1NfQVBJQ19ERUFTU0VSVCk7Cgl9
Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0Vf
SURfVklBXzgyMzcsCQlxdWlya192aWFfdnQ4MjM3X2J5cGFzc19hcGljX2RlYXNzZXJ0KTsKREVD
TEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNF
X0lEX1ZJQV84MjM3LAkJcXVpcmtfdmlhX3Z0ODIzN19ieXBhc3NfYXBpY19kZWFzc2VydCk7Cgov
KgogKiBUaGUgQU1EIElPLUFQSUMgY2FuIGhhbmcgdGhlIGJveCB3aGVuIGFuIEFQSUMgSVJRIGlz
IG1hc2tlZC4KICogV2UgY2hlY2sgYWxsIHJldnMgPj0gQjAgKHlldCBub3QgaW4gdGhlIHByZSBw
cm9kdWN0aW9uISkgYXMgdGhlIGJ1ZwogKiBpcyBjdXJyZW50bHkgbWFya2VkIE5vRml4CiAqCiAq
IFdlIGhhdmUgbXVsdGlwbGUgcmVwb3J0cyBvZiBoYW5ncyB3aXRoIHRoaXMgY2hpcHNldCB0aGF0
IHdlbnQgYXdheSB3aXRoCiAqIG5vYXBpYyBzcGVjaWZpZWQuIEZvciB0aGUgbW9tZW50IHdlIGFz
c3VtZSBpdCdzIHRoZSBlcnJhdHVtLiBXZSBtYXkgYmUgd3JvbmcKICogb2YgY291cnNlLiBIb3dl
dmVyIHRoZSBhZHZpY2UgaXMgZGVtb25zdHJhYmx5IGdvb2QgZXZlbiBpZiBzby4KICovCnN0YXRp
YyB2b2lkIHF1aXJrX2FtZF9pb2FwaWMoc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKGRldi0+
cmV2aXNpb24gPj0gMHgwMikgewoJCXBjaV93YXJuKGRldiwgIkkvTyBBUElDOiBBTUQgRXJyYXR1
bSAjMjIgbWF5IGJlIHByZXNlbnQuIEluIHRoZSBldmVudCBvZiBpbnN0YWJpbGl0eSB0cnlcbiIp
OwoJCXBjaV93YXJuKGRldiwgIiAgICAgICAgOiBib290aW5nIHdpdGggdGhlIFwibm9hcGljXCIg
b3B0aW9uXG4iKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FN
RCwJUENJX0RFVklDRV9JRF9BTURfVklQRVJfNzQxMCwJcXVpcmtfYW1kX2lvYXBpYyk7CiNlbmRp
ZiAvKiBDT05GSUdfWDg2X0lPX0FQSUMgKi8KCiNpZiBkZWZpbmVkKENPTkZJR19BUk02NCkgJiYg
ZGVmaW5lZChDT05GSUdfUENJX0FUUykKCnN0YXRpYyB2b2lkIHF1aXJrX2Nhdml1bV9zcmlvdl9y
bm1fbGluayhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CgkvKiBGaXggZm9yIGltcHJvcGVyIFNSLUlP
ViBjb25maWd1cmF0aW9uIG9uIENhdml1bSBjbjg4eHggUk5NIGRldmljZSAqLwoJaWYgKGRldi0+
c3Vic3lzdGVtX2RldmljZSA9PSAweGExMTgpCgkJZGV2LT5zcmlvdi0+bGluayA9IGRldi0+ZGV2
Zm47Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9DQVZJVU0sIDB4YTAx
OCwgcXVpcmtfY2F2aXVtX3NyaW92X3JubV9saW5rKTsKI2VuZGlmCgovKgogKiBTb21lIHNldHRp
bmdzIG9mIE1NUkJDIGNhbiBsZWFkIHRvIGRhdGEgY29ycnVwdGlvbiBzbyBibG9jayBjaGFuZ2Vz
LgogKiBTZWUgQU1EIDgxMzEgSHlwZXJUcmFuc3BvcnQgUENJLVggVHVubmVsIFJldmlzaW9uIEd1
aWRlCiAqLwpzdGF0aWMgdm9pZCBxdWlya19hbWRfODEzMV9tbXJiYyhzdHJ1Y3QgcGNpX2RldiAq
ZGV2KQp7CglpZiAoZGV2LT5zdWJvcmRpbmF0ZSAmJiBkZXYtPnJldmlzaW9uIDw9IDB4MTIpIHsK
CQlwY2lfaW5mbyhkZXYsICJBTUQ4MTMxIHJldiAleCBkZXRlY3RlZDsgZGlzYWJsaW5nIFBDSS1Y
IE1NUkJDXG4iLAoJCQkgZGV2LT5yZXZpc2lvbik7CgkJZGV2LT5zdWJvcmRpbmF0ZS0+YnVzX2Zs
YWdzIHw9IFBDSV9CVVNfRkxBR1NfTk9fTU1SQkM7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklO
QUwoUENJX1ZFTkRPUl9JRF9BTUQsIFBDSV9ERVZJQ0VfSURfQU1EXzgxMzFfQlJJREdFLCBxdWly
a19hbWRfODEzMV9tbXJiYyk7CgovKgogKiBGSVhNRTogaXQgaXMgcXVlc3Rpb25hYmxlIHRoYXQg
cXVpcmtfdmlhX2FjcGkoKSBpcyBuZWVkZWQuICBJdCBzaG93cyB1cAogKiBhcyBhbiBJU0EgYnJp
ZGdlLCBhbmQgZG9lcyBub3Qgc3VwcG9ydCB0aGUgUENJX0lOVEVSUlVQVF9MSU5FIHJlZ2lzdGVy
CiAqIGF0IGFsbC4gIFRoZXJlZm9yZSBpdCBzZWVtcyBsaWtlIHNldHRpbmcgdGhlIHBjaV9kZXYn
cyBJUlEgdG8gdGhlIHZhbHVlCiAqIG9mIHRoZSBBQ1BJIFNDSSBpbnRlcnJ1cHQgaXMgb25seSBk
b25lIGZvciBjb252ZW5pZW5jZS4KICoJLWpnYXJ6aWsKICovCnN0YXRpYyB2b2lkIHF1aXJrX3Zp
YV9hY3BpKHN0cnVjdCBwY2lfZGV2ICpkKQp7Cgl1OCBpcnE7CgoJLyogVklBIEFDUEkgZGV2aWNl
OiBTQ0kgSVJRIGxpbmUgaW4gUENJIGNvbmZpZyBieXRlIDB4NDIgKi8KCXBjaV9yZWFkX2NvbmZp
Z19ieXRlKGQsIDB4NDIsICZpcnEpOwoJaXJxICY9IDB4ZjsKCWlmIChpcnEgJiYgKGlycSAhPSAy
KSkKCQlkLT5pcnEgPSBpcnE7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1Jf
SURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MkM1ODZfMywJcXVpcmtfdmlhX2FjcGkpOwpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0VfSURfVklB
XzgyQzY4Nl80LAlxdWlya192aWFfYWNwaSk7CgovKiBWSUEgYnJpZGdlcyB3aGljaCBoYXZlIFZM
aW5rICovCnN0YXRpYyBpbnQgdmlhX3ZsaW5rX2Rldl9sbyA9IC0xLCB2aWFfdmxpbmtfZGV2X2hp
ID0gMTg7CgpzdGF0aWMgdm9pZCBxdWlya192aWFfYnJpZGdlKHN0cnVjdCBwY2lfZGV2ICpkZXYp
CnsKCS8qIFNlZSB3aGF0IGJyaWRnZSB3ZSBoYXZlIGFuZCBmaW5kIHRoZSBkZXZpY2UgcmFuZ2Vz
ICovCglzd2l0Y2ggKGRldi0+ZGV2aWNlKSB7CgljYXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyQzY4
NjoKCQkvKgoJCSAqIFRoZSBWVDgyQzY4NiBpcyBzcGVjaWFsOyBpdCBhdHRhY2hlcyB0byBQQ0kg
YW5kIGNhbiBoYXZlCgkJICogYW55IGRldmljZSBudW1iZXIuIEFsbCBpdHMgc3ViZGV2aWNlcyBh
cmUgZnVuY3Rpb25zIG9mCgkJICogdGhhdCBzaW5nbGUgZGV2aWNlLgoJCSAqLwoJCXZpYV92bGlu
a19kZXZfbG8gPSBQQ0lfU0xPVChkZXYtPmRldmZuKTsKCQl2aWFfdmxpbmtfZGV2X2hpID0gUENJ
X1NMT1QoZGV2LT5kZXZmbik7CgkJYnJlYWs7CgljYXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyMzc6
CgljYXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyMzdBOgoJCXZpYV92bGlua19kZXZfbG8gPSAxNTsK
CQlicmVhazsKCWNhc2UgUENJX0RFVklDRV9JRF9WSUFfODIzNToKCQl2aWFfdmxpbmtfZGV2X2xv
ID0gMTY7CgkJYnJlYWs7CgljYXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyMzE6CgljYXNlIFBDSV9E
RVZJQ0VfSURfVklBXzgyMzNfMDoKCWNhc2UgUENJX0RFVklDRV9JRF9WSUFfODIzM0E6CgljYXNl
IFBDSV9ERVZJQ0VfSURfVklBXzgyMzNDXzA6CgkJdmlhX3ZsaW5rX2Rldl9sbyA9IDE3OwoJCWJy
ZWFrOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1ZJQSwJUENJ
X0RFVklDRV9JRF9WSUFfODJDNjg2LAlxdWlya192aWFfYnJpZGdlKTsKREVDTEFSRV9QQ0lfRklY
VVBfSEVBREVSKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MjMxLAkJcXVp
cmtfdmlhX2JyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1ZJ
QSwJUENJX0RFVklDRV9JRF9WSUFfODIzM18wLAlxdWlya192aWFfYnJpZGdlKTsKREVDTEFSRV9Q
Q0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MjMz
QSwJcXVpcmtfdmlhX2JyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODIzM0NfMCwJcXVpcmtfdmlhX2JyaWRnZSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9W
SUFfODIzNSwJCXF1aXJrX3ZpYV9icmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJ
X1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0VfSURfVklBXzgyMzcsCQlxdWlya192aWFfYnJpZGdl
KTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNF
X0lEX1ZJQV84MjM3QSwJcXVpcmtfdmlhX2JyaWRnZSk7CgovKgogKiBxdWlya192aWFfdmxpbmsJ
CS0JVklBIFZMaW5rIElSUSBudW1iZXIgdXBkYXRlCiAqIEBkZXY6IFBDSSBkZXZpY2UKICoKICog
SWYgdGhlIGRldmljZSB3ZSBhcmUgZGVhbGluZyB3aXRoIGlzIG9uIGEgUElDIElSUSB3ZSBuZWVk
IHRvIGVuc3VyZSB0aGF0CiAqIHRoZSBJUlEgbGluZSByZWdpc3RlciB3aGljaCB1c3VhbGx5IGlz
IG5vdCByZWxldmFudCBmb3IgUENJIGNhcmRzLCBpcwogKiBhY3R1YWxseSB3cml0dGVuIHNvIHRo
YXQgaW50ZXJydXB0cyBnZXQgc2VudCB0byB0aGUgcmlnaHQgcGxhY2UuCiAqCiAqIFdlIG9ubHkg
ZG8gdGhpcyBvbiBzeXN0ZW1zIHdoZXJlIGEgVklBIHNvdXRoIGJyaWRnZSB3YXMgZGV0ZWN0ZWQs
IGFuZAogKiBvbmx5IGZvciBWSUEgZGV2aWNlcyBvbiB0aGUgbW90aGVyYm9hcmQgKHNlZSBxdWly
a192aWFfYnJpZGdlIGFib3ZlKS4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3ZpYV92bGluayhzdHJ1
Y3QgcGNpX2RldiAqZGV2KQp7Cgl1OCBpcnEsIG5ld19pcnE7CgoJLyogQ2hlY2sgaWYgd2UgaGF2
ZSBWTGluayBhdCBhbGwgKi8KCWlmICh2aWFfdmxpbmtfZGV2X2xvID09IC0xKQoJCXJldHVybjsK
CgluZXdfaXJxID0gZGV2LT5pcnE7CgoJLyogRG9uJ3QgcXVpcmsgaW50ZXJydXB0cyBvdXRzaWRl
IHRoZSBsZWdhY3kgSVJRIHJhbmdlICovCglpZiAoIW5ld19pcnEgfHwgbmV3X2lycSA+IDE1KQoJ
CXJldHVybjsKCgkvKiBJbnRlcm5hbCBkZXZpY2UgPyAqLwoJaWYgKGRldi0+YnVzLT5udW1iZXIg
IT0gMCB8fCBQQ0lfU0xPVChkZXYtPmRldmZuKSA+IHZpYV92bGlua19kZXZfaGkgfHwKCSAgICBQ
Q0lfU0xPVChkZXYtPmRldmZuKSA8IHZpYV92bGlua19kZXZfbG8pCgkJcmV0dXJuOwoKCS8qCgkg
KiBUaGlzIGlzIGFuIGludGVybmFsIFZMaW5rIGRldmljZSBvbiBhIFBJQyBpbnRlcnJ1cHQuIFRo
ZSBCSU9TCgkgKiBvdWdodCB0byBoYXZlIHNldCB0aGlzIGJ1dCBtYXkgbm90IGhhdmUsIHNvIHdl
IHJlZG8gaXQuCgkgKi8KCXBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgUENJX0lOVEVSUlVQVF9M
SU5FLCAmaXJxKTsKCWlmIChuZXdfaXJxICE9IGlycSkgewoJCXBjaV9pbmZvKGRldiwgIlZJQSBW
TGluayBJUlEgZml4dXAsIGZyb20gJWQgdG8gJWRcbiIsCgkJCWlycSwgbmV3X2lycSk7CgkJdWRl
bGF5KDE1KTsJLyogdW5rbm93biBpZiBkZWxheSByZWFsbHkgbmVlZGVkICovCgkJcGNpX3dyaXRl
X2NvbmZpZ19ieXRlKGRldiwgUENJX0lOVEVSUlVQVF9MSU5FLCBuZXdfaXJxKTsKCX0KfQpERUNM
QVJFX1BDSV9GSVhVUF9FTkFCTEUoUENJX1ZFTkRPUl9JRF9WSUEsIFBDSV9BTllfSUQsIHF1aXJr
X3ZpYV92bGluayk7CgovKgogKiBWSUEgVlQ4MkM1OTggaGFzIGl0cyBkZXZpY2UgSUQgc2V0dGFi
bGUgYW5kIG1hbnkgQklPU2VzIHNldCBpdCB0byB0aGUgSUQKICogb2YgVlQ4MkM1OTcgZm9yIGJh
Y2t3YXJkIGNvbXBhdGliaWxpdHkuICBXZSBuZWVkIHRvIHN3aXRjaCBpdCBvZmYgdG8gYmUKICog
YWJsZSB0byByZWNvZ25pemUgdGhlIHJlYWwgdHlwZSBvZiB0aGUgY2hpcC4KICovCnN0YXRpYyB2
b2lkIHF1aXJrX3Z0ODJjNTk4X2lkKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXBjaV93cml0ZV9j
b25maWdfYnl0ZShkZXYsIDB4ZmMsIDApOwoJcGNpX3JlYWRfY29uZmlnX3dvcmQoZGV2LCBQQ0lf
REVWSUNFX0lELCAmZGV2LT5kZXZpY2UpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lf
VkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNTk3XzAsCXF1aXJrX3Z0ODJjNTk4
X2lkKTsKCi8qCiAqIENhcmRCdXMgY29udHJvbGxlcnMgaGF2ZSBhIGxlZ2FjeSBiYXNlIGFkZHJl
c3MgdGhhdCBlbmFibGVzIHRoZW0gdG8KICogcmVzcG9uZCBhcyBpODIzNjUgcGNtY2lhIGNvbnRy
b2xsZXJzLiAgV2UgZG9uJ3Qgd2FudCB0aGVtIHRvIGRvIHRoaXMKICogZXZlbiBpZiB0aGUgTGlu
dXggQ2FyZEJ1cyBkcml2ZXIgaXMgbm90IGxvYWRlZCwgYmVjYXVzZSB0aGUgTGludXggaTgyMzY1
CiAqIGRyaXZlciBkb2VzIG5vdCAoYW5kIHNob3VsZCBub3QpIGhhbmRsZSBDYXJkQnVzLgogKi8K
c3RhdGljIHZvaWQgcXVpcmtfY2FyZGJ1c19sZWdhY3koc3RydWN0IHBjaV9kZXYgKmRldikKewoJ
cGNpX3dyaXRlX2NvbmZpZ19kd29yZChkZXYsIFBDSV9DQl9MRUdBQ1lfTU9ERV9CQVNFLCAwKTsK
fQpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19GSU5BTChQQ0lfQU5ZX0lELCBQQ0lfQU5ZX0lELAoJ
CQlQQ0lfQ0xBU1NfQlJJREdFX0NBUkRCVVMsIDgsIHF1aXJrX2NhcmRidXNfbGVnYWN5KTsKREVD
TEFSRV9QQ0lfRklYVVBfQ0xBU1NfUkVTVU1FX0VBUkxZKFBDSV9BTllfSUQsIFBDSV9BTllfSUQs
CgkJCVBDSV9DTEFTU19CUklER0VfQ0FSREJVUywgOCwgcXVpcmtfY2FyZGJ1c19sZWdhY3kpOwoK
LyoKICogRm9sbG93aW5nIHRoZSBQQ0kgb3JkZXJpbmcgcnVsZXMgaXMgb3B0aW9uYWwgb24gdGhl
IEFNRDc2Mi4gSSdtIG5vdCBzdXJlCiAqIHdoYXQgdGhlIGRlc2lnbmVycyB3ZXJlIHNtb2tpbmcg
YnV0IGxldCdzIG5vdCBpbmhhbGUuLi4KICoKICogVG8gYmUgZmFpciB0byBBTUQsIGl0IGZvbGxv
d3MgdGhlIHNwZWMgYnkgZGVmYXVsdCwgaXQncyBCSU9TIHBlb3BsZSB3aG8KICogdHVybiBpdCBv
ZmYhCiAqLwpzdGF0aWMgdm9pZCBxdWlya19hbWRfb3JkZXJpbmcoc3RydWN0IHBjaV9kZXYgKmRl
dikKewoJdTMyIHBjaWM7CglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCAweDRDLCAmcGNpYyk7
CglpZiAoKHBjaWMgJiA2KSAhPSA2KSB7CgkJcGNpYyB8PSA2OwoJCXBjaV93YXJuKGRldiwgIkJJ
T1MgZmFpbGVkIHRvIGVuYWJsZSBQQ0kgc3RhbmRhcmRzIGNvbXBsaWFuY2U7IGZpeGluZyB0aGlz
IGVycm9yXG4iKTsKCQlwY2lfd3JpdGVfY29uZmlnX2R3b3JkKGRldiwgMHg0QywgcGNpYyk7CgkJ
cGNpX3JlYWRfY29uZmlnX2R3b3JkKGRldiwgMHg4NCwgJnBjaWMpOwoJCXBjaWMgfD0gKDEgPDwg
MjMpOwkvKiBSZXF1aXJlZCBpbiB0aGlzIG1vZGUgKi8KCQlwY2lfd3JpdGVfY29uZmlnX2R3b3Jk
KGRldiwgMHg4NCwgcGNpYyk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRP
Ul9JRF9BTUQsCVBDSV9ERVZJQ0VfSURfQU1EX0ZFX0dBVEVfNzAwQywgcXVpcmtfYW1kX29yZGVy
aW5nKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfQU1ELAlQ
Q0lfREVWSUNFX0lEX0FNRF9GRV9HQVRFXzcwMEMsIHF1aXJrX2FtZF9vcmRlcmluZyk7CgovKgog
KiBEcmVhbVdvcmtzLXByb3ZpZGVkIHdvcmthcm91bmQgZm9yIER1bm9yZCBJLTMwMDAgcHJvYmxl
bQogKgogKiBUaGlzIGNhcmQgZGVjb2RlcyBhbmQgcmVzcG9uZHMgdG8gYWRkcmVzc2VzIG5vdCBh
cHBhcmVudGx5IGFzc2lnbmVkIHRvCiAqIGl0LiAgV2UgZm9yY2UgYSBsYXJnZXIgYWxsb2NhdGlv
biB0byBlbnN1cmUgdGhhdCBub3RoaW5nIGdldHMgcHV0IHRvbwogKiBjbG9zZSB0byBpdC4KICov
CnN0YXRpYyB2b2lkIHF1aXJrX2R1bm9yZChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglzdHJ1Y3Qg
cmVzb3VyY2UgKnIgPSAmZGV2LT5yZXNvdXJjZVsxXTsKCglyLT5mbGFncyB8PSBJT1JFU09VUkNF
X1VOU0VUOwoJci0+c3RhcnQgPSAwOwoJci0+ZW5kID0gMHhmZmZmZmY7Cn0KREVDTEFSRV9QQ0lf
RklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfRFVOT1JELAlQQ0lfREVWSUNFX0lEX0RVTk9SRF9J
MzAwMCwJcXVpcmtfZHVub3JkKTsKCi8qCiAqIGk4MjM4MEZCIG1vYmlsZSBkb2NraW5nIGNvbnRy
b2xsZXI6IGl0cyBQQ0ktdG8tUENJIGJyaWRnZSBpcyBzdWJ0cmFjdGl2ZQogKiBkZWNvZGluZyAo
dHJhbnNwYXJlbnQpLCBhbmQgZG9lcyBpbmRpY2F0ZSB0aGlzIGluIHRoZSBQcm9nSWYuCiAqIFVu
Zm9ydHVuYXRlbHksIHRoZSBQcm9nSWYgdmFsdWUgaXMgd3JvbmcgLSAweDgwIGluc3RlYWQgb2Yg
MHgwMS4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3RyYW5zcGFyZW50X2JyaWRnZShzdHJ1Y3QgcGNp
X2RldiAqZGV2KQp7CglkZXYtPnRyYW5zcGFyZW50ID0gMTsKfQpERUNMQVJFX1BDSV9GSVhVUF9I
RUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjM4MEZCLAlx
dWlya190cmFuc3BhcmVudF9icmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZF
TkRPUl9JRF9UT1NISUJBLAkweDYwNSwJcXVpcmtfdHJhbnNwYXJlbnRfYnJpZGdlKTsKCi8qCiAq
IENvbW1vbiBtaXNjb25maWd1cmF0aW9uIG9mIHRoZSBNZWRpYUdYL0dlb2RlIFBDSSBtYXN0ZXIg
dGhhdCB3aWxsIHJlZHVjZQogKiBQQ0kgYmFuZHdpZHRoIGZyb20gNzBNQi9zIHRvIDI1TUIvcy4g
IFNlZSB0aGUgR1hNL0dYTFYvR1gxIGRhdGFzaGVldHMKICogZm91bmQgYXQgaHR0cDovL3d3dy5u
YXRpb25hbC5jb20vYW5hbG9nIGZvciBpbmZvIG9uIHdoYXQgdGhlc2UgYml0cyBkby4KICogPGNo
cmlzdGVyQHdlaW5pZ2VsLnNlPgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfbWVkaWFneF9tYXN0ZXIo
c3RydWN0IHBjaV9kZXYgKmRldikKewoJdTggcmVnOwoKCXBjaV9yZWFkX2NvbmZpZ19ieXRlKGRl
diwgMHg0MSwgJnJlZyk7CglpZiAocmVnICYgMikgewoJCXJlZyAmPSB+MjsKCQlwY2lfaW5mbyhk
ZXYsICJGaXh1cCBmb3IgTWVkaWFHWC9HZW9kZSBTbGF2ZSBEaXNjb25uZWN0IEJvdW5kYXJ5ICgw
eDQxPTB4JTAyeClcbiIsCgkJCSByZWcpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4
NDEsIHJlZyk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9DWVJJ
WCwJUENJX0RFVklDRV9JRF9DWVJJWF9QQ0lfTUFTVEVSLCBxdWlya19tZWRpYWd4X21hc3Rlcik7
CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0NZUklYLAlQQ0lfREVWSUNF
X0lEX0NZUklYX1BDSV9NQVNURVIsIHF1aXJrX21lZGlhZ3hfbWFzdGVyKTsKCi8qCiAqIEVuc3Vy
ZSBDMCByZXYgcmVzdHJlYW1pbmcgaXMgb2ZmLiBUaGlzIGlzIG5vcm1hbGx5IGRvbmUgYnkgdGhl
IEJJT1MgYnV0CiAqIGluIHRoZSBvZGQgY2FzZSBpdCBpcyBub3QgdGhlIHJlc3VsdHMgYXJlIGNv
cnJ1cHRpb24gaGVuY2UgdGhlIHByZXNlbmNlCiAqIG9mIGEgTGludXggY2hlY2suCiAqLwpzdGF0
aWMgdm9pZCBxdWlya19kaXNhYmxlX3B4YihzdHJ1Y3QgcGNpX2RldiAqcGRldikKewoJdTE2IGNv
bmZpZzsKCglpZiAocGRldi0+cmV2aXNpb24gIT0gMHgwNCkJCS8qIE9ubHkgQzAgcmVxdWlyZXMg
dGhpcyAqLwoJCXJldHVybjsKCXBjaV9yZWFkX2NvbmZpZ193b3JkKHBkZXYsIDB4NDAsICZjb25m
aWcpOwoJaWYgKGNvbmZpZyAmICgxPDw2KSkgewoJCWNvbmZpZyAmPSB+KDE8PDYpOwoJCXBjaV93
cml0ZV9jb25maWdfd29yZChwZGV2LCAweDQwLCBjb25maWcpOwoJCXBjaV9pbmZvKHBkZXYsICJD
MCByZXZpc2lvbiA0NTBOWC4gRGlzYWJsaW5nIFBDSSByZXN0cmVhbWluZ1xuIik7Cgl9Cn0KREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9J
TlRFTF84MjQ1NE5YLAlxdWlya19kaXNhYmxlX3B4Yik7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VN
RV9FQVJMWShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyNDU0Tlgs
CXF1aXJrX2Rpc2FibGVfcHhiKTsKCnN0YXRpYyB2b2lkIHF1aXJrX2FtZF9pZGVfbW9kZShzdHJ1
Y3QgcGNpX2RldiAqcGRldikKewoJLyogc2V0IFNCWDAwL0h1ZHNvbi0yIFNBVEEgaW4gSURFIG1v
ZGUgdG8gQUhDSSBtb2RlICovCgl1OCB0bXA7CgoJcGNpX3JlYWRfY29uZmlnX2J5dGUocGRldiwg
UENJX0NMQVNTX0RFVklDRSwgJnRtcCk7CglpZiAodG1wID09IDB4MDEpIHsKCQlwY2lfcmVhZF9j
b25maWdfYnl0ZShwZGV2LCAweDQwLCAmdG1wKTsKCQlwY2lfd3JpdGVfY29uZmlnX2J5dGUocGRl
diwgMHg0MCwgdG1wfDEpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShwZGV2LCAweDksIDEpOwoJ
CXBjaV93cml0ZV9jb25maWdfYnl0ZShwZGV2LCAweGEsIDYpOwoJCXBjaV93cml0ZV9jb25maWdf
Ynl0ZShwZGV2LCAweDQwLCB0bXApOwoKCQlwZGV2LT5jbGFzcyA9IFBDSV9DTEFTU19TVE9SQUdF
X1NBVEFfQUhDSTsKCQlwY2lfaW5mbyhwZGV2LCAic2V0IFNBVEEgdG8gQUhDSSBtb2RlXG4iKTsK
CX0KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJ
Q0VfSURfQVRJX0lYUDYwMF9TQVRBLCBxdWlya19hbWRfaWRlX21vZGUpOwpERUNMQVJFX1BDSV9G
SVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX0lY
UDYwMF9TQVRBLCBxdWlya19hbWRfaWRlX21vZGUpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIo
UENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX0lYUDcwMF9TQVRBLCBxdWlya19h
bWRfaWRlX21vZGUpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9J
RF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX0lYUDcwMF9TQVRBLCBxdWlya19hbWRfaWRlX21vZGUp
OwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BTUQsIFBDSV9ERVZJQ0Vf
SURfQU1EX0hVRFNPTjJfU0FUQV9JREUsIHF1aXJrX2FtZF9pZGVfbW9kZSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0FNRCwgUENJX0RFVklDRV9JRF9BTURf
SFVEU09OMl9TQVRBX0lERSwgcXVpcmtfYW1kX2lkZV9tb2RlKTsKREVDTEFSRV9QQ0lfRklYVVBf
SEVBREVSKFBDSV9WRU5ET1JfSURfQU1ELCAweDc5MDAsIHF1aXJrX2FtZF9pZGVfbW9kZSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0FNRCwgMHg3OTAwLCBx
dWlya19hbWRfaWRlX21vZGUpOwoKLyogU2VydmVyd29ya3MgQ1NCNSBJREUgZG9lcyBub3QgZnVs
bHkgc3VwcG9ydCBuYXRpdmUgbW9kZSAqLwpzdGF0aWMgdm9pZCBxdWlya19zdndrc19jc2I1aWRl
KHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7Cgl1OCBwcm9nOwoJcGNpX3JlYWRfY29uZmlnX2J5dGUo
cGRldiwgUENJX0NMQVNTX1BST0csICZwcm9nKTsKCWlmIChwcm9nICYgNSkgewoJCXByb2cgJj0g
fjU7CgkJcGRldi0+Y2xhc3MgJj0gfjU7CgkJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKHBkZXYsIFBD
SV9DTEFTU19QUk9HLCBwcm9nKTsKCQkvKiBQQ0kgbGF5ZXIgd2lsbCBzb3J0IG91dCByZXNvdXJj
ZXMgKi8KCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX1NFUlZFUldP
UktTLCBQQ0lfREVWSUNFX0lEX1NFUlZFUldPUktTX0NTQjVJREUsIHF1aXJrX3N2d2tzX2NzYjVp
ZGUpOwoKLyogSW50ZWwgODI4MDFDQU0gSUNIMy1NIGRhdGFzaGVldCBzYXlzIElERSBtb2RlcyBt
dXN0IGJlIHRoZSBzYW1lICovCnN0YXRpYyB2b2lkIHF1aXJrX2lkZV9zYW1lbW9kZShzdHJ1Y3Qg
cGNpX2RldiAqcGRldikKewoJdTggcHJvZzsKCglwY2lfcmVhZF9jb25maWdfYnl0ZShwZGV2LCBQ
Q0lfQ0xBU1NfUFJPRywgJnByb2cpOwoKCWlmICgoKHByb2cgJiAxKSAmJiAhKHByb2cgJiA0KSkg
fHwgKChwcm9nICYgNCkgJiYgIShwcm9nICYgMSkpKSB7CgkJcGNpX2luZm8ocGRldiwgIklERSBt
b2RlIG1pc21hdGNoOyBmb3JjaW5nIGxlZ2FjeSBtb2RlXG4iKTsKCQlwcm9nICY9IH41OwoJCXBk
ZXYtPmNsYXNzICY9IH41OwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShwZGV2LCBQQ0lfQ0xBU1Nf
UFJPRywgcHJvZyk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9J
TlRFTCwgUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUNBXzEwLCBxdWlya19pZGVfc2FtZW1vZGUp
OwoKLyogU29tZSBBVEEgZGV2aWNlcyBicmVhayBpZiBwdXQgaW50byBEMyAqLwpzdGF0aWMgdm9p
ZCBxdWlya19ub19hdGFfZDMoc3RydWN0IHBjaV9kZXYgKnBkZXYpCnsKCXBkZXYtPmRldl9mbGFn
cyB8PSBQQ0lfREVWX0ZMQUdTX05PX0QzOwp9Ci8qIFF1aXJrIHRoZSBsZWdhY3kgQVRBIGRldmlj
ZXMgb25seS4gVGhlIEFIQ0kgb25lcyBhcmUgb2sgKi8KREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1Nf
RUFSTFkoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgUENJX0FOWV9JRCwKCQkJCVBDSV9DTEFT
U19TVE9SQUdFX0lERSwgOCwgcXVpcmtfbm9fYXRhX2QzKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xB
U1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9BTllfSUQsCgkJCQlQQ0lfQ0xBU1NfU1RP
UkFHRV9JREUsIDgsIHF1aXJrX25vX2F0YV9kMyk7Ci8qIEFMaSBsb3NlcyBzb21lIHJlZ2lzdGVy
IHNldHRpbmdzIHRoYXQgd2UgY2Fubm90IHRoZW4gcmVzdG9yZSAqLwpERUNMQVJFX1BDSV9GSVhV
UF9DTEFTU19FQVJMWShQQ0lfVkVORE9SX0lEX0FMLCBQQ0lfQU5ZX0lELAoJCQkJUENJX0NMQVNT
X1NUT1JBR0VfSURFLCA4LCBxdWlya19ub19hdGFfZDMpOwovKiBWSUEgY29tZXMgYmFjayBmaW5l
IGJ1dCB3ZSBuZWVkIHRvIGtlZXAgaXQgYWxpdmUgb3IgQUNQSSBHVE0gZmFpbHVyZXMKICAgb2Nj
dXIgd2hlbiBtb2RlIGRldGVjdGluZyAqLwpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19FQVJMWShQ
Q0lfVkVORE9SX0lEX1ZJQSwgUENJX0FOWV9JRCwKCQkJCVBDSV9DTEFTU19TVE9SQUdFX0lERSwg
OCwgcXVpcmtfbm9fYXRhX2QzKTsKCi8qCiAqIFRoaXMgd2FzIG9yaWdpbmFsbHkgYW4gQWxwaGEt
c3BlY2lmaWMgdGhpbmcsIGJ1dCBpdCByZWFsbHkgZml0cyBoZXJlLgogKiBUaGUgaTgyMzc1IFBD
SS9FSVNBIGJyaWRnZSBhcHBlYXJzIGFzIG5vbi1jbGFzc2lmaWVkLiBGaXggdGhhdC4KICovCnN0
YXRpYyB2b2lkIHF1aXJrX2Vpc2FfYnJpZGdlKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWRldi0+
Y2xhc3MgPSBQQ0lfQ0xBU1NfQlJJREdFX0VJU0EgPDwgODsKfQpERUNMQVJFX1BDSV9GSVhVUF9I
RUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjM3NSwJcXVp
cmtfZWlzYV9icmlkZ2UpOwoKLyoKICogT24gQVNVUyBQNEIgYm9hcmRzLCB0aGUgU01CdXMgUENJ
IERldmljZSB3aXRoaW4gdGhlIElDSDIvNCBzb3V0aGJyaWRnZQogKiBpcyBub3QgYWN0aXZhdGVk
LiBUaGUgbXl0aCBpcyB0aGF0IEFzdXMgc2FpZCB0aGF0IHRoZXkgZG8gbm90IHdhbnQgdGhlCiAq
IHVzZXJzIHRvIGJlIGlycml0YXRlZCBieSBqdXN0IGFub3RoZXIgUENJIERldmljZSBpbiB0aGUg
V2luOTggZGV2aWNlCiAqIG1hbmFnZXIuIChzZWUgdGhlIGZpbGUgcHJvZy9ob3RwbHVnL1JFQURN
RS5wNGIgaW4gdGhlIGxtX3NlbnNvcnMKICogcGFja2FnZSAyLjcuMCBmb3IgZGV0YWlscykKICoK
ICogVGhlIFNNQnVzIFBDSSBEZXZpY2UgY2FuIGJlIGFjdGl2YXRlZCBieSBzZXR0aW5nIGEgYml0
IGluIHRoZSBJQ0ggTFBDCiAqIGJyaWRnZS4gVW5mb3J0dW5hdGVseSwgdGhpcyBkZXZpY2UgaGFz
IG5vIHN1YnZlbmRvci9zdWJkZXZpY2UgSUQuIFNvIGl0CiAqIGJlY29tZXMgbmVjZXNzYXJ5IHRv
IGRvIHRoaXMgdHdlYWsgaW4gdHdvIHN0ZXBzIC0tIHRoZSBjaG9zZW4gdHJpZ2dlcgogKiBpcyBl
aXRoZXIgdGhlIEhvc3QgYnJpZGdlIChwcmVmZXJyZWQpIG9yIG9uLWJvYXJkIFZHQSBjb250cm9s
bGVyLgogKgogKiBOb3RlIHRoYXQgd2UgdXNlZCB0byB1bmhpZGUgdGhlIFNNQnVzIHRoYXQgd2F5
IG9uIFRvc2hpYmEgbGFwdG9wcwogKiAoU2F0ZWxsaXRlIEE0MCBhbmQgVGVjcmEgTTIpIGJ1dCB0
aGVuIGZvdW5kIHRoYXQgdGhlIHRoZXJtYWwgbWFuYWdlbWVudAogKiB3YXMgZG9uZSBieSBTTU0g
Y29kZSwgd2hpY2ggY291bGQgY2F1c2UgdW5zeW5jaHJvbml6ZWQgY29uY3VycmVudAogKiBhY2Nl
c3NlcyB0byB0aGUgU01CdXMgcmVnaXN0ZXJzLCB3aXRoIHBvdGVudGlhbGx5IGJhZCBlZmZlY3Rz
LiBUaHVzIHlvdQogKiBzaG91bGQgYmUgdmVyeSBjYXJlZnVsIHdoZW4gYWRkaW5nIG5ldyBlbnRy
aWVzOiBpZiBTTU0gaXMgYWNjZXNzaW5nIHRoZQogKiBJbnRlbCBTTUJ1cywgdGhpcyBpcyBhIHZl
cnkgZ29vZCByZWFzb24gdG8gbGVhdmUgaXQgaGlkZGVuLgogKgogKiBMaWtld2lzZSwgbWFueSBy
ZWNlbnQgbGFwdG9wcyB1c2UgQUNQSSBmb3IgdGhlcm1hbCBtYW5hZ2VtZW50LiBJZiB0aGUKICog
QUNQSSBEU0RUIGNvZGUgYWNjZXNzZXMgdGhlIFNNQnVzLCB0aGVuIExpbnV4IHNob3VsZCBub3Qg
YWNjZXNzIGl0CiAqIG5hdGl2ZWx5LCBhbmQga2VlcGluZyB0aGUgU01CdXMgaGlkZGVuIGlzIHRo
ZSByaWdodCB0aGluZyB0byBkby4gSWYgeW91CiAqIGFyZSBhYm91dCB0byBhZGQgYW4gZW50cnkg
aW4gdGhlIHRhYmxlIGJlbG93LCBwbGVhc2UgZmlyc3QgZGlzYXNzZW1ibGUKICogdGhlIERTRFQg
YW5kIGRvdWJsZS1jaGVjayB0aGF0IHRoZXJlIGlzIG5vIGNvZGUgYWNjZXNzaW5nIHRoZSBTTUJ1
cy4KICovCnN0YXRpYyBpbnQgYXN1c19oaWRlc19zbWJ1czsKCnN0YXRpYyB2b2lkIGFzdXNfaGlk
ZXNfc21idXNfaG9zdGJyaWRnZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAodW5saWtlbHko
ZGV2LT5zdWJzeXN0ZW1fdmVuZG9yID09IFBDSV9WRU5ET1JfSURfQVNVU1RFSykpIHsKCQlpZiAo
ZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84Mjg0NV9IQikKCQkJc3dpdGNoIChk
ZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDgwMjU6IC8qIFA0Qi1MWCAqLwoJCQlj
YXNlIDB4ODA3MDogLyogUDRCICovCgkJCWNhc2UgMHg4MDg4OiAvKiBQNEI1MzMgKi8KCQkJY2Fz
ZSAweDE2MjY6IC8qIEwzQyBub3RlYm9vayAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJ
CX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODQ1R19I
QikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDgwYjE6IC8q
IFA0R0UtViAqLwoJCQljYXNlIDB4ODBiMjogLyogUDRQRSAqLwoJCQljYXNlIDB4ODA5MzogLyog
UDRCNTMzLVYgKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAxOwoJCQl9CgkJZWxzZSBpZiAoZGV2
LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84Mjg1MF9IQikKCQkJc3dpdGNoIChkZXYt
PnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDgwMzA6IC8qIFA0VDUzMyAqLwoJCQkJYXN1
c19oaWRlc19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVW
SUNFX0lEX0lOVEVMXzcyMDVfMCkKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsK
CQkJY2FzZSAweDgwNzA6IC8qIFA0RzhYIERlbHV4ZSAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9
IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX0lOVEVMX0U3
NTAxX01DSCkKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDgw
Yzk6IC8qIFBVLURMUyAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlm
IChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODU1R01fSEIpCgkJCXN3aXRj
aCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHgxNzUxOiAvKiBNMk4gbm90ZWJv
b2sgKi8KCQkJY2FzZSAweDE4MjE6IC8qIE01TiBub3RlYm9vayAqLwoJCQljYXNlIDB4MTg5Nzog
LyogQTZMIG5vdGVib29rICovCgkJCQlhc3VzX2hpZGVzX3NtYnVzID0gMTsKCQkJfQoJCWVsc2Ug
aWYgKGRldi0+ZGV2aWNlID09IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4NTVQTV9IQikKCQkJc3dp
dGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDE4NGI6IC8qIFcxTiBub3Rl
Ym9vayAqLwoJCQljYXNlIDB4MTg2YTogLyogTTZOZSBub3RlYm9vayAqLwoJCQkJYXN1c19oaWRl
c19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lE
X0lOVEVMXzgyODY1X0hCKQoJCQlzd2l0Y2ggKGRldi0+c3Vic3lzdGVtX2RldmljZSkgewoJCQlj
YXNlIDB4ODBmMjogLyogUDRQODAwLVggKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAxOwoJCQl9
CgkJZWxzZSBpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84MjkxNUdNX0hC
KQoJCQlzd2l0Y2ggKGRldi0+c3Vic3lzdGVtX2RldmljZSkgewoJCQljYXNlIDB4MTg4MjogLyog
TTZWIG5vdGVib29rICovCgkJCWNhc2UgMHgxOTc3OiAvKiBBNlZBIG5vdGVib29rICovCgkJCQlh
c3VzX2hpZGVzX3NtYnVzID0gMTsKCQkJfQoJfSBlbHNlIGlmICh1bmxpa2VseShkZXYtPnN1YnN5
c3RlbV92ZW5kb3IgPT0gUENJX1ZFTkRPUl9JRF9IUCkpIHsKCQlpZiAoZGV2LT5kZXZpY2UgPT0g
IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4NTVQTV9IQikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3Rl
bV9kZXZpY2UpIHsKCQkJY2FzZSAweDA4OEM6IC8qIEhQIENvbXBhcSBuYzgwMDAgKi8KCQkJY2Fz
ZSAweDA4OTA6IC8qIEhQIENvbXBhcSBuYzYwMDAgKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAx
OwoJCQl9CgkJZWxzZSBpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84Mjg2
NV9IQikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDEyYmM6
IC8qIEhQIEQzMzBMICovCgkJCWNhc2UgMHgxMmJkOiAvKiBIUCBENTMwICovCgkJCWNhc2UgMHgw
MDZhOiAvKiBIUCBDb21wYXEgbng5NTAwICovCgkJCQlhc3VzX2hpZGVzX3NtYnVzID0gMTsKCQkJ
fQoJCWVsc2UgaWYgKGRldi0+ZGV2aWNlID09IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4NzVfSEIp
CgkJCXN3aXRjaCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHgxMmJmOiAvKiBI
UCB4dzQxMDAgKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAxOwoJCQl9Cgl9IGVsc2UgaWYgKHVu
bGlrZWx5KGRldi0+c3Vic3lzdGVtX3ZlbmRvciA9PSBQQ0lfVkVORE9SX0lEX1NBTVNVTkcpKSB7
CgkJaWYgKGRldi0+ZGV2aWNlID09ICBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODU1UE1fSEIpCgkJ
CXN3aXRjaCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHhDMDBDOiAvKiBTYW1z
dW5nIFAzNSBub3RlYm9vayAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJfQoJfSBlbHNl
IGlmICh1bmxpa2VseShkZXYtPnN1YnN5c3RlbV92ZW5kb3IgPT0gUENJX1ZFTkRPUl9JRF9DT01Q
QVEpKSB7CgkJaWYgKGRldi0+ZGV2aWNlID09IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4NTVQTV9I
QikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDAwNTg6IC8q
IENvbXBhcSBFdm8gTjYyMGMgKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAxOwoJCQl9CgkJZWxz
ZSBpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84MjgxMF9JRzMpCgkJCXN3
aXRjaCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHhCMTZDOiAvKiBDb21wYXEg
RGVza3BybyBFUCA0MDE5NjMtMDAxIChQQ0EjIDAxMDE3NCkgKi8KCQkJCS8qIE1vdGhlcmJvYXJk
IGRvZXNuJ3QgaGF2ZSBIb3N0IGJyaWRnZQoJCQkJICogc3VidmVuZG9yL3N1YmRldmljZSBJRHMs
IHRoZXJlZm9yZSBjaGVja2luZwoJCQkJICogaXRzIG9uLWJvYXJkIFZHQSBjb250cm9sbGVyICov
CgkJCQlhc3VzX2hpZGVzX3NtYnVzID0gMTsKCQkJfQoJCWVsc2UgaWYgKGRldi0+ZGV2aWNlID09
IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFEQl8yKQoJCQlzd2l0Y2ggKGRldi0+c3Vic3lzdGVt
X2RldmljZSkgewoJCQljYXNlIDB4MDBiODogLyogQ29tcGFxIEV2byBENTEwIENNVCAqLwoJCQlj
YXNlIDB4MDBiOTogLyogQ29tcGFxIEV2byBENTEwIFNGRiAqLwoJCQljYXNlIDB4MDBiYTogLyog
Q29tcGFxIEV2byBENTEwIFVTRFQgKi8KCQkJCS8qIE1vdGhlcmJvYXJkIGRvZXNuJ3QgaGF2ZSBI
b3N0IGJyaWRnZQoJCQkJICogc3VidmVuZG9yL3N1YmRldmljZSBJRHMgYW5kIG9uLWJvYXJkIFZH
QQoJCQkJICogY29udHJvbGxlciBpcyBkaXNhYmxlZCBpZiBhbiBBR1AgY2FyZCBpcwoJCQkJICog
aW5zZXJ0ZWQsIHRoZXJlZm9yZSBjaGVja2luZyBVU0IgVUhDSQoJCQkJICogQ29udHJvbGxlciAj
MSAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmlj
ZSA9PSBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODE1X0NHQykKCQkJc3dpdGNoIChkZXYtPnN1YnN5
c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDAwMUE6IC8qIENvbXBhcSBEZXNrcHJvIEVOIFNTRiBQ
NjY3IDgxNUUgKi8KCQkJCS8qIE1vdGhlcmJvYXJkIGRvZXNuJ3QgaGF2ZSBob3N0IGJyaWRnZQoJ
CQkJICogc3VidmVuZG9yL3N1YmRldmljZSBJRHMsIHRoZXJlZm9yZSBjaGVja2luZwoJCQkJICog
aXRzIG9uLWJvYXJkIFZHQSBjb250cm9sbGVyICovCgkJCQlhc3VzX2hpZGVzX3NtYnVzID0gMTsK
CQkJfQoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQ
Q0lfREVWSUNFX0lEX0lOVEVMXzgyODQ1X0hCLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2Up
OwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklD
RV9JRF9JTlRFTF84Mjg0NUdfSEIsCWFzdXNfaGlkZXNfc21idXNfaG9zdGJyaWRnZSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lO
VEVMXzgyODUwX0hCLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2UpOwpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84Mjg2
NV9IQiwJYXN1c19oaWRlc19zbWJ1c19ob3N0YnJpZGdlKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVB
REVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI4NzVfSEIsCWFz
dXNfaGlkZXNfc21idXNfaG9zdGJyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lf
VkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzcyMDVfMCwJYXN1c19oaWRlc19z
bWJ1c19ob3N0YnJpZGdlKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
SU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfRTc1MDFfTUNILAlhc3VzX2hpZGVzX3NtYnVzX2hv
c3RicmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJ
UENJX0RFVklDRV9JRF9JTlRFTF84Mjg1NVBNX0hCLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3Ricmlk
Z2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RF
VklDRV9JRF9JTlRFTF84Mjg1NUdNX0hCLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2UpOwpE
RUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF84MjkxNUdNX0hCLCBhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2UpOwoKREVDTEFS
RV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5U
RUxfODI4MTBfSUczLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2UpOwpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84Mjgw
MURCXzIsCWFzdXNfaGlkZXNfc21idXNfaG9zdGJyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODE1X0NHQywJ
YXN1c19oaWRlc19zbWJ1c19ob3N0YnJpZGdlKTsKCnN0YXRpYyB2b2lkIGFzdXNfaGlkZXNfc21i
dXNfbHBjKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUxNiB2YWw7CgoJaWYgKGxpa2VseSghYXN1
c19oaWRlc19zbWJ1cykpCgkJcmV0dXJuOwoKCXBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwgMHhG
MiwgJnZhbCk7CglpZiAodmFsICYgMHg4KSB7CgkJcGNpX3dyaXRlX2NvbmZpZ193b3JkKGRldiwg
MHhGMiwgdmFsICYgKH4weDgpKTsKCQlwY2lfcmVhZF9jb25maWdfd29yZChkZXYsIDB4RjIsICZ2
YWwpOwoJCWlmICh2YWwgJiAweDgpCgkJCXBjaV9pbmZvKGRldiwgImk4MDEgU01CdXMgZGV2aWNl
IGNvbnRpbnVlcyB0byBwbGF5ICdoaWRlIGFuZCBzZWVrJyEgMHgleFxuIiwKCQkJCSB2YWwpOwoJ
CWVsc2UKCQkJcGNpX2luZm8oZGV2LCAiRW5hYmxlZCBpODAxIFNNQnVzIGRldmljZVxuIik7Cgl9
Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJ
Q0VfSURfSU5URUxfODI4MDFBQV8wLAlhc3VzX2hpZGVzX3NtYnVzX2xwYyk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgy
ODAxREJfMCwJYXN1c19oaWRlc19zbWJ1c19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIo
UENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUJBXzAsCWFzdXNf
aGlkZXNfc21idXNfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
SU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFDQV8wLAlhc3VzX2hpZGVzX3NtYnVzX2xw
Yyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVW
SUNFX0lEX0lOVEVMXzgyODAxQ0FfMTIsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsKREVDTEFSRV9Q
Q0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxf
ODI4MDFEQl8xMiwJYXN1c19oaWRlc19zbWJ1c19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFE
RVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUVCXzAsCWFz
dXNfaGlkZXNfc21idXNfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9W
RU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFBQV8wLAlhc3VzX2hpZGVz
X3NtYnVzX2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lE
X0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODAxREJfMCwJYXN1c19oaWRlc19zbWJ1c19s
cGMpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwJ
UENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUJBXzAsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsKREVD
TEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJ
Q0VfSURfSU5URUxfODI4MDFDQV8wLAlhc3VzX2hpZGVzX3NtYnVzX2xwYyk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lO
VEVMXzgyODAxQ0FfMTIsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBf
UkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI4
MDFEQl8xMiwJYXN1c19oaWRlc19zbWJ1c19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVf
RUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUVCXzAs
CWFzdXNfaGlkZXNfc21idXNfbHBjKTsKCi8qIEl0IGFwcGVhcnMgd2UganVzdCBoYXZlIG9uZSBz
dWNoIGRldmljZS4gSWYgbm90LCB3ZSBoYXZlIGEgd2FybmluZyAqLwpzdGF0aWMgdm9pZCBfX2lv
bWVtICphc3VzX3JjYmFfYmFzZTsKc3RhdGljIHZvaWQgYXN1c19oaWRlc19zbWJ1c19scGNfaWNo
Nl9zdXNwZW5kKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUzMiByY2JhOwoKCWlmIChsaWtlbHko
IWFzdXNfaGlkZXNfc21idXMpKQoJCXJldHVybjsKCVdBUk5fT04oYXN1c19yY2JhX2Jhc2UpOwoK
CXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIDB4RjAsICZyY2JhKTsKCS8qIHVzZSBiaXRzIDMx
OjE0LCAxNiBrQiBhbGlnbmVkICovCglhc3VzX3JjYmFfYmFzZSA9IGlvcmVtYXBfbm9jYWNoZShy
Y2JhICYgMHhGRkZGQzAwMCwgMHg0MDAwKTsKCWlmIChhc3VzX3JjYmFfYmFzZSA9PSBOVUxMKQoJ
CXJldHVybjsKfQoKc3RhdGljIHZvaWQgYXN1c19oaWRlc19zbWJ1c19scGNfaWNoNl9yZXN1bWVf
ZWFybHkoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTMyIHZhbDsKCglpZiAobGlrZWx5KCFhc3Vz
X2hpZGVzX3NtYnVzIHx8ICFhc3VzX3JjYmFfYmFzZSkpCgkJcmV0dXJuOwoKCS8qIHJlYWQgdGhl
IEZ1bmN0aW9uIERpc2FibGUgcmVnaXN0ZXIsIGR3b3JkIG1vZGUgb25seSAqLwoJdmFsID0gcmVh
ZGwoYXN1c19yY2JhX2Jhc2UgKyAweDM0MTgpOwoKCS8qIGVuYWJsZSB0aGUgU01CdXMgZGV2aWNl
ICovCgl3cml0ZWwodmFsICYgMHhGRkZGRkZGNywgYXN1c19yY2JhX2Jhc2UgKyAweDM0MTgpOwp9
CgpzdGF0aWMgdm9pZCBhc3VzX2hpZGVzX3NtYnVzX2xwY19pY2g2X3Jlc3VtZShzdHJ1Y3QgcGNp
X2RldiAqZGV2KQp7CglpZiAobGlrZWx5KCFhc3VzX2hpZGVzX3NtYnVzIHx8ICFhc3VzX3JjYmFf
YmFzZSkpCgkJcmV0dXJuOwoKCWlvdW5tYXAoYXN1c19yY2JhX2Jhc2UpOwoJYXN1c19yY2JhX2Jh
c2UgPSBOVUxMOwoJcGNpX2luZm8oZGV2LCAiRW5hYmxlZCBJQ0g2L2k4MDEgU01CdXMgZGV2aWNl
XG4iKTsKfQoKc3RhdGljIHZvaWQgYXN1c19oaWRlc19zbWJ1c19scGNfaWNoNihzdHJ1Y3QgcGNp
X2RldiAqZGV2KQp7Cglhc3VzX2hpZGVzX3NtYnVzX2xwY19pY2g2X3N1c3BlbmQoZGV2KTsKCWFz
dXNfaGlkZXNfc21idXNfbHBjX2ljaDZfcmVzdW1lX2Vhcmx5KGRldik7Cglhc3VzX2hpZGVzX3Nt
YnVzX2xwY19pY2g2X3Jlc3VtZShkZXYpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lf
VkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDZfMSwJYXN1c19oaWRlc19z
bWJ1c19scGNfaWNoNik7CkRFQ0xBUkVfUENJX0ZJWFVQX1NVU1BFTkQoUENJX1ZFTkRPUl9JRF9J
TlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g2XzEsCWFzdXNfaGlkZXNfc21idXNfbHBjX2lj
aDZfc3VzcGVuZCk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0lOVEVM
LAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDZfMSwJYXN1c19oaWRlc19zbWJ1c19scGNfaWNoNl9y
ZXN1bWUpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRF
TCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g2XzEsCWFzdXNfaGlkZXNfc21idXNfbHBjX2ljaDZf
cmVzdW1lX2Vhcmx5KTsKCi8qIFNpUyA5Nnggc291dGggYnJpZGdlOiBCSU9TIHR5cGljYWxseSBo
aWRlcyBTTUJ1cyBkZXZpY2UuLi4gICovCnN0YXRpYyB2b2lkIHF1aXJrX3Npc185Nnhfc21idXMo
c3RydWN0IHBjaV9kZXYgKmRldikKewoJdTggdmFsID0gMDsKCXBjaV9yZWFkX2NvbmZpZ19ieXRl
KGRldiwgMHg3NywgJnZhbCk7CglpZiAodmFsICYgMHgxMCkgewoJCXBjaV9pbmZvKGRldiwgIkVu
YWJsaW5nIFNpUyA5NnggU01CdXNcbiIpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4
NzcsIHZhbCAmIH4weDEwKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRP
Ul9JRF9TSSwJUENJX0RFVklDRV9JRF9TSV85NjEsCQlxdWlya19zaXNfOTZ4X3NtYnVzKTsKREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lf
OTYyLAkJcXVpcmtfc2lzXzk2eF9zbWJ1cyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lf
VkVORE9SX0lEX1NJLAlQQ0lfREVWSUNFX0lEX1NJXzk2MywJCXF1aXJrX3Npc185Nnhfc21idXMp
OwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9TSSwJUENJX0RFVklDRV9J
RF9TSV9MUEMsCQlxdWlya19zaXNfOTZ4X3NtYnVzKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1F
X0VBUkxZKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lfOTYxLAkJcXVpcmtfc2lz
Xzk2eF9zbWJ1cyk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lE
X1NJLAlQQ0lfREVWSUNFX0lEX1NJXzk2MiwJCXF1aXJrX3Npc185Nnhfc21idXMpOwpERUNMQVJF
X1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9TSSwJUENJX0RFVklDRV9JRF9T
SV85NjMsCQlxdWlya19zaXNfOTZ4X3NtYnVzKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VB
UkxZKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lfTFBDLAkJcXVpcmtfc2lzXzk2
eF9zbWJ1cyk7CgovKgogKiAuLi4gVGhpcyBpcyBmdXJ0aGVyIGNvbXBsaWNhdGVkIGJ5IHRoZSBm
YWN0IHRoYXQgc29tZSBTaVM5Nnggc291dGgKICogYnJpZGdlcyBwcmV0ZW5kIHRvIGJlIDg1QzUw
My81NTEzIGluc3RlYWQuICBJbiB0aGF0IGNhc2Ugc2VlIGlmIHdlCiAqIHNwb3R0ZWQgYSBjb21w
YXRpYmxlIG5vcnRoIGJyaWRnZSB0byBtYWtlIHN1cmUuCiAqIChwY2lfZmluZF9kZXZpY2UoKSBk
b2Vzbid0IHdvcmsgeWV0KQogKgogKiBXZSBjYW4gYWxzbyBlbmFibGUgdGhlIHNpczk2eCBiaXQg
aW4gdGhlIGRpc2NvdmVyeSByZWdpc3Rlci4uCiAqLwojZGVmaW5lIFNJU19ERVRFQ1RfUkVHSVNU
RVIgMHg0MAoKc3RhdGljIHZvaWQgcXVpcmtfc2lzXzUwMyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7
Cgl1OCByZWc7Cgl1MTYgZGV2aWQ7CgoJcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBTSVNfREVU
RUNUX1JFR0lTVEVSLCAmcmVnKTsKCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIFNJU19ERVRF
Q1RfUkVHSVNURVIsIHJlZyB8ICgxIDw8IDYpKTsKCXBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwg
UENJX0RFVklDRV9JRCwgJmRldmlkKTsKCWlmICgoKGRldmlkICYgMHhmZmYwKSAhPSAweDA5NjAp
ICYmIChkZXZpZCAhPSAweDAwMTgpKSB7CgkJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgU0lT
X0RFVEVDVF9SRUdJU1RFUiwgcmVnKTsKCQlyZXR1cm47Cgl9CgoJLyoKCSAqIE9rLCBpdCBub3cg
c2hvd3MgdXAgYXMgYSA5NnguICBSdW4gdGhlIDk2eCBxdWlyayBieSBoYW5kIGluIGNhc2UKCSAq
IGl0IGhhcyBhbHJlYWR5IGJlZW4gcHJvY2Vzc2VkLiAgKERlcGVuZHMgb24gbGluayBvcmRlciwg
d2hpY2ggaXMKCSAqIGFwcGFyZW50bHkgbm90IGd1YXJhbnRlZWQpCgkgKi8KCWRldi0+ZGV2aWNl
ID0gZGV2aWQ7CglxdWlya19zaXNfOTZ4X3NtYnVzKGRldik7Cn0KREVDTEFSRV9QQ0lfRklYVVBf
SEVBREVSKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lfNTAzLAkJcXVpcmtfc2lz
XzUwMyk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX1NJLAlQ
Q0lfREVWSUNFX0lEX1NJXzUwMywJCXF1aXJrX3Npc181MDMpOwoKLyoKICogT24gQVNVUyBBOFYg
YW5kIEE4ViBEZWx1eGUgYm9hcmRzLCB0aGUgb25ib2FyZCBBQzk3IGF1ZGlvIGNvbnRyb2xsZXIK
ICogYW5kIE1DOTcgbW9kZW0gY29udHJvbGxlciBhcmUgZGlzYWJsZWQgd2hlbiBhIHNlY29uZCBQ
Q0kgc291bmRjYXJkIGlzCiAqIHByZXNlbnQuIFRoaXMgcGF0Y2gsIHR3ZWFraW5nIHRoZSBWVDgy
MzcgSVNBIGJyaWRnZSwgZW5hYmxlcyB0aGVtLgogKiAtLSBiamQKICovCnN0YXRpYyB2b2lkIGFz
dXNfaGlkZXNfYWM5N19scGMoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTggdmFsOwoJaW50IGFz
dXNfaGlkZXNfYWM5NyA9IDA7CgoJaWYgKGxpa2VseShkZXYtPnN1YnN5c3RlbV92ZW5kb3IgPT0g
UENJX1ZFTkRPUl9JRF9BU1VTVEVLKSkgewoJCWlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNF
X0lEX1ZJQV84MjM3KQoJCQlhc3VzX2hpZGVzX2FjOTcgPSAxOwoJfQoKCWlmICghYXN1c19oaWRl
c19hYzk3KQoJCXJldHVybjsKCglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4NTAsICZ2YWwp
OwoJaWYgKHZhbCAmIDB4YzApIHsKCQlwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCAweDUwLCB2
YWwgJiAofjB4YzApKTsKCQlwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4NTAsICZ2YWwpOwoJ
CWlmICh2YWwgJiAweGMwKQoJCQlwY2lfaW5mbyhkZXYsICJPbmJvYXJkIEFDOTcvTUM5NyBkZXZp
Y2VzIGNvbnRpbnVlIHRvIHBsYXkgJ2hpZGUgYW5kIHNlZWsnISAweCV4XG4iLAoJCQkJIHZhbCk7
CgkJZWxzZQoJCQlwY2lfaW5mbyhkZXYsICJFbmFibGVkIG9uYm9hcmQgQUM5Ny9NQzk3IGRldmlj
ZXNcbiIpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1ZJQSwJ
UENJX0RFVklDRV9JRF9WSUFfODIzNywgYXN1c19oaWRlc19hYzk3X2xwYyk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFf
ODIzNywgYXN1c19oaWRlc19hYzk3X2xwYyk7CgojaWYgZGVmaW5lZChDT05GSUdfQVRBKSB8fCBk
ZWZpbmVkKENPTkZJR19BVEFfTU9EVUxFKQoKLyoKICogSWYgd2UgYXJlIHVzaW5nIGxpYmF0YSB3
ZSBjYW4gZHJpdmUgdGhpcyBjaGlwIHByb3Blcmx5IGJ1dCBtdXN0IGRvIHRoaXMKICogZWFybHkg
b24gdG8gbWFrZSB0aGUgYWRkaXRpb25hbCBkZXZpY2UgYXBwZWFyIGR1cmluZyB0aGUgUENJIHNj
YW5uaW5nLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfam1pY3Jvbl9hdGEoc3RydWN0IHBjaV9kZXYg
KnBkZXYpCnsKCXUzMiBjb25mMSwgY29uZjUsIGNsYXNzOwoJdTggaGRyOwoKCS8qIE9ubHkgcG9r
ZSBmbiAwICovCglpZiAoUENJX0ZVTkMocGRldi0+ZGV2Zm4pKQoJCXJldHVybjsKCglwY2lfcmVh
ZF9jb25maWdfZHdvcmQocGRldiwgMHg0MCwgJmNvbmYxKTsKCXBjaV9yZWFkX2NvbmZpZ19kd29y
ZChwZGV2LCAweDgwLCAmY29uZjUpOwoKCWNvbmYxICY9IH4weDAwQ0ZGMzAyOyAvKiBDbGVhciBi
aXQgMSwgOCwgOSwgMTItMTksIDIyLCAyMyAqLwoJY29uZjUgJj0gfigxIDw8IDI0KTsgIC8qIENs
ZWFyIGJpdCAyNCAqLwoKCXN3aXRjaCAocGRldi0+ZGV2aWNlKSB7CgljYXNlIFBDSV9ERVZJQ0Vf
SURfSk1JQ1JPTl9KTUIzNjA6IC8qIFNBVEEgc2luZ2xlIHBvcnQgKi8KCWNhc2UgUENJX0RFVklD
RV9JRF9KTUlDUk9OX0pNQjM2MjogLyogU0FUQSBkdWFsIHBvcnRzICovCgljYXNlIFBDSV9ERVZJ
Q0VfSURfSk1JQ1JPTl9KTUIzNjQ6IC8qIFNBVEEgZHVhbCBwb3J0cyAqLwoJCS8qIFRoZSBjb250
cm9sbGVyIHNob3VsZCBiZSBpbiBzaW5nbGUgZnVuY3Rpb24gYWhjaSBtb2RlICovCgkJY29uZjEg
fD0gMHgwMDAyQTEwMDsgLyogU2V0IDgsIDEzLCAxNSwgMTcgKi8KCQlicmVhazsKCgljYXNlIFBD
SV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjU6CgljYXNlIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9K
TUIzNjY6CgkJLyogUmVkaXJlY3QgSURFIHNlY29uZCBQQVRBIHBvcnQgdG8gdGhlIHJpZ2h0IHNw
b3QgKi8KCQljb25mNSB8PSAoMSA8PCAyNCk7CgkJLyogRmFsbCB0aHJvdWdoICovCgljYXNlIFBD
SV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjE6CgljYXNlIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9K
TUIzNjM6CgljYXNlIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjk6CgkJLyogRW5hYmxlIGR1
YWwgZnVuY3Rpb24gbW9kZSwgQUhDSSBvbiBmbiAwLCBJREUgZm4xICovCgkJLyogU2V0IHRoZSBj
bGFzcyBjb2RlcyBjb3JyZWN0bHkgYW5kIHRoZW4gZGlyZWN0IElERSAwICovCgkJY29uZjEgfD0g
MHgwMEMyQTFCMzsgLyogU2V0IDAsIDEsIDQsIDUsIDcsIDgsIDEzLCAxNSwgMTcsIDIyLCAyMyAq
LwoJCWJyZWFrOwoKCWNhc2UgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2ODoKCQkvKiBUaGUg
Y29udHJvbGxlciBzaG91bGQgYmUgaW4gc2luZ2xlIGZ1bmN0aW9uIElERSBtb2RlICovCgkJY29u
ZjEgfD0gMHgwMEMwMDAwMDsgLyogU2V0IDIyLCAyMyAqLwoJCWJyZWFrOwoJfQoKCXBjaV93cml0
ZV9jb25maWdfZHdvcmQocGRldiwgMHg0MCwgY29uZjEpOwoJcGNpX3dyaXRlX2NvbmZpZ19kd29y
ZChwZGV2LCAweDgwLCBjb25mNSk7CgoJLyogVXBkYXRlIHBkZXYgYWNjb3JkaW5nbHkgKi8KCXBj
aV9yZWFkX2NvbmZpZ19ieXRlKHBkZXYsIFBDSV9IRUFERVJfVFlQRSwgJmhkcik7CglwZGV2LT5o
ZHJfdHlwZSA9IGhkciAmIDB4N2Y7CglwZGV2LT5tdWx0aWZ1bmN0aW9uID0gISEoaGRyICYgMHg4
MCk7CgoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKHBkZXYsIFBDSV9DTEFTU19SRVZJU0lPTiwgJmNs
YXNzKTsKCXBkZXYtPmNsYXNzID0gY2xhc3MgPj4gODsKfQpERUNMQVJFX1BDSV9GSVhVUF9FQVJM
WShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjAsIHF1
aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9K
TUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzYxLCBxdWlya19qbWljcm9uX2F0YSk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgUENJX0RFVklD
RV9JRF9KTUlDUk9OX0pNQjM2MiwgcXVpcmtfam1pY3Jvbl9hdGEpOwpERUNMQVJFX1BDSV9GSVhV
UF9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIz
NjMsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRP
Ul9JRF9KTUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzY0LCBxdWlya19qbWljcm9u
X2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgUENJ
X0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2NSwgcXVpcmtfam1pY3Jvbl9hdGEpOwpERUNMQVJFX1BD
SV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1JQ1JP
Tl9KTUIzNjYsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzY4LCBxdWlya19q
bWljcm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JP
TiwgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2OSwgcXVpcmtfam1pY3Jvbl9hdGEpOwpERUNM
QVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVW
SUNFX0lEX0pNSUNST05fSk1CMzYwLCBxdWlya19qbWljcm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1J
Q1JPTl9KTUIzNjEsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1F
X0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2
MiwgcXVpcmtfam1pY3Jvbl9hdGEpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzYzLCBxdWlya19q
bWljcm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lE
X0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjQsIHF1aXJrX2ptaWNyb25fYXRh
KTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwg
UENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2NSwgcXVpcmtfam1pY3Jvbl9hdGEpOwpERUNMQVJF
X1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVWSUNF
X0lEX0pNSUNST05fSk1CMzY2LCBxdWlya19qbWljcm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1JQ1JP
Tl9KTUIzNjgsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VB
UkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2OSwg
cXVpcmtfam1pY3Jvbl9hdGEpOwoKI2VuZGlmCgpzdGF0aWMgdm9pZCBxdWlya19qbWljcm9uX2Fz
eW5jX3N1c3BlbmQoc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKGRldi0+bXVsdGlmdW5jdGlv
bikgewoJCWRldmljZV9kaXNhYmxlX2FzeW5jX3N1c3BlbmQoJmRldi0+ZGV2KTsKCQlwY2lfaW5m
byhkZXYsICJhc3luYyBzdXNwZW5kIGRpc2FibGVkIHRvIGF2b2lkIG11bHRpLWZ1bmN0aW9uIHBv
d2VyLW9uIG9yZGVyaW5nIGlzc3VlXG4iKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19G
SU5BTChQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9BTllfSUQsIFBDSV9DTEFTU19TVE9SQUdF
X0lERSwgOCwgcXVpcmtfam1pY3Jvbl9hc3luY19zdXNwZW5kKTsKREVDTEFSRV9QQ0lfRklYVVBf
Q0xBU1NfRklOQUwoUENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfQU5ZX0lELCBQQ0lfQ0xBU1Nf
U1RPUkFHRV9TQVRBX0FIQ0ksIDAsIHF1aXJrX2ptaWNyb25fYXN5bmNfc3VzcGVuZCk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgMHgyMzYyLCBxdWlya19q
bWljcm9uX2FzeW5jX3N1c3BlbmQpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9S
X0lEX0pNSUNST04sIDB4MjM2ZiwgcXVpcmtfam1pY3Jvbl9hc3luY19zdXNwZW5kKTsKCiNpZmRl
ZiBDT05GSUdfWDg2X0lPX0FQSUMKc3RhdGljIHZvaWQgcXVpcmtfYWxkZXJfaW9hcGljKHN0cnVj
dCBwY2lfZGV2ICpwZGV2KQp7CglpbnQgaTsKCglpZiAoKHBkZXYtPmNsYXNzID4+IDgpICE9IDB4
ZmYwMCkKCQlyZXR1cm47CgoJLyoKCSAqIFRoZSBmaXJzdCBCQVIgaXMgdGhlIGxvY2F0aW9uIG9m
IHRoZSBJTy1BUElDLi4uIHdlIG11c3QKCSAqIG5vdCB0b3VjaCB0aGlzIChhbmQgaXQncyBhbHJl
YWR5IGNvdmVyZWQgYnkgdGhlIGZpeG1hcCksIHNvCgkgKiBmb3JjaWJseSBpbnNlcnQgaXQgaW50
byB0aGUgcmVzb3VyY2UgdHJlZS4KCSAqLwoJaWYgKHBjaV9yZXNvdXJjZV9zdGFydChwZGV2LCAw
KSAmJiBwY2lfcmVzb3VyY2VfbGVuKHBkZXYsIDApKQoJCWluc2VydF9yZXNvdXJjZSgmaW9tZW1f
cmVzb3VyY2UsICZwZGV2LT5yZXNvdXJjZVswXSk7CgoJLyoKCSAqIFRoZSBuZXh0IGZpdmUgQkFS
cyBhbGwgc2VlbSB0byBiZSBydWJiaXNoLCBzbyBqdXN0IGNsZWFuCgkgKiB0aGVtIG91dC4KCSAq
LwoJZm9yIChpID0gMTsgaSA8IDY7IGkrKykKCQltZW1zZXQoJnBkZXYtPnJlc291cmNlW2ldLCAw
LCBzaXplb2YocGRldi0+cmVzb3VyY2VbaV0pKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIo
UENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9FRVNTQywJcXVpcmtfYWxk
ZXJfaW9hcGljKTsKI2VuZGlmCgpzdGF0aWMgdm9pZCBxdWlya19wY2llX21jaChzdHJ1Y3QgcGNp
X2RldiAqcGRldikKewoJcGRldi0+bm9fbXNpID0gMTsKfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5B
TChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0U3NTIwX01DSCwJcXVp
cmtfcGNpZV9tY2gpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVM
LAlQQ0lfREVWSUNFX0lEX0lOVEVMX0U3MzIwX01DSCwJcXVpcmtfcGNpZV9tY2gpOwpERUNMQVJF
X1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVM
X0U3NTI1X01DSCwJcXVpcmtfcGNpZV9tY2gpOwoKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRklO
QUwoUENJX1ZFTkRPUl9JRF9IVUFXRUksIDB4MTYxMCwgUENJX0NMQVNTX0JSSURHRV9QQ0ksIDgs
IHF1aXJrX3BjaWVfbWNoKTsKCi8qCiAqIEl0J3MgcG9zc2libGUgZm9yIHRoZSBNU0kgdG8gZ2V0
IGNvcnJ1cHRlZCBpZiBTSFBDIGFuZCBBQ1BJIGFyZSB1c2VkCiAqIHRvZ2V0aGVyIG9uIGNlcnRh
aW4gUFhILWJhc2VkIHN5c3RlbXMuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19wY2llX3B4aChzdHJ1
Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPm5vX21zaSA9IDE7CglwY2lfd2FybihkZXYsICJQWEgg
cXVpcmsgZGV0ZWN0ZWQ7IFNIUEMgZGV2aWNlIE1TSSBkaXNhYmxlZFxuIik7Cn0KREVDTEFSRV9Q
Q0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9Q
WEhEXzAsCXF1aXJrX3BjaWVfcHhoKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRP
Ul9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9QWEhEXzEsCXF1aXJrX3BjaWVfcHhoKTsK
REVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF9QWEhfMCwJcXVpcmtfcGNpZV9weGgpOwpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQ
Q0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX1BYSF8xLAlxdWlya19wY2ll
X3B4aCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9E
RVZJQ0VfSURfSU5URUxfUFhIViwJcXVpcmtfcGNpZV9weGgpOwoKLyoKICogU29tZSBJbnRlbCBQ
Q0kgRXhwcmVzcyBjaGlwc2V0cyBoYXZlIHRyb3VibGUgd2l0aCBkb3duc3RyZWFtIGRldmljZQog
KiBwb3dlciBtYW5hZ2VtZW50LgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfaW50ZWxfcGNpZV9wbShz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglwY2lfcG1fZDNfZGVsYXkgPSAxMjA7CglkZXYtPm5vX2Qx
ZDIgPSAxOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4
MjVlMiwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfSU5URUwsCTB4MjVlMywgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVlNCwgcXVpcmtfaW50ZWxfcGNp
ZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVl
NSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5E
T1JfSURfSU5URUwsCTB4MjVlNiwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVlNywgcXVpcmtfaW50ZWxfcGNpZV9w
bSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVmNywg
cXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsCTB4MjVmOCwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVmOSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVmYSwgcXVp
cmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURf
SU5URUwsCTB4MjYwMSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwMiwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwMywgcXVpcmtf
aW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5U
RUwsCTB4MjYwNCwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwNSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwNiwgcXVpcmtfaW50
ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUws
CTB4MjYwNywgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsCTB4MjYwOCwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwOSwgcXVpcmtfaW50ZWxf
cGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4
MjYwYSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfSU5URUwsCTB4MjYwYiwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CgpzdGF0aWMgdm9p
ZCBxdWlya19yYWRlb25fcG0oc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKGRldi0+c3Vic3lz
dGVtX3ZlbmRvciA9PSBQQ0lfVkVORE9SX0lEX0FQUExFICYmCgkgICAgZGV2LT5zdWJzeXN0ZW1f
ZGV2aWNlID09IDB4MDBlMikgewoJCWlmIChkZXYtPmQzX2RlbGF5IDwgMjApIHsKCQkJZGV2LT5k
M19kZWxheSA9IDIwOwoJCQlwY2lfaW5mbyhkZXYsICJleHRlbmRpbmcgZGVsYXkgYWZ0ZXIgcG93
ZXItb24gZnJvbSBEMyB0byAlZCBtc2VjXG4iLAoJCQkJIGRldi0+ZDNfZGVsYXkpOwoJCX0KCX0K
fQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUSSwgMHg2NzQxLCBxdWly
a19yYWRlb25fcG0pOwoKI2lmZGVmIENPTkZJR19YODZfSU9fQVBJQwpzdGF0aWMgaW50IGRtaV9k
aXNhYmxlX2lvYXBpY3Jlcm91dGUoY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1faWQgKmQpCnsKCW5v
aW9hcGljcmVyb3V0ZSA9IDE7Cglwcl9pbmZvKCIlcyBkZXRlY3RlZDogZGlzYWJsZSBib290IGlu
dGVycnVwdCByZXJvdXRlXG4iLCBkLT5pZGVudCk7CgoJcmV0dXJuIDA7Cn0KCnN0YXRpYyBjb25z
dCBzdHJ1Y3QgZG1pX3N5c3RlbV9pZCBib290X2ludGVycnVwdF9kbWlfdGFibGVbXSA9IHsKCS8q
CgkgKiBTeXN0ZW1zIHRvIGV4Y2x1ZGUgZnJvbSBib290IGludGVycnVwdCByZXJvdXRlIHF1aXJr
cwoJICovCgl7CgkJLmNhbGxiYWNrID0gZG1pX2Rpc2FibGVfaW9hcGljcmVyb3V0ZSwKCQkuaWRl
bnQgPSAiQVNVU1RlayBDb21wdXRlciBJTkMuIE0yTi1MUiIsCgkJLm1hdGNoZXMgPSB7CgkJCURN
SV9NQVRDSChETUlfU1lTX1ZFTkRPUiwgIkFTVVNUZWsgQ29tcHV0ZXIgSU5DLiIpLAoJCQlETUlf
TUFUQ0goRE1JX1BST0RVQ1RfTkFNRSwgIk0yTi1MUiIpLAoJCX0sCgl9LAoJe30KfTsKCi8qCiAq
IEJvb3QgaW50ZXJydXB0cyBvbiBzb21lIGNoaXBzZXRzIGNhbm5vdCBiZSB0dXJuZWQgb2ZmLiBG
b3IgdGhlc2UgY2hpcHNldHMsCiAqIHJlbWFwIHRoZSBvcmlnaW5hbCBpbnRlcnJ1cHQgaW4gdGhl
IExpbnV4IGtlcm5lbCB0byB0aGUgYm9vdCBpbnRlcnJ1cHQsIHNvCiAqIHRoYXQgYSBQQ0kgZGV2
aWNlJ3MgaW50ZXJydXB0IGhhbmRsZXIgaXMgaW5zdGFsbGVkIG9uIHRoZSBib290IGludGVycnVw
dAogKiBsaW5lIGluc3RlYWQuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19yZXJvdXRlX3RvX2Jvb3Rf
aW50ZXJydXB0c19pbnRlbChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkbWlfY2hlY2tfc3lzdGVt
KGJvb3RfaW50ZXJydXB0X2RtaV90YWJsZSk7CglpZiAobm9pb2FwaWNxdWlyayB8fCBub2lvYXBp
Y3Jlcm91dGUpCgkJcmV0dXJuOwoKCWRldi0+aXJxX3Jlcm91dGVfdmFyaWFudCA9IElOVEVMX0lS
UV9SRVJPVVRFX1ZBUklBTlQ7CglwY2lfaW5mbyhkZXYsICJyZXJvdXRpbmcgaW50ZXJydXB0cyBm
b3IgWyUwNHg6JTA0eF1cbiIsCgkJIGRldi0+dmVuZG9yLCBkZXYtPmRldmljZSk7Cn0KREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRF
TF84MDMzM18wLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRlbCk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5U
RUxfODAzMzNfMSwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lO
VEVMX0VTQjJfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lO
VEVMX1BYSF8wLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRlbCk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5U
RUxfUFhIXzEsCXF1aXJrX3Jlcm91dGVfdG9fYm9vdF9pbnRlcnJ1cHRzX2ludGVsKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRF
TF9QWEhWLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRlbCk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxf
ODAzMzJfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwpOwpERUNMQVJF
X1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVM
XzgwMzMyXzEsCXF1aXJrX3Jlcm91dGVfdG9fYm9vdF9pbnRlcnJ1cHRzX2ludGVsKTsKREVDTEFS
RV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5U
RUxfODAzMzNfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwpOwpERUNM
QVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9J
TlRFTF84MDMzM18xLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRlbCk7CkRF
Q0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lE
X0lOVEVMX0VTQjJfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwpOwpE
RUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF9QWEhfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwpOwpE
RUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF9QWEhfMSwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwpOwpE
RUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF9QWEhWLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRlbCk7CkRF
Q0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lE
X0lOVEVMXzgwMzMyXzAsCXF1aXJrX3Jlcm91dGVfdG9fYm9vdF9pbnRlcnJ1cHRzX2ludGVsKTsK
REVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0Vf
SURfSU5URUxfODAzMzJfMSwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwp
OwoKLyoKICogT24gc29tZSBjaGlwc2V0cyB3ZSBjYW4gZGlzYWJsZSB0aGUgZ2VuZXJhdGlvbiBv
ZiBsZWdhY3kgSU5UeCBib290CiAqIGludGVycnVwdHMuCiAqLwoKLyoKICogSU8tQVBJQzEgb24g
NjMwMEVTQiBnZW5lcmF0ZXMgYm9vdCBpbnRlcnJ1cHRzLCBzZWUgSW50ZWwgb3JkZXIgbm8KICog
MzAwNjQxLTAwNFVTLCBzZWN0aW9uIDUuNy4zLgogKi8KI2RlZmluZSBJTlRFTF82MzAwX0lPQVBJ
Q19BQkFSCQkweDQwCiNkZWZpbmUgSU5URUxfNjMwMF9ESVNBQkxFX0JPT1RfSVJRCSgxPDwxNCkK
CnN0YXRpYyB2b2lkIHF1aXJrX2Rpc2FibGVfaW50ZWxfYm9vdF9pbnRlcnJ1cHQoc3RydWN0IHBj
aV9kZXYgKmRldikKewoJdTE2IHBjaV9jb25maWdfd29yZDsKCglpZiAobm9pb2FwaWNxdWlyaykK
CQlyZXR1cm47CgoJcGNpX3JlYWRfY29uZmlnX3dvcmQoZGV2LCBJTlRFTF82MzAwX0lPQVBJQ19B
QkFSLCAmcGNpX2NvbmZpZ193b3JkKTsKCXBjaV9jb25maWdfd29yZCB8PSBJTlRFTF82MzAwX0RJ
U0FCTEVfQk9PVF9JUlE7CglwY2lfd3JpdGVfY29uZmlnX3dvcmQoZGV2LCBJTlRFTF82MzAwX0lP
QVBJQ19BQkFSLCBwY2lfY29uZmlnX3dvcmQpOwoKCXBjaV9pbmZvKGRldiwgImRpc2FibGVkIGJv
b3QgaW50ZXJydXB0cyBvbiBkZXZpY2UgWyUwNHg6JTA0eF1cbiIsCgkJIGRldi0+dmVuZG9yLCBk
ZXYtPmRldmljZSk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRF
TCwgICBQQ0lfREVWSUNFX0lEX0lOVEVMX0VTQl8xMCwJcXVpcmtfZGlzYWJsZV9pbnRlbF9ib290
X2ludGVycnVwdCk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0lOVEVM
LCAgIFBDSV9ERVZJQ0VfSURfSU5URUxfRVNCXzEwLAlxdWlya19kaXNhYmxlX2ludGVsX2Jvb3Rf
aW50ZXJydXB0KTsKCi8qIERpc2FibGUgYm9vdCBpbnRlcnJ1cHRzIG9uIEhULTEwMDAgKi8KI2Rl
ZmluZSBCQ19IVDEwMDBfRkVBVFVSRV9SRUcJCTB4NjQKI2RlZmluZSBCQ19IVDEwMDBfUElDX1JF
R1NfRU5BQkxFCSgxPDwwKQojZGVmaW5lIEJDX0hUMTAwMF9NQVBfSURYCQkweEMwMAojZGVmaW5l
IEJDX0hUMTAwMF9NQVBfREFUQQkJMHhDMDEKCnN0YXRpYyB2b2lkIHF1aXJrX2Rpc2FibGVfYnJv
YWRjb21fYm9vdF9pbnRlcnJ1cHQoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTMyIHBjaV9jb25m
aWdfZHdvcmQ7Cgl1OCBpcnE7CgoJaWYgKG5vaW9hcGljcXVpcmspCgkJcmV0dXJuOwoKCXBjaV9y
ZWFkX2NvbmZpZ19kd29yZChkZXYsIEJDX0hUMTAwMF9GRUFUVVJFX1JFRywgJnBjaV9jb25maWdf
ZHdvcmQpOwoJcGNpX3dyaXRlX2NvbmZpZ19kd29yZChkZXYsIEJDX0hUMTAwMF9GRUFUVVJFX1JF
RywgcGNpX2NvbmZpZ19kd29yZCB8CgkJCUJDX0hUMTAwMF9QSUNfUkVHU19FTkFCTEUpOwoKCWZv
ciAoaXJxID0gMHgxMDsgaXJxIDwgMHgxMCArIDMyOyBpcnErKykgewoJCW91dGIoaXJxLCBCQ19I
VDEwMDBfTUFQX0lEWCk7CgkJb3V0YigweDAwLCBCQ19IVDEwMDBfTUFQX0RBVEEpOwoJfQoKCXBj
aV93cml0ZV9jb25maWdfZHdvcmQoZGV2LCBCQ19IVDEwMDBfRkVBVFVSRV9SRUcsIHBjaV9jb25m
aWdfZHdvcmQpOwoKCXBjaV9pbmZvKGRldiwgImRpc2FibGVkIGJvb3QgaW50ZXJydXB0cyBvbiBk
ZXZpY2UgWyUwNHg6JTA0eF1cbiIsCgkJIGRldi0+dmVuZG9yLCBkZXYtPmRldmljZSk7Cn0KREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgICBQQ0lfREVW
SUNFX0lEX1NFUlZFUldPUktTX0hUMTAwMFNCLAlxdWlya19kaXNhYmxlX2Jyb2FkY29tX2Jvb3Rf
aW50ZXJydXB0KTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9WRU5ET1JfSURfU0VSVkVS
V09SS1MsICAgUENJX0RFVklDRV9JRF9TRVJWRVJXT1JLU19IVDEwMDBTQiwJcXVpcmtfZGlzYWJs
ZV9icm9hZGNvbV9ib290X2ludGVycnVwdCk7CgovKiBEaXNhYmxlIGJvb3QgaW50ZXJydXB0cyBv
biBBTUQgYW5kIEFUSSBjaGlwc2V0cyAqLwoKLyoKICogTk9JT0FNT0RFIG5lZWRzIHRvIGJlIGRp
c2FibGVkIHRvIGRpc2FibGUgImJvb3QgaW50ZXJydXB0cyIuIEZvciBBTUQgODEzMQogKiByZXYu
IEEwIGFuZCBCMCwgTk9JT0FNT0RFIG5lZWRzIHRvIGJlIGRpc2FibGVkIGFueXdheSB0byBmaXgg
SU8tQVBJQyBtb2RlCiAqIChkdWUgdG8gYW4gZXJyYXR1bSkuCiAqLwojZGVmaW5lIEFNRF84MTNY
X01JU0MJCQkweDQwCiNkZWZpbmUgQU1EXzgxM1hfTk9JT0FNT0RFCQkoMTw8MCkKI2RlZmluZSBB
TURfODEzWF9SRVZfQjEJCQkweDEyCiNkZWZpbmUgQU1EXzgxM1hfUkVWX0IyCQkJMHgxMwoKc3Rh
dGljIHZvaWQgcXVpcmtfZGlzYWJsZV9hbWRfODEzeF9ib290X2ludGVycnVwdChzdHJ1Y3QgcGNp
X2RldiAqZGV2KQp7Cgl1MzIgcGNpX2NvbmZpZ19kd29yZDsKCglpZiAobm9pb2FwaWNxdWlyaykK
CQlyZXR1cm47CglpZiAoKGRldi0+cmV2aXNpb24gPT0gQU1EXzgxM1hfUkVWX0IxKSB8fAoJICAg
IChkZXYtPnJldmlzaW9uID09IEFNRF84MTNYX1JFVl9CMikpCgkJcmV0dXJuOwoKCXBjaV9yZWFk
X2NvbmZpZ19kd29yZChkZXYsIEFNRF84MTNYX01JU0MsICZwY2lfY29uZmlnX2R3b3JkKTsKCXBj
aV9jb25maWdfZHdvcmQgJj0gfkFNRF84MTNYX05PSU9BTU9ERTsKCXBjaV93cml0ZV9jb25maWdf
ZHdvcmQoZGV2LCBBTURfODEzWF9NSVNDLCBwY2lfY29uZmlnX2R3b3JkKTsKCglwY2lfaW5mbyhk
ZXYsICJkaXNhYmxlZCBib290IGludGVycnVwdHMgb24gZGV2aWNlIFslMDR4OiUwNHhdXG4iLAoJ
CSBkZXYtPnZlbmRvciwgZGV2LT5kZXZpY2UpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfQU1ELAlQQ0lfREVWSUNFX0lEX0FNRF84MTMxX0JSSURHRSwJcXVpcmtfZGlz
YWJsZV9hbWRfODEzeF9ib290X2ludGVycnVwdCk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQ
Q0lfVkVORE9SX0lEX0FNRCwJUENJX0RFVklDRV9JRF9BTURfODEzMV9CUklER0UsCXF1aXJrX2Rp
c2FibGVfYW1kXzgxM3hfYm9vdF9pbnRlcnJ1cHQpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQ
Q0lfVkVORE9SX0lEX0FNRCwJUENJX0RFVklDRV9JRF9BTURfODEzMl9CUklER0UsCXF1aXJrX2Rp
c2FibGVfYW1kXzgxM3hfYm9vdF9pbnRlcnJ1cHQpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUo
UENJX1ZFTkRPUl9JRF9BTUQsCVBDSV9ERVZJQ0VfSURfQU1EXzgxMzJfQlJJREdFLAlxdWlya19k
aXNhYmxlX2FtZF84MTN4X2Jvb3RfaW50ZXJydXB0KTsKCiNkZWZpbmUgQU1EXzgxMTFfUENJX0lS
UV9ST1VUSU5HCTB4NTYKCnN0YXRpYyB2b2lkIHF1aXJrX2Rpc2FibGVfYW1kXzgxMTFfYm9vdF9p
bnRlcnJ1cHQoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTE2IHBjaV9jb25maWdfd29yZDsKCglp
ZiAobm9pb2FwaWNxdWlyaykKCQlyZXR1cm47CgoJcGNpX3JlYWRfY29uZmlnX3dvcmQoZGV2LCBB
TURfODExMV9QQ0lfSVJRX1JPVVRJTkcsICZwY2lfY29uZmlnX3dvcmQpOwoJaWYgKCFwY2lfY29u
ZmlnX3dvcmQpIHsKCQlwY2lfaW5mbyhkZXYsICJib290IGludGVycnVwdHMgb24gZGV2aWNlIFsl
MDR4OiUwNHhdIGFscmVhZHkgZGlzYWJsZWRcbiIsCgkJCSBkZXYtPnZlbmRvciwgZGV2LT5kZXZp
Y2UpOwoJCXJldHVybjsKCX0KCXBjaV93cml0ZV9jb25maWdfd29yZChkZXYsIEFNRF84MTExX1BD
SV9JUlFfUk9VVElORywgMCk7CglwY2lfaW5mbyhkZXYsICJkaXNhYmxlZCBib290IGludGVycnVw
dHMgb24gZGV2aWNlIFslMDR4OiUwNHhdXG4iLAoJCSBkZXYtPnZlbmRvciwgZGV2LT5kZXZpY2Up
Owp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1ELCAgIFBDSV9ERVZJ
Q0VfSURfQU1EXzgxMTFfU01CVVMsCXF1aXJrX2Rpc2FibGVfYW1kXzgxMTFfYm9vdF9pbnRlcnJ1
cHQpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9BTUQsICAgUENJX0RF
VklDRV9JRF9BTURfODExMV9TTUJVUywJcXVpcmtfZGlzYWJsZV9hbWRfODExMV9ib290X2ludGVy
cnVwdCk7CiNlbmRpZiAvKiBDT05GSUdfWDg2X0lPX0FQSUMgKi8KCi8qCiAqIFRvc2hpYmEgVEM4
NkMwMDEgSURFIGNvbnRyb2xsZXIgcmVwb3J0cyB0aGUgc3RhbmRhcmQgOC1ieXRlIEJBUjAgc2l6
ZQogKiBidXQgdGhlIFBJTyB0cmFuc2ZlcnMgd29uJ3Qgd29yayBpZiBCQVIwIGZhbGxzIGF0IHRo
ZSBvZGQgOCBieXRlcy4KICogUmUtYWxsb2NhdGUgdGhlIHJlZ2lvbiBpZiBuZWVkZWQuLi4KICov
CnN0YXRpYyB2b2lkIHF1aXJrX3RjODZjMDAxX2lkZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cglz
dHJ1Y3QgcmVzb3VyY2UgKnIgPSAmZGV2LT5yZXNvdXJjZVswXTsKCglpZiAoci0+c3RhcnQgJiAw
eDgpIHsKCQlyLT5mbGFncyB8PSBJT1JFU09VUkNFX1VOU0VUOwoJCXItPnN0YXJ0ID0gMDsKCQly
LT5lbmQgPSAweGY7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
VE9TSElCQV8yLAoJCQkgUENJX0RFVklDRV9JRF9UT1NISUJBX1RDODZDMDAxX0lERSwKCQkJIHF1
aXJrX3RjODZjMDAxX2lkZSk7CgovKgogKiBQTFggUENJIDkwNTAgUENJIFRhcmdldCBicmlkZ2Ug
Y29udHJvbGxlciBoYXMgYW4gZXJyYXR1bSB0aGF0IHByZXZlbnRzIHRoZQogKiBsb2NhbCBjb25m
aWd1cmF0aW9uIHJlZ2lzdGVycyBhY2Nlc3NpYmxlIHZpYSBCQVIwIChtZW1vcnkpIG9yIEJBUjEg
KGkvbykKICogYmVpbmcgcmVhZCBjb3JyZWN0bHkgaWYgYml0IDcgb2YgdGhlIGJhc2UgYWRkcmVz
cyBpcyBzZXQuCiAqIFRoZSBCQVIwIG9yIEJBUjEgcmVnaW9uIG1heSBiZSBkaXNhYmxlZCAoc2l6
ZSAwKSBvciBlbmFibGVkIChzaXplIDEyOCkuCiAqIFJlLWFsbG9jYXRlIHRoZSByZWdpb25zIHRv
IGEgMjU2LWJ5dGUgYm91bmRhcnkgaWYgbmVjZXNzYXJ5LgogKi8Kc3RhdGljIHZvaWQgcXVpcmtf
cGx4X3BjaTkwNTAoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdW5zaWduZWQgaW50IGJhcjsKCgkv
KiBGaXhlZCBpbiByZXZpc2lvbiAyIChQQ0kgOTA1MikuICovCglpZiAoZGV2LT5yZXZpc2lvbiA+
PSAyKQoJCXJldHVybjsKCWZvciAoYmFyID0gMDsgYmFyIDw9IDE7IGJhcisrKQoJCWlmIChwY2lf
cmVzb3VyY2VfbGVuKGRldiwgYmFyKSA9PSAweDgwICYmCgkJICAgIChwY2lfcmVzb3VyY2Vfc3Rh
cnQoZGV2LCBiYXIpICYgMHg4MCkpIHsKCQkJc3RydWN0IHJlc291cmNlICpyID0gJmRldi0+cmVz
b3VyY2VbYmFyXTsKCQkJcGNpX2luZm8oZGV2LCAiUmUtYWxsb2NhdGluZyBQTFggUENJIDkwNTAg
QkFSICV1IHRvIGxlbmd0aCAyNTYgdG8gYXZvaWQgYml0IDcgYnVnXG4iLAoJCQkJIGJhcik7CgkJ
CXItPmZsYWdzIHw9IElPUkVTT1VSQ0VfVU5TRVQ7CgkJCXItPnN0YXJ0ID0gMDsKCQkJci0+ZW5k
ID0gMHhmZjsKCQl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfUExY
LCBQQ0lfREVWSUNFX0lEX1BMWF85MDUwLAoJCQkgcXVpcmtfcGx4X3BjaTkwNTApOwovKgogKiBU
aGUgZm9sbG93aW5nIE1laWxoYXVzICh2ZW5kb3IgSUQgMHgxNDAyKSBkZXZpY2UgSURzIChhbW9u
Z3N0IG90aGVycykKICogbWF5IGJlIHVzaW5nIHRoZSBQTFggUENJIDkwNTA6IDB4MDYzMCwgMHgw
OTQwLCAweDA5NTAsIDB4MDk2MCwgMHgxMDBiLAogKiAweDE0MDAsIDB4MTQwYSwgMHgxNDBiLCAw
eDE0ZTAsIDB4MTRlYSwgMHgxNGViLCAweDE2MDQsIDB4MTYwOCwgMHgxNjBjLAogKiAweDE2OGYs
IDB4MjAwMCwgMHgyNjAwLCAweDMwMDAsIDB4ODEwYSwgMHg4MTBiLgogKgogKiBDdXJyZW50bHks
IGRldmljZSBJRHMgMHgyMDAwIGFuZCAweDI2MDAgYXJlIHVzZWQgYnkgdGhlIENvbWVkaSAibWVf
ZGFxIgogKiBkcml2ZXIuCiAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoMHgxNDAyLCAweDIw
MDAsIHF1aXJrX3BseF9wY2k5MDUwKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKDB4MTQwMiwg
MHgyNjAwLCBxdWlya19wbHhfcGNpOTA1MCk7CgpzdGF0aWMgdm9pZCBxdWlya19uZXRtb3Moc3Ry
dWN0IHBjaV9kZXYgKmRldikKewoJdW5zaWduZWQgaW50IG51bV9wYXJhbGxlbCA9IChkZXYtPnN1
YnN5c3RlbV9kZXZpY2UgJiAweGYwKSA+PiA0OwoJdW5zaWduZWQgaW50IG51bV9zZXJpYWwgPSBk
ZXYtPnN1YnN5c3RlbV9kZXZpY2UgJiAweGY7CgoJLyoKCSAqIFRoZXNlIE5ldG1vcyBwYXJ0cyBh
cmUgbXVsdGlwb3J0IHNlcmlhbCBkZXZpY2VzIHdpdGggb3B0aW9uYWwKCSAqIHBhcmFsbGVsIHBv
cnRzLiAgRXZlbiB3aGVuIHBhcmFsbGVsIHBvcnRzIGFyZSBwcmVzZW50LCB0aGV5CgkgKiBhcmUg
aWRlbnRpZmllZCBhcyBjbGFzcyBTRVJJQUwsIHdoaWNoIG1lYW5zIHRoZSBzZXJpYWwgZHJpdmVy
CgkgKiB3aWxsIGNsYWltIHRoZW0uICBUbyBwcmV2ZW50IHRoaXMsIG1hcmsgdGhlbSBhcyBjbGFz
cyBPVEhFUi4KCSAqIFRoZXNlIGNvbWJvIGRldmljZXMgc2hvdWxkIGJlIGNsYWltZWQgYnkgcGFy
cG9ydF9zZXJpYWwuCgkgKgoJICogVGhlIHN1YmRldmljZSBJRCBpcyBvZiB0aGUgZm9ybSAweDAw
UFMsIHdoZXJlIDxQPiBpcyB0aGUgbnVtYmVyCgkgKiBvZiBwYXJhbGxlbCBwb3J0cyBhbmQgPFM+
IGlzIHRoZSBudW1iZXIgb2Ygc2VyaWFsIHBvcnRzLgoJICovCglzd2l0Y2ggKGRldi0+ZGV2aWNl
KSB7CgljYXNlIFBDSV9ERVZJQ0VfSURfTkVUTU9TXzk4MzU6CgkJLyogV2VsbCwgdGhpcyBydWxl
IGRvZXNuJ3QgaG9sZCBmb3IgdGhlIGZvbGxvd2luZyA5ODM1IGRldmljZSAqLwoJCWlmIChkZXYt
PnN1YnN5c3RlbV92ZW5kb3IgPT0gUENJX1ZFTkRPUl9JRF9JQk0gJiYKCQkJCWRldi0+c3Vic3lz
dGVtX2RldmljZSA9PSAweDAyOTkpCgkJCXJldHVybjsKCQkvKiBlbHNlLCBmYWxsIHRocm91Z2gg
Ki8KCWNhc2UgUENJX0RFVklDRV9JRF9ORVRNT1NfOTczNToKCWNhc2UgUENJX0RFVklDRV9JRF9O
RVRNT1NfOTc0NToKCWNhc2UgUENJX0RFVklDRV9JRF9ORVRNT1NfOTg0NToKCWNhc2UgUENJX0RF
VklDRV9JRF9ORVRNT1NfOTg1NToKCQlpZiAobnVtX3BhcmFsbGVsKSB7CgkJCXBjaV9pbmZvKGRl
diwgIk5ldG1vcyAlMDR4ICgldSBwYXJhbGxlbCwgJXUgc2VyaWFsKTsgY2hhbmdpbmcgY2xhc3Mg
U0VSSUFMIHRvIE9USEVSICh1c2UgcGFycG9ydF9zZXJpYWwpXG4iLAoJCQkJZGV2LT5kZXZpY2Us
IG51bV9wYXJhbGxlbCwgbnVtX3NlcmlhbCk7CgkJCWRldi0+Y2xhc3MgPSAoUENJX0NMQVNTX0NP
TU1VTklDQVRJT05fT1RIRVIgPDwgOCkgfAoJCQkgICAgKGRldi0+Y2xhc3MgJiAweGZmKTsKCQl9
Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfSEVBREVSKFBDSV9WRU5ET1JfSURfTkVUTU9T
LCBQQ0lfQU5ZX0lELAoJCQkgUENJX0NMQVNTX0NPTU1VTklDQVRJT05fU0VSSUFMLCA4LCBxdWly
a19uZXRtb3MpOwoKc3RhdGljIHZvaWQgcXVpcmtfZTEwMF9pbnRlcnJ1cHQoc3RydWN0IHBjaV9k
ZXYgKmRldikKewoJdTE2IGNvbW1hbmQsIHBtY3NyOwoJdTggX19pb21lbSAqY3NyOwoJdTggY21k
X2hpOwoKCXN3aXRjaCAoZGV2LT5kZXZpY2UpIHsKCS8qIFBDSSBJRHMgdGFrZW4gZnJvbSBkcml2
ZXJzL25ldC9lMTAwLmMgKi8KCWNhc2UgMHgxMDI5OgoJY2FzZSAweDEwMzAgLi4uIDB4MTAzNDoK
CWNhc2UgMHgxMDM4IC4uLiAweDEwM0U6CgljYXNlIDB4MTA1MCAuLi4gMHgxMDU3OgoJY2FzZSAw
eDEwNTk6CgljYXNlIDB4MTA2NCAuLi4gMHgxMDZCOgoJY2FzZSAweDEwOTEgLi4uIDB4MTA5NToK
CWNhc2UgMHgxMjA5OgoJY2FzZSAweDEyMjk6CgljYXNlIDB4MjQ0OToKCWNhc2UgMHgyNDU5OgoJ
Y2FzZSAweDI0NUQ6CgljYXNlIDB4MjdEQzoKCQlicmVhazsKCWRlZmF1bHQ6CgkJcmV0dXJuOwoJ
fQoKCS8qCgkgKiBTb21lIGZpcm13YXJlIGhhbmRzIG9mZiB0aGUgZTEwMCB3aXRoIGludGVycnVw
dHMgZW5hYmxlZCwKCSAqIHdoaWNoIGNhbiBjYXVzZSBhIGZsb29kIG9mIGludGVycnVwdHMgaWYg
cGFja2V0cyBhcmUKCSAqIHJlY2VpdmVkIGJlZm9yZSB0aGUgZHJpdmVyIGF0dGFjaGVzIHRvIHRo
ZSBkZXZpY2UuICBTbwoJICogZGlzYWJsZSBhbGwgZTEwMCBpbnRlcnJ1cHRzIGhlcmUuICBUaGUg
ZHJpdmVyIHdpbGwKCSAqIHJlLWVuYWJsZSB0aGVtIHdoZW4gaXQncyByZWFkeS4KCSAqLwoJcGNp
X3JlYWRfY29uZmlnX3dvcmQoZGV2LCBQQ0lfQ09NTUFORCwgJmNvbW1hbmQpOwoKCWlmICghKGNv
bW1hbmQgJiBQQ0lfQ09NTUFORF9NRU1PUlkpIHx8ICFwY2lfcmVzb3VyY2Vfc3RhcnQoZGV2LCAw
KSkKCQlyZXR1cm47CgoJLyoKCSAqIENoZWNrIHRoYXQgdGhlIGRldmljZSBpcyBpbiB0aGUgRDAg
cG93ZXIgc3RhdGUuIElmIGl0J3Mgbm90LAoJICogdGhlcmUgaXMgbm8gcG9pbnQgdG8gbG9vayBh
bnkgZnVydGhlci4KCSAqLwoJaWYgKGRldi0+cG1fY2FwKSB7CgkJcGNpX3JlYWRfY29uZmlnX3dv
cmQoZGV2LCBkZXYtPnBtX2NhcCArIFBDSV9QTV9DVFJMLCAmcG1jc3IpOwoJCWlmICgocG1jc3Ig
JiBQQ0lfUE1fQ1RSTF9TVEFURV9NQVNLKSAhPSBQQ0lfRDApCgkJCXJldHVybjsKCX0KCgkvKiBD
b252ZXJ0IGZyb20gUENJIGJ1cyB0byByZXNvdXJjZSBzcGFjZS4gICovCgljc3IgPSBpb3JlbWFw
KHBjaV9yZXNvdXJjZV9zdGFydChkZXYsIDApLCA4KTsKCWlmICghY3NyKSB7CgkJcGNpX3dhcm4o
ZGV2LCAiQ2FuJ3QgbWFwIGUxMDAgcmVnaXN0ZXJzXG4iKTsKCQlyZXR1cm47Cgl9CgoJY21kX2hp
ID0gcmVhZGIoY3NyICsgMyk7CglpZiAoY21kX2hpID09IDApIHsKCQlwY2lfd2FybihkZXYsICJG
aXJtd2FyZSBsZWZ0IGUxMDAgaW50ZXJydXB0cyBlbmFibGVkOyBkaXNhYmxpbmdcbiIpOwoJCXdy
aXRlYigxLCBjc3IgKyAzKTsKCX0KCglpb3VubWFwKGNzcik7Cn0KREVDTEFSRV9QQ0lfRklYVVBf
Q0xBU1NfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0FOWV9JRCwKCQkJUENJX0NMQVNT
X05FVFdPUktfRVRIRVJORVQsIDgsIHF1aXJrX2UxMDBfaW50ZXJydXB0KTsKCi8qCiAqIFRoZSA4
MjU3NSBhbmQgODI1OTggbWF5IGV4cGVyaWVuY2UgZGF0YSBjb3JydXB0aW9uIGlzc3VlcyB3aGVu
IHRyYW5zaXRpb25pbmcKICogb3V0IG9mIEwwUy4gIFRvIHByZXZlbnQgdGhpcyB3ZSBuZWVkIHRv
IGRpc2FibGUgTDBTIG9uIHRoZSBQQ0llIGxpbmsuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19kaXNh
YmxlX2FzcG1fbDBzKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXBjaV9pbmZvKGRldiwgIkRpc2Fi
bGluZyBMMHNcbiIpOwoJcGNpX2Rpc2FibGVfbGlua19zdGF0ZShkZXYsIFBDSUVfTElOS19TVEFU
RV9MMFMpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MTBhNywgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4MTBhOSwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBiNiwgcXVpcmtfZGlz
YWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTBjNiwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBjNywgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBjOCwgcXVp
cmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4MTBkNiwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBkYiwgcXVpcmtfZGlzYWJsZV9hc3Bt
X2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBk
ZCwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MTBlMSwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBlYywgcXVpcmtfZGlzYWJs
ZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUws
IDB4MTBmMSwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBmNCwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUwOCwgcXVpcmtf
ZGlzYWJsZV9hc3BtX2wwcyk7CgovKgogKiBTb21lIFBlcmljb20gUENJZS10by1QQ0kgYnJpZGdl
cyBpbiByZXZlcnNlIG1vZGUgbmVlZCB0aGUgUENJZSBSZXRyYWluCiAqIExpbmsgYml0IGNsZWFy
ZWQgYWZ0ZXIgc3RhcnRpbmcgdGhlIGxpbmsgcmV0cmFpbiBwcm9jZXNzIHRvIGFsbG93IHRoaXMK
ICogcHJvY2VzcyB0byBmaW5pc2guCiAqCiAqIEFmZmVjdGVkIGRldmljZXM6IFBJN0M5WDExMCwg
UEk3QzlYMTExU0wsIFBJN0M5WDEzMC4gIFNlZSBhbHNvIHRoZQogKiBQZXJpY29tIEVycmF0YSBT
aGVldCBQSTdDOVgxMTFTTEJfZXJyYXRhX3JldjEuMl8xMDI3MTEucGRmLgogKi8Kc3RhdGljIHZv
aWQgcXVpcmtfZW5hYmxlX2NsZWFyX3JldHJhaW5fbGluayhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7
CglkZXYtPmNsZWFyX3JldHJhaW5fbGluayA9IDE7CglwY2lfaW5mbyhkZXYsICJFbmFibGUgUENJ
ZSBSZXRyYWluIExpbmsgcXVpcmtcbiIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUigweDEy
ZDgsIDB4ZTExMCwgcXVpcmtfZW5hYmxlX2NsZWFyX3JldHJhaW5fbGluayk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUigweDEyZDgsIDB4ZTExMSwgcXVpcmtfZW5hYmxlX2NsZWFyX3JldHJhaW5f
bGluayk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUigweDEyZDgsIDB4ZTEzMCwgcXVpcmtfZW5h
YmxlX2NsZWFyX3JldHJhaW5fbGluayk7CgpzdGF0aWMgdm9pZCBmaXh1cF9yZXYxXzUzYzgxMChz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1MzIgY2xhc3MgPSBkZXYtPmNsYXNzOwoKCS8qCgkgKiBy
ZXYgMSBuY3I1M2M4MTAgY2hpcHMgZG9uJ3Qgc2V0IHRoZSBjbGFzcyBhdCBhbGwgd2hpY2ggbWVh
bnMKCSAqIHRoZXkgZG9uJ3QgZ2V0IHRoZWlyIHJlc291cmNlcyByZW1hcHBlZC4gRml4IHRoYXQg
aGVyZS4KCSAqLwoJaWYgKGNsYXNzKQoJCXJldHVybjsKCglkZXYtPmNsYXNzID0gUENJX0NMQVNT
X1NUT1JBR0VfU0NTSSA8PCA4OwoJcGNpX2luZm8oZGV2LCAiTkNSIDUzYzgxMCByZXYgMSBQQ0kg
Y2xhc3Mgb3ZlcnJpZGRlbiAoJSMwOHggLT4gJSMwOHgpXG4iLAoJCSBjbGFzcywgZGV2LT5jbGFz
cyk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTkNSLCBQQ0lfREVW
SUNFX0lEX05DUl81M0M4MTAsIGZpeHVwX3JldjFfNTNjODEwKTsKCi8qIEVuYWJsZSAxayBJL08g
c3BhY2UgZ3JhbnVsYXJpdHkgb24gdGhlIEludGVsIFA2NEgyICovCnN0YXRpYyB2b2lkIHF1aXJr
X3A2NGgyXzFrX2lvKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUxNiBlbjFrOwoKCXBjaV9yZWFk
X2NvbmZpZ193b3JkKGRldiwgMHg0MCwgJmVuMWspOwoKCWlmIChlbjFrICYgMHgyMDApIHsKCQlw
Y2lfaW5mbyhkZXYsICJFbmFibGUgSS9PIFNwYWNlIHRvIDFLQiBncmFudWxhcml0eVxuIik7CgkJ
ZGV2LT5pb193aW5kb3dfMWsgPSAxOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDE0NjAsIHF1aXJrX3A2NGgyXzFrX2lvKTsKCi8qCiAqIFVuZGVy
IHNvbWUgY2lyY3Vtc3RhbmNlcywgQUVSIGlzIG5vdCBsaW5rZWQgd2l0aCBleHRlbmRlZCBjYXBh
YmlsaXRpZXMuCiAqIEZvcmNlIGl0IHRvIGJlIGxpbmtlZCBieSBzZXR0aW5nIHRoZSBjb3JyZXNw
b25kaW5nIGNvbnRyb2wgYml0IGluIHRoZQogKiBjb25maWcgc3BhY2UuCiAqLwpzdGF0aWMgdm9p
ZCBxdWlya19udmlkaWFfY2s4MDRfcGNpZV9hZXJfZXh0X2NhcChzdHJ1Y3QgcGNpX2RldiAqZGV2
KQp7Cgl1aW50OF90IGI7CgoJaWYgKHBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgMHhmNDEsICZi
KSA9PSAwKSB7CgkJaWYgKCEoYiAmIDB4MjApKSB7CgkJCXBjaV93cml0ZV9jb25maWdfYnl0ZShk
ZXYsIDB4ZjQxLCBiIHwgMHgyMCk7CgkJCXBjaV9pbmZvKGRldiwgIkxpbmtpbmcgQUVSIGV4dGVu
ZGVkIGNhcGFiaWxpdHlcbiIpOwoJCX0KCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lf
VkVORE9SX0lEX05WSURJQSwgIFBDSV9ERVZJQ0VfSURfTlZJRElBX0NLODA0X1BDSUUsCgkJCXF1
aXJrX252aWRpYV9jazgwNF9wY2llX2Flcl9leHRfY2FwKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVT
VU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfTlZJRElBLCAgUENJX0RFVklDRV9JRF9OVklESUFfQ0s4
MDRfUENJRSwKCQkJcXVpcmtfbnZpZGlhX2NrODA0X3BjaWVfYWVyX2V4dF9jYXApOwoKc3RhdGlj
IHZvaWQgcXVpcmtfdmlhX2N4NzAwX3BjaV9wYXJraW5nX2NhY2hpbmcoc3RydWN0IHBjaV9kZXYg
KmRldikKewoJLyoKCSAqIERpc2FibGUgUENJIEJ1cyBQYXJraW5nIGFuZCBQQ0kgTWFzdGVyIHJl
YWQgY2FjaGluZyBvbiBDWDcwMAoJICogd2hpY2ggY2F1c2VzIHVuc3BlY2lmaWVkIHRpbWluZyBl
cnJvcnMgd2l0aCBhIFZUNjIxMkwgb24gdGhlIFBDSQoJICogYnVzIGxlYWRpbmcgdG8gVVNCMi4w
IHBhY2tldCBsb3NzLgoJICoKCSAqIFRoaXMgcXVpcmsgaXMgb25seSBlbmFibGVkIGlmIGEgc2Vj
b25kIChvbiB0aGUgZXh0ZXJuYWwgUENJIGJ1cykKCSAqIFZUNjIxMkwgaXMgZm91bmQgLS0gdGhl
IENYNzAwIGNvcmUgaXRzZWxmIGFsc28gY29udGFpbnMgYSBVU0IKCSAqIGhvc3QgY29udHJvbGxl
ciB3aXRoIHRoZSBzYW1lIFBDSSBJRCBhcyB0aGUgVlQ2MjEyTC4KCSAqLwoKCS8qIENvdW50IFZU
NjIxMkwgaW5zdGFuY2VzICovCglzdHJ1Y3QgcGNpX2RldiAqcCA9IHBjaV9nZXRfZGV2aWNlKFBD
SV9WRU5ET1JfSURfVklBLAoJCVBDSV9ERVZJQ0VfSURfVklBXzgyMzVfVVNCXzIsIE5VTEwpOwoJ
dWludDhfdCBiOwoKCS8qCgkgKiBwIHNob3VsZCBjb250YWluIHRoZSBmaXJzdCAoaW50ZXJuYWwp
IFZUNjIxMkwgLS0gc2VlIGlmIHdlIGhhdmUKCSAqIGFuIGV4dGVybmFsIG9uZSBieSBzZWFyY2hp
bmcgYWdhaW4uCgkgKi8KCXAgPSBwY2lfZ2V0X2RldmljZShQQ0lfVkVORE9SX0lEX1ZJQSwgUENJ
X0RFVklDRV9JRF9WSUFfODIzNV9VU0JfMiwgcCk7CglpZiAoIXApCgkJcmV0dXJuOwoJcGNpX2Rl
dl9wdXQocCk7CgoJaWYgKHBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgMHg3NiwgJmIpID09IDAp
IHsKCQlpZiAoYiAmIDB4NDApIHsKCQkJLyogVHVybiBvZmYgUENJIEJ1cyBQYXJraW5nICovCgkJ
CXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4NzYsIGIgXiAweDQwKTsKCgkJCXBjaV9pbmZv
KGRldiwgIkRpc2FibGluZyBWSUEgQ1g3MDAgUENJIHBhcmtpbmdcbiIpOwoJCX0KCX0KCglpZiAo
cGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCAweDcyLCAmYikgPT0gMCkgewoJCWlmIChiICE9IDAp
IHsKCQkJLyogVHVybiBvZmYgUENJIE1hc3RlciByZWFkIGNhY2hpbmcgKi8KCQkJcGNpX3dyaXRl
X2NvbmZpZ19ieXRlKGRldiwgMHg3MiwgMHgwKTsKCgkJCS8qIFNldCBQQ0kgTWFzdGVyIEJ1cyB0
aW1lLW91dCB0byAiMXgxNiBQQ0xLIiAqLwoJCQlwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCAw
eDc1LCAweDEpOwoKCQkJLyogRGlzYWJsZSAiUmVhZCBGSUZPIFRpbWVyIiAqLwoJCQlwY2lfd3Jp
dGVfY29uZmlnX2J5dGUoZGV2LCAweDc3LCAweDApOwoKCQkJcGNpX2luZm8oZGV2LCAiRGlzYWJs
aW5nIFZJQSBDWDcwMCBQQ0kgY2FjaGluZ1xuIik7CgkJfQoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfVklBLCAweDMyNGUsIHF1aXJrX3ZpYV9jeDcwMF9wY2lfcGFy
a2luZ19jYWNoaW5nKTsKCnN0YXRpYyB2b2lkIHF1aXJrX2JyY21fNTcxOV9saW1pdF9tcnJzKHN0
cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUzMiByZXY7CgoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKGRl
diwgMHhmNCwgJnJldik7CgoJLyogT25seSBDQVAgdGhlIE1SUlMgaWYgdGhlIGRldmljZSBpcyBh
IDU3MTkgQTAgKi8KCWlmIChyZXYgPT0gMHgwNTcxOTAwMCkgewoJCWludCByZWFkcnEgPSBwY2ll
X2dldF9yZWFkcnEoZGV2KTsKCQlpZiAocmVhZHJxID4gMjA0OCkKCQkJcGNpZV9zZXRfcmVhZHJx
KGRldiwgMjA0OCk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRU5BQkxFKFBDSV9WRU5ET1JfSURf
QlJPQURDT00sCgkJCSBQQ0lfREVWSUNFX0lEX1RJR09OM181NzE5LAoJCQkgcXVpcmtfYnJjbV81
NzE5X2xpbWl0X21ycnMpOwoKI2lmZGVmIENPTkZJR19QQ0lFX0lQUk9DX1BMQVRGT1JNCnN0YXRp
YyB2b2lkIHF1aXJrX3BheGNfYnJpZGdlKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7CgkvKgoJICog
VGhlIFBDSSBjb25maWcgc3BhY2UgaXMgc2hhcmVkIHdpdGggdGhlIFBBWEMgcm9vdCBwb3J0IGFu
ZCB0aGUgZmlyc3QKCSAqIEV0aGVybmV0IGRldmljZS4gIFNvLCB3ZSBuZWVkIHRvIHdvcmthcm91
bmQgdGhpcyBieSB0ZWxsaW5nIHRoZSBQQ0kKCSAqIGNvZGUgdGhhdCB0aGUgYnJpZGdlIGlzIG5v
dCBhbiBFdGhlcm5ldCBkZXZpY2UuCgkgKi8KCWlmIChwZGV2LT5oZHJfdHlwZSA9PSBQQ0lfSEVB
REVSX1RZUEVfQlJJREdFKQoJCXBkZXYtPmNsYXNzID0gUENJX0NMQVNTX0JSSURHRV9QQ0kgPDwg
ODsKCgkvKgoJICogTVBTUyBpcyBub3QgYmVpbmcgc2V0IHByb3Blcmx5IChhcyBpdCBpcyBjdXJy
ZW50bHkgMCkuICBUaGlzIGlzCgkgKiBiZWNhdXNlIHRoYXQgYXJlYSBvZiB0aGUgUENJIGNvbmZp
ZyBzcGFjZSBpcyBoYXJkIGNvZGVkIHRvIHplcm8sIGFuZAoJICogaXMgbm90IG1vZGlmaWFibGUg
YnkgZmlybXdhcmUuICBTZXQgdGhpcyB0byAyIChlLmcuLCA1MTIgYnl0ZSBNUFMpCgkgKiBzbyB0
aGF0IHRoZSBNUFMgY2FuIGJlIHNldCB0byB0aGUgcmVhbCBtYXggdmFsdWUuCgkgKi8KCXBkZXYt
PnBjaWVfbXBzcyA9IDI7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9C
Uk9BRENPTSwgMHgxNmNkLCBxdWlya19wYXhjX2JyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VB
UkxZKFBDSV9WRU5ET1JfSURfQlJPQURDT00sIDB4MTZmMCwgcXVpcmtfcGF4Y19icmlkZ2UpOwpE
RUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX0JST0FEQ09NLCAweGQ3NTAsIHF1
aXJrX3BheGNfYnJpZGdlKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9C
Uk9BRENPTSwgMHhkODAyLCBxdWlya19wYXhjX2JyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VB
UkxZKFBDSV9WRU5ET1JfSURfQlJPQURDT00sIDB4ZDgwNCwgcXVpcmtfcGF4Y19icmlkZ2UpOwoj
ZW5kaWYKCi8qCiAqIE9yaWdpbmFsbHkgaW4gRURBQyBzb3VyY2VzIGZvciBpODI4NzVQOiBJbnRl
bCB0ZWxscyBCSU9TIGRldmVsb3BlcnMgdG8KICogaGlkZSBkZXZpY2UgNiB3aGljaCBjb25maWd1
cmVzIHRoZSBvdmVyZmxvdyBkZXZpY2UgYWNjZXNzIGNvbnRhaW5pbmcgdGhlCiAqIERSQnMgLSB0
aGlzIGlzIHdoZXJlIHdlIGV4cG9zZSBkZXZpY2UgNi4KICogaHR0cDovL3d3dy54ODYtc2VjcmV0
LmNvbS9hcnRpY2xlcy90d2Vhay9wYXQvcGF0c2VjcmV0cy0yLmh0bQogKi8Kc3RhdGljIHZvaWQg
cXVpcmtfdW5oaWRlX21jaF9kZXY2KHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXU4IHJlZzsKCglp
ZiAocGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCAweEY0LCAmcmVnKSA9PSAwICYmICEocmVnICYg
MHgwMikpIHsKCQlwY2lfaW5mbyhkZXYsICJFbmFibGluZyBNQ0ggJ092ZXJmbG93JyBEZXZpY2Vc
biIpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4RjQsIHJlZyB8IDB4MDIpOwoJfQp9
CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0Vf
SURfSU5URUxfODI4NjVfSEIsCgkJCXF1aXJrX3VuaGlkZV9tY2hfZGV2Nik7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0VfSURfSU5URUxfODI4
NzVfSEIsCgkJCXF1aXJrX3VuaGlkZV9tY2hfZGV2Nik7CgojaWZkZWYgQ09ORklHX1BDSV9NU0kK
LyoKICogU29tZSBjaGlwc2V0cyBkbyBub3Qgc3VwcG9ydCBNU0kuIFdlIGNhbm5vdCBlYXNpbHkg
cmVseSBvbiBzZXR0aW5nCiAqIFBDSV9CVVNfRkxBR1NfTk9fTVNJIGluIGl0cyBidXMgZmxhZ3Mg
YmVjYXVzZSB0aGVyZSBhcmUgYWN0dWFsbHkgc29tZQogKiBvdGhlciBidXNlcyBjb250cm9sbGVk
IGJ5IHRoZSBjaGlwc2V0IGV2ZW4gaWYgTGludXggaXMgbm90IGF3YXJlIG9mIGl0LgogKiBJbnN0
ZWFkIG9mIHNldHRpbmcgdGhlIGZsYWcgb24gYWxsIGJ1c2VzIGluIHRoZSBtYWNoaW5lLCBzaW1w
bHkgZGlzYWJsZQogKiBNU0kgZ2xvYmFsbHkuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19kaXNhYmxl
X2FsbF9tc2koc3RydWN0IHBjaV9kZXYgKmRldikKewoJcGNpX25vX21zaSgpOwoJcGNpX3dhcm4o
ZGV2LCAiTVNJIHF1aXJrIGRldGVjdGVkOyBNU0kgZGlzYWJsZWRcbiIpOwp9CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfU0VSVkVSV09SS1MsIFBDSV9ERVZJQ0VfSURfU0VS
VkVSV09SS1NfR0NOQl9MRSwgcXVpcmtfZGlzYWJsZV9hbGxfbXNpKTsKREVDTEFSRV9QQ0lfRklY
VVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX1JTNDAwXzIwMCwg
cXVpcmtfZGlzYWJsZV9hbGxfbXNpKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRP
Ul9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX1JTNDgwLCBxdWlya19kaXNhYmxlX2FsbF9tc2kp
OwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwgUENJX0RFVklDRV9J
RF9WSUFfVlQzMzM2LCBxdWlya19kaXNhYmxlX2FsbF9tc2kpOwpERUNMQVJFX1BDSV9GSVhVUF9G
SU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwgUENJX0RFVklDRV9JRF9WSUFfVlQzMzUxLCBxdWlya19k
aXNhYmxlX2FsbF9tc2kpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJ
QSwgUENJX0RFVklDRV9JRF9WSUFfVlQzMzY0LCBxdWlya19kaXNhYmxlX2FsbF9tc2kpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwgUENJX0RFVklDRV9JRF9WSUFf
ODM4MF8wLCBxdWlya19kaXNhYmxlX2FsbF9tc2kpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQ
Q0lfVkVORE9SX0lEX1NJLCAweDA3NjEsIHF1aXJrX2Rpc2FibGVfYWxsX21zaSk7CgovKiBEaXNh
YmxlIE1TSSBvbiBjaGlwc2V0cyB0aGF0IGFyZSBrbm93biB0byBub3Qgc3VwcG9ydCBpdCAqLwpz
dGF0aWMgdm9pZCBxdWlya19kaXNhYmxlX21zaShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAo
ZGV2LT5zdWJvcmRpbmF0ZSkgewoJCXBjaV93YXJuKGRldiwgIk1TSSBxdWlyayBkZXRlY3RlZDsg
c3Vib3JkaW5hdGUgTVNJIGRpc2FibGVkXG4iKTsKCQlkZXYtPnN1Ym9yZGluYXRlLT5idXNfZmxh
Z3MgfD0gUENJX0JVU19GTEFHU19OT19NU0k7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
UENJX1ZFTkRPUl9JRF9BTUQsIFBDSV9ERVZJQ0VfSURfQU1EXzgxMzFfQlJJREdFLCBxdWlya19k
aXNhYmxlX21zaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfVklBLCAw
eGEyMzgsIHF1aXJrX2Rpc2FibGVfbXNpKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZF
TkRPUl9JRF9BVEksIDB4NWEzZiwgcXVpcmtfZGlzYWJsZV9tc2kpOwoKLyoKICogVGhlIEFQQyBi
cmlkZ2UgZGV2aWNlIGluIEFNRCA3ODAgZmFtaWx5IG5vcnRoYnJpZGdlcyBoYXMgc29tZSByYW5k
b20KICogT0VNIHN1YnN5c3RlbSBJRCBpbiBpdHMgdmVuZG9yIElEIHJlZ2lzdGVyIChlcnJhdHVt
IDE4KSwgc28gaW5zdGVhZAogKiB3ZSB1c2UgdGhlIHBvc3NpYmxlIHZlbmRvci9kZXZpY2UgSURz
IG9mIHRoZSBob3N0IGJyaWRnZSBmb3IgdGhlCiAqIGRlY2xhcmVkIHF1aXJrLCBhbmQgc2VhcmNo
IGZvciB0aGUgQVBDIGJyaWRnZSBieSBzbG90IG51bWJlci4KICovCnN0YXRpYyB2b2lkIHF1aXJr
X2FtZF83ODBfYXBjX21zaShzdHJ1Y3QgcGNpX2RldiAqaG9zdF9icmlkZ2UpCnsKCXN0cnVjdCBw
Y2lfZGV2ICphcGNfYnJpZGdlOwoKCWFwY19icmlkZ2UgPSBwY2lfZ2V0X3Nsb3QoaG9zdF9icmlk
Z2UtPmJ1cywgUENJX0RFVkZOKDEsIDApKTsKCWlmIChhcGNfYnJpZGdlKSB7CgkJaWYgKGFwY19i
cmlkZ2UtPmRldmljZSA9PSAweDk2MDIpCgkJCXF1aXJrX2Rpc2FibGVfbXNpKGFwY19icmlkZ2Up
OwoJCXBjaV9kZXZfcHV0KGFwY19icmlkZ2UpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfQU1ELCAweDk2MDAsIHF1aXJrX2FtZF83ODBfYXBjX21zaSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1ELCAweDk2MDEsIHF1aXJrX2FtZF83
ODBfYXBjX21zaSk7CgovKgogKiBHbyB0aHJvdWdoIHRoZSBsaXN0IG9mIEh5cGVyVHJhbnNwb3J0
IGNhcGFiaWxpdGllcyBhbmQgcmV0dXJuIDEgaWYgYSBIVAogKiBNU0kgY2FwYWJpbGl0eSBpcyBm
b3VuZCBhbmQgZW5hYmxlZC4KICovCnN0YXRpYyBpbnQgbXNpX2h0X2NhcF9lbmFibGVkKHN0cnVj
dCBwY2lfZGV2ICpkZXYpCnsKCWludCBwb3MsIHR0bCA9IFBDSV9GSU5EX0NBUF9UVEw7CgoJcG9z
ID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0eShkZXYsIEhUX0NBUFRZUEVfTVNJX01BUFBJTkcpOwoJ
d2hpbGUgKHBvcyAmJiB0dGwtLSkgewoJCXU4IGZsYWdzOwoKCQlpZiAocGNpX3JlYWRfY29uZmln
X2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lfRkxBR1MsCgkJCQkJICZmbGFncykgPT0gMCkgewoJCQlw
Y2lfaW5mbyhkZXYsICJGb3VuZCAlcyBIVCBNU0kgTWFwcGluZ1xuIiwKCQkJCWZsYWdzICYgSFRf
TVNJX0ZMQUdTX0VOQUJMRSA/CgkJCQkiZW5hYmxlZCIgOiAiZGlzYWJsZWQiKTsKCQkJcmV0dXJu
IChmbGFncyAmIEhUX01TSV9GTEFHU19FTkFCTEUpICE9IDA7CgkJfQoKCQlwb3MgPSBwY2lfZmlu
ZF9uZXh0X2h0X2NhcGFiaWxpdHkoZGV2LCBwb3MsCgkJCQkJCSAgSFRfQ0FQVFlQRV9NU0lfTUFQ
UElORyk7Cgl9CglyZXR1cm4gMDsKfQoKLyogQ2hlY2sgdGhlIEh5cGVyVHJhbnNwb3J0IE1TSSBt
YXBwaW5nIHRvIGtub3cgd2hldGhlciBNU0kgaXMgZW5hYmxlZCBvciBub3QgKi8Kc3RhdGljIHZv
aWQgcXVpcmtfbXNpX2h0X2NhcChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAoZGV2LT5zdWJv
cmRpbmF0ZSAmJiAhbXNpX2h0X2NhcF9lbmFibGVkKGRldikpIHsKCQlwY2lfd2FybihkZXYsICJN
U0kgcXVpcmsgZGV0ZWN0ZWQ7IHN1Ym9yZGluYXRlIE1TSSBkaXNhYmxlZFxuIik7CgkJZGV2LT5z
dWJvcmRpbmF0ZS0+YnVzX2ZsYWdzIHw9IFBDSV9CVVNfRkxBR1NfTk9fTVNJOwoJfQp9CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfU0VSVkVSV09SS1MsIFBDSV9ERVZJQ0Vf
SURfU0VSVkVSV09SS1NfSFQyMDAwX1BDSUUsCgkJCXF1aXJrX21zaV9odF9jYXApOwoKLyoKICog
VGhlIG5WaWRpYSBDSzgwNCBjaGlwc2V0IG1heSBoYXZlIDIgSFQgTVNJIG1hcHBpbmdzLiAgTVNJ
IGlzIHN1cHBvcnRlZAogKiBpZiB0aGUgTVNJIGNhcGFiaWxpdHkgaXMgc2V0IGluIGFueSBvZiB0
aGVzZSBtYXBwaW5ncy4KICovCnN0YXRpYyB2b2lkIHF1aXJrX252aWRpYV9jazgwNF9tc2lfaHRf
Y2FwKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXN0cnVjdCBwY2lfZGV2ICpwZGV2OwoKCWlmICgh
ZGV2LT5zdWJvcmRpbmF0ZSkKCQlyZXR1cm47CgoJLyoKCSAqIENoZWNrIEhUIE1TSSBjYXAgb24g
dGhpcyBjaGlwc2V0IGFuZCB0aGUgcm9vdCBvbmUuICBBIHNpbmdsZSBvbmUKCSAqIGhhdmluZyBN
U0kgaXMgZW5vdWdoIHRvIGJlIHN1cmUgdGhhdCBNU0kgaXMgc3VwcG9ydGVkLgoJICovCglwZGV2
ID0gcGNpX2dldF9zbG90KGRldi0+YnVzLCAwKTsKCWlmICghcGRldikKCQlyZXR1cm47CglpZiAo
IW1zaV9odF9jYXBfZW5hYmxlZChkZXYpICYmICFtc2lfaHRfY2FwX2VuYWJsZWQocGRldikpIHsK
CQlwY2lfd2FybihkZXYsICJNU0kgcXVpcmsgZGV0ZWN0ZWQ7IHN1Ym9yZGluYXRlIE1TSSBkaXNh
YmxlZFxuIik7CgkJZGV2LT5zdWJvcmRpbmF0ZS0+YnVzX2ZsYWdzIHw9IFBDSV9CVVNfRkxBR1Nf
Tk9fTVNJOwoJfQoJcGNpX2Rldl9wdXQocGRldik7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
UENJX1ZFTkRPUl9JRF9OVklESUEsIFBDSV9ERVZJQ0VfSURfTlZJRElBX0NLODA0X1BDSUUsCgkJ
CXF1aXJrX252aWRpYV9jazgwNF9tc2lfaHRfY2FwKTsKCi8qIEZvcmNlIGVuYWJsZSBNU0kgbWFw
cGluZyBjYXBhYmlsaXR5IG9uIEhUIGJyaWRnZXMgKi8Kc3RhdGljIHZvaWQgaHRfZW5hYmxlX21z
aV9tYXBwaW5nKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWludCBwb3MsIHR0bCA9IFBDSV9GSU5E
X0NBUF9UVEw7CgoJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0eShkZXYsIEhUX0NBUFRZUEVf
TVNJX01BUFBJTkcpOwoJd2hpbGUgKHBvcyAmJiB0dGwtLSkgewoJCXU4IGZsYWdzOwoKCQlpZiAo
cGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lfRkxBR1MsCgkJCQkJICZmbGFn
cykgPT0gMCkgewoJCQlwY2lfaW5mbyhkZXYsICJFbmFibGluZyBIVCBNU0kgTWFwcGluZ1xuIik7
CgoJCQlwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lfRkxBR1MsCgkJCQkJ
ICAgICAgZmxhZ3MgfCBIVF9NU0lfRkxBR1NfRU5BQkxFKTsKCQl9CgkJcG9zID0gcGNpX2ZpbmRf
bmV4dF9odF9jYXBhYmlsaXR5KGRldiwgcG9zLAoJCQkJCQkgIEhUX0NBUFRZUEVfTVNJX01BUFBJ
TkcpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1NFUlZFUldP
UktTLAoJCQkgUENJX0RFVklDRV9JRF9TRVJWRVJXT1JLU19IVDEwMDBfUFhCLAoJCQkgaHRfZW5h
YmxlX21zaV9tYXBwaW5nKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
QU1ELCBQQ0lfREVWSUNFX0lEX0FNRF84MTMyX0JSSURHRSwKCQkJIGh0X2VuYWJsZV9tc2lfbWFw
cGluZyk7CgovKgogKiBUaGUgUDVOMzItU0xJIG1vdGhlcmJvYXJkcyBmcm9tIEFzdXMgaGF2ZSBh
IHByb2JsZW0gd2l0aCBNU0kKICogZm9yIHRoZSBNQ1A1NSBOSUMuIEl0IGlzIG5vdCB5ZXQgZGV0
ZXJtaW5lZCB3aGV0aGVyIHRoZSBNU0kgcHJvYmxlbQogKiBhbHNvIGFmZmVjdHMgb3RoZXIgZGV2
aWNlcy4gQXMgZm9yIG5vdywgdHVybiBvZmYgTVNJIGZvciB0aGlzIGRldmljZS4KICovCnN0YXRp
YyB2b2lkIG52ZW5ldF9tc2lfZGlzYWJsZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgljb25zdCBj
aGFyICpib2FyZF9uYW1lID0gZG1pX2dldF9zeXN0ZW1faW5mbyhETUlfQk9BUkRfTkFNRSk7CgoJ
aWYgKGJvYXJkX25hbWUgJiYKCSAgICAoc3Ryc3RyKGJvYXJkX25hbWUsICJQNU4zMi1TTEkgUFJF
TUlVTSIpIHx8CgkgICAgIHN0cnN0cihib2FyZF9uYW1lLCAiUDVOMzItRSBTTEkiKSkpIHsKCQlw
Y2lfaW5mbyhkZXYsICJEaXNhYmxpbmcgTVNJIGZvciBNQ1A1NSBOSUMgb24gUDVOMzItU0xJXG4i
KTsKCQlkZXYtPm5vX21zaSA9IDE7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZF
TkRPUl9JRF9OVklESUEsCgkJCVBDSV9ERVZJQ0VfSURfTlZJRElBX05WRU5FVF8xNSwKCQkJbnZl
bmV0X21zaV9kaXNhYmxlKTsKCi8qCiAqIFBDSWUgc3BlYyByNC4wIHNlYyA3LjcuMS4yIGFuZCBz
ZWMgNy43LjIuMiBzYXkgdGhhdCBpZiBNU0kvTVNJLVggaXMgZW5hYmxlZCwKICogdGhlbiB0aGUg
ZGV2aWNlIGNhbid0IHVzZSBJTlR4IGludGVycnVwdHMuIFRlZ3JhJ3MgUENJZSByb290IHBvcnRz
IGRvbid0CiAqIGdlbmVyYXRlIE1TSSBpbnRlcnJ1cHRzIGZvciBQTUUgYW5kIEFFUiBldmVudHMg
aW5zdGVhZCBvbmx5IElOVHggaW50ZXJydXB0cwogKiBhcmUgZ2VuZXJhdGVkLiBUaG91Z2ggVGVn
cmEncyBQQ0llIHJvb3QgcG9ydHMgY2FuIGdlbmVyYXRlIE1TSSBpbnRlcnJ1cHRzCiAqIGZvciBv
dGhlciBldmVudHMsIHNpbmNlIFBDSWUgc3BlY2lmaWNpYXRpb24gZG9lc24ndCBzdXBwb3J0IHVz
aW5nIGEgbWl4IG9mCiAqIElOVHggYW5kIE1TSS9NU0ktWCwgaXQgaXMgcmVxdWlyZWQgdG8gZGlz
YWJsZSBNU0kgaW50ZXJydXB0cyB0byBhdm9pZCBwb3J0CiAqIHNlcnZpY2UgZHJpdmVycyByZWdp
c3RlcmluZyB0aGVpciByZXNwZWN0aXZlIElTUnMgZm9yIE1TSXMuCiAqLwpzdGF0aWMgdm9pZCBw
Y2lfcXVpcmtfbnZpZGlhX3RlZ3JhX2Rpc2FibGVfcnBfbXNpKHN0cnVjdCBwY2lfZGV2ICpkZXYp
CnsKCWRldi0+bm9fbXNpID0gMTsKfQpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19FQVJMWShQQ0lf
VkVORE9SX0lEX05WSURJQSwgMHgxYWQwLAoJCQkgICAgICBQQ0lfQ0xBU1NfQlJJREdFX1BDSSwg
OCwKCQkJICAgICAgcGNpX3F1aXJrX252aWRpYV90ZWdyYV9kaXNhYmxlX3JwX21zaSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfTlZJRElBLCAweDFhZDEsCgkJ
CSAgICAgIFBDSV9DTEFTU19CUklER0VfUENJLCA4LAoJCQkgICAgICBwY2lfcXVpcmtfbnZpZGlh
X3RlZ3JhX2Rpc2FibGVfcnBfbXNpKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9OVklESUEsIDB4MWFkMiwKCQkJICAgICAgUENJX0NMQVNTX0JSSURHRV9QQ0ks
IDgsCgkJCSAgICAgIHBjaV9xdWlya19udmlkaWFfdGVncmFfZGlzYWJsZV9ycF9tc2kpOwpERUNM
QVJFX1BDSV9GSVhVUF9DTEFTU19FQVJMWShQQ0lfVkVORE9SX0lEX05WSURJQSwgMHgwYmYwLAoJ
CQkgICAgICBQQ0lfQ0xBU1NfQlJJREdFX1BDSSwgOCwKCQkJICAgICAgcGNpX3F1aXJrX252aWRp
YV90ZWdyYV9kaXNhYmxlX3JwX21zaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBD
SV9WRU5ET1JfSURfTlZJRElBLCAweDBiZjEsCgkJCSAgICAgIFBDSV9DTEFTU19CUklER0VfUENJ
LCA4LAoJCQkgICAgICBwY2lfcXVpcmtfbnZpZGlhX3RlZ3JhX2Rpc2FibGVfcnBfbXNpKTsKREVD
TEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9OVklESUEsIDB4MGUxYywK
CQkJICAgICAgUENJX0NMQVNTX0JSSURHRV9QQ0ksIDgsCgkJCSAgICAgIHBjaV9xdWlya19udmlk
aWFfdGVncmFfZGlzYWJsZV9ycF9tc2kpOwpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19FQVJMWShQ
Q0lfVkVORE9SX0lEX05WSURJQSwgMHgwZTFkLAoJCQkgICAgICBQQ0lfQ0xBU1NfQlJJREdFX1BD
SSwgOCwKCQkJICAgICAgcGNpX3F1aXJrX252aWRpYV90ZWdyYV9kaXNhYmxlX3JwX21zaSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfTlZJRElBLCAweDBlMTIs
CgkJCSAgICAgIFBDSV9DTEFTU19CUklER0VfUENJLCA4LAoJCQkgICAgICBwY2lfcXVpcmtfbnZp
ZGlhX3RlZ3JhX2Rpc2FibGVfcnBfbXNpKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFko
UENJX1ZFTkRPUl9JRF9OVklESUEsIDB4MGUxMywKCQkJICAgICAgUENJX0NMQVNTX0JSSURHRV9Q
Q0ksIDgsCgkJCSAgICAgIHBjaV9xdWlya19udmlkaWFfdGVncmFfZGlzYWJsZV9ycF9tc2kpOwpE
RUNMQVJFX1BDSV9GSVhVUF9DTEFTU19FQVJMWShQQ0lfVkVORE9SX0lEX05WSURJQSwgMHgwZmFl
LAoJCQkgICAgICBQQ0lfQ0xBU1NfQlJJREdFX1BDSSwgOCwKCQkJICAgICAgcGNpX3F1aXJrX252
aWRpYV90ZWdyYV9kaXNhYmxlX3JwX21zaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZ
KFBDSV9WRU5ET1JfSURfTlZJRElBLCAweDBmYWYsCgkJCSAgICAgIFBDSV9DTEFTU19CUklER0Vf
UENJLCA4LAoJCQkgICAgICBwY2lfcXVpcmtfbnZpZGlhX3RlZ3JhX2Rpc2FibGVfcnBfbXNpKTsK
REVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9OVklESUEsIDB4MTBl
NSwKCQkJICAgICAgUENJX0NMQVNTX0JSSURHRV9QQ0ksIDgsCgkJCSAgICAgIHBjaV9xdWlya19u
dmlkaWFfdGVncmFfZGlzYWJsZV9ycF9tc2kpOwpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19FQVJM
WShQQ0lfVkVORE9SX0lEX05WSURJQSwgMHgxMGU2LAoJCQkgICAgICBQQ0lfQ0xBU1NfQlJJREdF
X1BDSSwgOCwKCQkJICAgICAgcGNpX3F1aXJrX252aWRpYV90ZWdyYV9kaXNhYmxlX3JwX21zaSk7
CgovKgogKiBTb21lIHZlcnNpb25zIG9mIHRoZSBNQ1A1NSBicmlkZ2UgZnJvbSBOdmlkaWEgaGF2
ZSBhIGxlZ2FjeSBJUlEgcm91dGluZwogKiBjb25maWcgcmVnaXN0ZXIuICBUaGlzIHJlZ2lzdGVy
IGNvbnRyb2xzIHRoZSByb3V0aW5nIG9mIGxlZ2FjeQogKiBpbnRlcnJ1cHRzIGZyb20gZGV2aWNl
cyB0aGF0IHJvdXRlIHRocm91Z2ggdGhlIE1DUDU1LiAgSWYgdGhpcyByZWdpc3RlcgogKiBpcyBt
aXNwcm9ncmFtbWVkLCBpbnRlcnJ1cHRzIGFyZSBvbmx5IHNlbnQgdG8gdGhlIEJTUCwgdW5saWtl
CiAqIGNvbnZlbnRpb25hbCBzeXN0ZW1zIHdoZXJlIHRoZSBJUlEgaXMgYnJvYWRjYXN0IHRvIGFs
bCBvbmxpbmUgQ1BVcy4gIE5vdAogKiBoYXZpbmcgdGhpcyByZWdpc3RlciBzZXQgcHJvcGVybHkg
cHJldmVudHMga2R1bXAgZnJvbSBib290aW5nIHVwCiAqIHByb3Blcmx5LCBzbyBsZXQncyBtYWtl
IHN1cmUgdGhhdCB3ZSBoYXZlIGl0IHNldCBjb3JyZWN0bHkuCiAqIE5vdGUgdGhhdCB0aGlzIGlz
IGFuIHVuZG9jdW1lbnRlZCByZWdpc3Rlci4KICovCnN0YXRpYyB2b2lkIG52YnJpZGdlX2NoZWNr
X2xlZ2FjeV9pcnFfcm91dGluZyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1MzIgY2ZnOwoKCWlm
ICghcGNpX2ZpbmRfY2FwYWJpbGl0eShkZXYsIFBDSV9DQVBfSURfSFQpKQoJCXJldHVybjsKCglw
Y2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCAweDc0LCAmY2ZnKTsKCglpZiAoY2ZnICYgKCgxIDw8
IDIpIHwgKDEgPDwgMTUpKSkgewoJCXByX2luZm8oIlJld3JpdGluZyBJUlEgcm91dGluZyByZWdp
c3RlciBvbiBNQ1A1NVxuIik7CgkJY2ZnICY9IH4oKDEgPDwgMikgfCAoMSA8PCAxNSkpOwoJCXBj
aV93cml0ZV9jb25maWdfZHdvcmQoZGV2LCAweDc0LCBjZmcpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJ
WFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfTlZJRElBLAoJCQlQQ0lfREVWSUNFX0lEX05WSURJQV9N
Q1A1NV9CUklER0VfVjAsCgkJCW52YnJpZGdlX2NoZWNrX2xlZ2FjeV9pcnFfcm91dGluZyk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfTlZJRElBLAoJCQlQQ0lfREVWSUNF
X0lEX05WSURJQV9NQ1A1NV9CUklER0VfVjQsCgkJCW52YnJpZGdlX2NoZWNrX2xlZ2FjeV9pcnFf
cm91dGluZyk7CgpzdGF0aWMgaW50IGh0X2NoZWNrX21zaV9tYXBwaW5nKHN0cnVjdCBwY2lfZGV2
ICpkZXYpCnsKCWludCBwb3MsIHR0bCA9IFBDSV9GSU5EX0NBUF9UVEw7CglpbnQgZm91bmQgPSAw
OwoKCS8qIENoZWNrIGlmIHRoZXJlIGlzIEhUIE1TSSBjYXAgb3IgZW5hYmxlZCBvbiB0aGlzIGRl
dmljZSAqLwoJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0eShkZXYsIEhUX0NBUFRZUEVfTVNJ
X01BUFBJTkcpOwoJd2hpbGUgKHBvcyAmJiB0dGwtLSkgewoJCXU4IGZsYWdzOwoKCQlpZiAoZm91
bmQgPCAxKQoJCQlmb3VuZCA9IDE7CgkJaWYgKHBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgcG9z
ICsgSFRfTVNJX0ZMQUdTLAoJCQkJCSAmZmxhZ3MpID09IDApIHsKCQkJaWYgKGZsYWdzICYgSFRf
TVNJX0ZMQUdTX0VOQUJMRSkgewoJCQkJaWYgKGZvdW5kIDwgMikgewoJCQkJCWZvdW5kID0gMjsK
CQkJCQlicmVhazsKCQkJCX0KCQkJfQoJCX0KCQlwb3MgPSBwY2lfZmluZF9uZXh0X2h0X2NhcGFi
aWxpdHkoZGV2LCBwb3MsCgkJCQkJCSAgSFRfQ0FQVFlQRV9NU0lfTUFQUElORyk7Cgl9CgoJcmV0
dXJuIGZvdW5kOwp9CgpzdGF0aWMgaW50IGhvc3RfYnJpZGdlX3dpdGhfbGVhZihzdHJ1Y3QgcGNp
X2RldiAqaG9zdF9icmlkZ2UpCnsKCXN0cnVjdCBwY2lfZGV2ICpkZXY7CglpbnQgcG9zOwoJaW50
IGksIGRldl9ubzsKCWludCBmb3VuZCA9IDA7CgoJZGV2X25vID0gaG9zdF9icmlkZ2UtPmRldmZu
ID4+IDM7Cglmb3IgKGkgPSBkZXZfbm8gKyAxOyBpIDwgMHgyMDsgaSsrKSB7CgkJZGV2ID0gcGNp
X2dldF9zbG90KGhvc3RfYnJpZGdlLT5idXMsIFBDSV9ERVZGTihpLCAwKSk7CgkJaWYgKCFkZXYp
CgkJCWNvbnRpbnVlOwoKCQkvKiBmb3VuZCBuZXh0IGhvc3QgYnJpZGdlPyAqLwoJCXBvcyA9IHBj
aV9maW5kX2h0X2NhcGFiaWxpdHkoZGV2LCBIVF9DQVBUWVBFX1NMQVZFKTsKCQlpZiAocG9zICE9
IDApIHsKCQkJcGNpX2Rldl9wdXQoZGV2KTsKCQkJYnJlYWs7CgkJfQoKCQlpZiAoaHRfY2hlY2tf
bXNpX21hcHBpbmcoZGV2KSkgewoJCQlmb3VuZCA9IDE7CgkJCXBjaV9kZXZfcHV0KGRldik7CgkJ
CWJyZWFrOwoJCX0KCQlwY2lfZGV2X3B1dChkZXYpOwoJfQoKCXJldHVybiBmb3VuZDsKfQoKI2Rl
ZmluZSBQQ0lfSFRfQ0FQX1NMQVZFX0NUUkwwICAgICA0ICAgIC8qIGxpbmsgY29udHJvbCAqLwoj
ZGVmaW5lIFBDSV9IVF9DQVBfU0xBVkVfQ1RSTDEgICAgIDggICAgLyogbGluayBjb250cm9sIHRv
ICovCgpzdGF0aWMgaW50IGlzX2VuZF9vZl9odF9jaGFpbihzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7
CglpbnQgcG9zLCBjdHJsX29mZjsKCWludCBlbmQgPSAwOwoJdTE2IGZsYWdzLCBjdHJsOwoKCXBv
cyA9IHBjaV9maW5kX2h0X2NhcGFiaWxpdHkoZGV2LCBIVF9DQVBUWVBFX1NMQVZFKTsKCglpZiAo
IXBvcykKCQlnb3RvIG91dDsKCglwY2lfcmVhZF9jb25maWdfd29yZChkZXYsIHBvcyArIFBDSV9D
QVBfRkxBR1MsICZmbGFncyk7CgoJY3RybF9vZmYgPSAoKGZsYWdzID4+IDEwKSAmIDEpID8KCQkJ
UENJX0hUX0NBUF9TTEFWRV9DVFJMMCA6IFBDSV9IVF9DQVBfU0xBVkVfQ1RSTDE7CglwY2lfcmVh
ZF9jb25maWdfd29yZChkZXYsIHBvcyArIGN0cmxfb2ZmLCAmY3RybCk7CgoJaWYgKGN0cmwgJiAo
MSA8PCA2KSkKCQllbmQgPSAxOwoKb3V0OgoJcmV0dXJuIGVuZDsKfQoKc3RhdGljIHZvaWQgbnZf
aHRfZW5hYmxlX21zaV9tYXBwaW5nKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXN0cnVjdCBwY2lf
ZGV2ICpob3N0X2JyaWRnZTsKCWludCBwb3M7CglpbnQgaSwgZGV2X25vOwoJaW50IGZvdW5kID0g
MDsKCglkZXZfbm8gPSBkZXYtPmRldmZuID4+IDM7Cglmb3IgKGkgPSBkZXZfbm87IGkgPj0gMDsg
aS0tKSB7CgkJaG9zdF9icmlkZ2UgPSBwY2lfZ2V0X3Nsb3QoZGV2LT5idXMsIFBDSV9ERVZGTihp
LCAwKSk7CgkJaWYgKCFob3N0X2JyaWRnZSkKCQkJY29udGludWU7CgoJCXBvcyA9IHBjaV9maW5k
X2h0X2NhcGFiaWxpdHkoaG9zdF9icmlkZ2UsIEhUX0NBUFRZUEVfU0xBVkUpOwoJCWlmIChwb3Mg
IT0gMCkgewoJCQlmb3VuZCA9IDE7CgkJCWJyZWFrOwoJCX0KCQlwY2lfZGV2X3B1dChob3N0X2Jy
aWRnZSk7Cgl9CgoJaWYgKCFmb3VuZCkKCQlyZXR1cm47CgoJLyogZG9uJ3QgZW5hYmxlIGVuZF9k
ZXZpY2UvaG9zdF9icmlkZ2Ugd2l0aCBsZWFmIGRpcmVjdGx5IGhlcmUgKi8KCWlmIChob3N0X2Jy
aWRnZSA9PSBkZXYgJiYgaXNfZW5kX29mX2h0X2NoYWluKGhvc3RfYnJpZGdlKSAmJgoJICAgIGhv
c3RfYnJpZGdlX3dpdGhfbGVhZihob3N0X2JyaWRnZSkpCgkJZ290byBvdXQ7CgoJLyogcm9vdCBk
aWQgdGhhdCAhICovCglpZiAobXNpX2h0X2NhcF9lbmFibGVkKGhvc3RfYnJpZGdlKSkKCQlnb3Rv
IG91dDsKCglodF9lbmFibGVfbXNpX21hcHBpbmcoZGV2KTsKCm91dDoKCXBjaV9kZXZfcHV0KGhv
c3RfYnJpZGdlKTsKfQoKc3RhdGljIHZvaWQgaHRfZGlzYWJsZV9tc2lfbWFwcGluZyhzdHJ1Y3Qg
cGNpX2RldiAqZGV2KQp7CglpbnQgcG9zLCB0dGwgPSBQQ0lfRklORF9DQVBfVFRMOwoKCXBvcyA9
IHBjaV9maW5kX2h0X2NhcGFiaWxpdHkoZGV2LCBIVF9DQVBUWVBFX01TSV9NQVBQSU5HKTsKCXdo
aWxlIChwb3MgJiYgdHRsLS0pIHsKCQl1OCBmbGFnczsKCgkJaWYgKHBjaV9yZWFkX2NvbmZpZ19i
eXRlKGRldiwgcG9zICsgSFRfTVNJX0ZMQUdTLAoJCQkJCSAmZmxhZ3MpID09IDApIHsKCQkJcGNp
X2luZm8oZGV2LCAiRGlzYWJsaW5nIEhUIE1TSSBNYXBwaW5nXG4iKTsKCgkJCXBjaV93cml0ZV9j
b25maWdfYnl0ZShkZXYsIHBvcyArIEhUX01TSV9GTEFHUywKCQkJCQkgICAgICBmbGFncyAmIH5I
VF9NU0lfRkxBR1NfRU5BQkxFKTsKCQl9CgkJcG9zID0gcGNpX2ZpbmRfbmV4dF9odF9jYXBhYmls
aXR5KGRldiwgcG9zLAoJCQkJCQkgIEhUX0NBUFRZUEVfTVNJX01BUFBJTkcpOwoJfQp9CgpzdGF0
aWMgdm9pZCBfX252X21zaV9odF9jYXBfcXVpcmsoc3RydWN0IHBjaV9kZXYgKmRldiwgaW50IGFs
bCkKewoJc3RydWN0IHBjaV9kZXYgKmhvc3RfYnJpZGdlOwoJaW50IHBvczsKCWludCBmb3VuZDsK
CglpZiAoIXBjaV9tc2lfZW5hYmxlZCgpKQoJCXJldHVybjsKCgkvKiBjaGVjayBpZiB0aGVyZSBp
cyBIVCBNU0kgY2FwIG9yIGVuYWJsZWQgb24gdGhpcyBkZXZpY2UgKi8KCWZvdW5kID0gaHRfY2hl
Y2tfbXNpX21hcHBpbmcoZGV2KTsKCgkvKiBubyBIVCBNU0kgQ0FQICovCglpZiAoZm91bmQgPT0g
MCkKCQlyZXR1cm47CgoJLyoKCSAqIEhUIE1TSSBtYXBwaW5nIHNob3VsZCBiZSBkaXNhYmxlZCBv
biBkZXZpY2VzIHRoYXQgYXJlIGJlbG93CgkgKiBhIG5vbi1IeXBlcnRyYW5zcG9ydCBob3N0IGJy
aWRnZS4gTG9jYXRlIHRoZSBob3N0IGJyaWRnZS4uLgoJICovCglob3N0X2JyaWRnZSA9IHBjaV9n
ZXRfZG9tYWluX2J1c19hbmRfc2xvdChwY2lfZG9tYWluX25yKGRldi0+YnVzKSwgMCwKCQkJCQkJ
ICBQQ0lfREVWRk4oMCwgMCkpOwoJaWYgKGhvc3RfYnJpZGdlID09IE5VTEwpIHsKCQlwY2lfd2Fy
bihkZXYsICJudl9tc2lfaHRfY2FwX3F1aXJrIGRpZG4ndCBsb2NhdGUgaG9zdCBicmlkZ2VcbiIp
OwoJCXJldHVybjsKCX0KCglwb3MgPSBwY2lfZmluZF9odF9jYXBhYmlsaXR5KGhvc3RfYnJpZGdl
LCBIVF9DQVBUWVBFX1NMQVZFKTsKCWlmIChwb3MgIT0gMCkgewoJCS8qIEhvc3QgYnJpZGdlIGlz
IHRvIEhUICovCgkJaWYgKGZvdW5kID09IDEpIHsKCQkJLyogaXQgaXMgbm90IGVuYWJsZWQsIHRy
eSB0byBlbmFibGUgaXQgKi8KCQkJaWYgKGFsbCkKCQkJCWh0X2VuYWJsZV9tc2lfbWFwcGluZyhk
ZXYpOwoJCQllbHNlCgkJCQludl9odF9lbmFibGVfbXNpX21hcHBpbmcoZGV2KTsKCQl9CgkJZ290
byBvdXQ7Cgl9CgoJLyogSFQgTVNJIGlzIG5vdCBlbmFibGVkICovCglpZiAoZm91bmQgPT0gMSkK
CQlnb3RvIG91dDsKCgkvKiBIb3N0IGJyaWRnZSBpcyBub3QgdG8gSFQsIGRpc2FibGUgSFQgTVNJ
IG1hcHBpbmcgb24gdGhpcyBkZXZpY2UgKi8KCWh0X2Rpc2FibGVfbXNpX21hcHBpbmcoZGV2KTsK
Cm91dDoKCXBjaV9kZXZfcHV0KGhvc3RfYnJpZGdlKTsKfQoKc3RhdGljIHZvaWQgbnZfbXNpX2h0
X2NhcF9xdWlya19hbGwoc3RydWN0IHBjaV9kZXYgKmRldikKewoJcmV0dXJuIF9fbnZfbXNpX2h0
X2NhcF9xdWlyayhkZXYsIDEpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfQUwsIFBDSV9BTllfSUQsIG52X21zaV9odF9jYXBfcXVpcmtfYWxsKTsKREVDTEFSRV9QQ0lf
RklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfQUwsIFBDSV9BTllfSUQsIG52X21zaV9o
dF9jYXBfcXVpcmtfYWxsKTsKCnN0YXRpYyB2b2lkIG52X21zaV9odF9jYXBfcXVpcmtfbGVhZihz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglyZXR1cm4gX19udl9tc2lfaHRfY2FwX3F1aXJrKGRldiwg
MCk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9OVklESUEsIFBDSV9B
TllfSUQsIG52X21zaV9odF9jYXBfcXVpcmtfbGVhZik7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VN
RV9FQVJMWShQQ0lfVkVORE9SX0lEX05WSURJQSwgUENJX0FOWV9JRCwgbnZfbXNpX2h0X2NhcF9x
dWlya19sZWFmKTsKCnN0YXRpYyB2b2lkIHF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKHN0cnVj
dCBwY2lfZGV2ICpkZXYpCnsKCWRldi0+ZGV2X2ZsYWdzIHw9IFBDSV9ERVZfRkxBR1NfTVNJX0lO
VFhfRElTQUJMRV9CVUc7Cn0KCnN0YXRpYyB2b2lkIHF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYXRp
X2J1ZyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglzdHJ1Y3QgcGNpX2RldiAqcDsKCgkvKgoJICog
U0I3MDAgTVNJIGlzc3VlIHdpbGwgYmUgZml4ZWQgYXQgSFcgbGV2ZWwgZnJvbSByZXZpc2lvbiBB
MjE7CgkgKiB3ZSBuZWVkIGNoZWNrIFBDSSBSRVZJU0lPTiBJRCBvZiBTTUJ1cyBjb250cm9sbGVy
IHRvIGdldCBTQjcwMAoJICogcmV2aXNpb24uCgkgKi8KCXAgPSBwY2lfZ2V0X2RldmljZShQQ0lf
VkVORE9SX0lEX0FUSSwgUENJX0RFVklDRV9JRF9BVElfU0JYMDBfU01CVVMsCgkJCSAgIE5VTEwp
OwoJaWYgKCFwKQoJCXJldHVybjsKCglpZiAoKHAtPnJldmlzaW9uIDwgMHgzQikgJiYgKHAtPnJl
dmlzaW9uID49IDB4MzApKQoJCWRldi0+ZGV2X2ZsYWdzIHw9IFBDSV9ERVZfRkxBR1NfTVNJX0lO
VFhfRElTQUJMRV9CVUc7CglwY2lfZGV2X3B1dChwKTsKfQoKc3RhdGljIHZvaWQgcXVpcmtfbXNp
X2ludHhfZGlzYWJsZV9xY2FfYnVnKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCS8qIEFSODE2WC9B
UjgxN1gvRTIxMFggTVNJIGlzIGZpeGVkIGF0IEhXIGxldmVsIGZyb20gcmV2aXNpb24gMHgxOCAq
LwoJaWYgKGRldi0+cmV2aXNpb24gPCAweDE4KSB7CgkJcGNpX2luZm8oZGV2LCAic2V0IE1TSV9J
TlRYX0RJU0FCTEVfQlVHIGZsYWdcbiIpOwoJCWRldi0+ZGV2X2ZsYWdzIHw9IFBDSV9ERVZfRkxB
R1NfTVNJX0lOVFhfRElTQUJMRV9CVUc7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJ
X1ZFTkRPUl9JRF9CUk9BRENPTSwKCQkJUENJX0RFVklDRV9JRF9USUdPTjNfNTc4MCwKCQkJcXVp
cmtfbXNpX2ludHhfZGlzYWJsZV9idWcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0JST0FEQ09NLAoJCQlQQ0lfREVWSUNFX0lEX1RJR09OM181NzgwUywKCQkJcXVpcmtf
bXNpX2ludHhfZGlzYWJsZV9idWcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9S
X0lEX0JST0FEQ09NLAoJCQlQQ0lfREVWSUNFX0lEX1RJR09OM181NzE0LAoJCQlxdWlya19tc2lf
aW50eF9kaXNhYmxlX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURf
QlJPQURDT00sCgkJCVBDSV9ERVZJQ0VfSURfVElHT04zXzU3MTRTLAoJCQlxdWlya19tc2lfaW50
eF9kaXNhYmxlX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQlJP
QURDT00sCgkJCVBDSV9ERVZJQ0VfSURfVElHT04zXzU3MTUsCgkJCXF1aXJrX21zaV9pbnR4X2Rp
c2FibGVfYnVnKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9CUk9BRENP
TSwKCQkJUENJX0RFVklDRV9JRF9USUdPTjNfNTcxNVMsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2Fi
bGVfYnVnKTsKCkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLCAweDQz
OTAsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYXRpX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLCAweDQzOTEsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2Fi
bGVfYXRpX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLCAw
eDQzOTIsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYXRpX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLCAweDQzOTMsCgkJCXF1aXJrX21zaV9pbnR4X2Rp
c2FibGVfYXRpX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJ
LCAweDQzOTQsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYXRpX2J1Zyk7CgpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUSSwgMHg0MzczLAoJCQlxdWlya19tc2lfaW50
eF9kaXNhYmxlX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJ
LCAweDQzNzQsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKTsKREVDTEFSRV9QQ0lfRklY
VVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM3NSwKCQkJcXVpcmtfbXNpX2ludHhfZGlz
YWJsZV9idWcpOwoKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVFRBTlNJ
QywgMHgxMDYyLAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRUQU5TSUMsIDB4MTA2MywKCQkJcXVpcmtfbXNpX2lu
dHhfZGlzYWJsZV9idWcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FU
VEFOU0lDLCAweDIwNjAsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKTsKREVDTEFSRV9Q
Q0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVFRBTlNJQywgMHgyMDYyLAoJCQlxdWlya19t
c2lfaW50eF9kaXNhYmxlX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfQVRUQU5TSUMsIDB4MTA3MywKCQkJcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9idWcpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUVEFOU0lDLCAweDEwODMsCgkJCXF1
aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZF
TkRPUl9JRF9BVFRBTlNJQywgMHgxMDkwLAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX3FjYV9i
dWcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUVEFOU0lDLCAweDEw
OTEsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfcWNhX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRUQU5TSUMsIDB4MTBhMCwKCQkJcXVpcmtfbXNpX2ludHhf
ZGlzYWJsZV9xY2FfYnVnKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9B
VFRBTlNJQywgMHgxMGExLAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX3FjYV9idWcpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUVEFOU0lDLCAweGUwOTEsCgkJCXF1
aXJrX21zaV9pbnR4X2Rpc2FibGVfcWNhX2J1Zyk7CgovKgogKiBBbWF6b24ncyBBbm5hcHVybmEg
TGFicyAxYzM2OjAwMzEgUm9vdCBQb3J0cyBkb24ndCBzdXBwb3J0IE1TSS1YLCBzbyBpdAogKiBz
aG91bGQgYmUgZGlzYWJsZWQgb24gcGxhdGZvcm1zIHdoZXJlIHRoZSBkZXZpY2UgKG1pc3Rha2Vu
bHkpIGFkdmVydGlzZXMgaXQuCiAqCiAqIE5vdGljZSB0aGF0IHRoaXMgcXVpcmsgYWxzbyBkaXNh
YmxlcyBNU0kgKHdoaWNoIG1heSB3b3JrLCBidXQgaGFzbid0IGJlZW4KICogdGVzdGVkKSwgc2lu
Y2UgY3VycmVudGx5IHRoZXJlIGlzIG5vIHN0YW5kYXJkIHdheSB0byBkaXNhYmxlIG9ubHkgTVNJ
LVguCiAqCiAqIFRoZSAwMDMxIGRldmljZSBpZCBpcyByZXVzZWQgZm9yIG90aGVyIG5vbiBSb290
IFBvcnQgZGV2aWNlIHR5cGVzLAogKiB0aGVyZWZvcmUgdGhlIHF1aXJrIGlzIHJlZ2lzdGVyZWQg
Zm9yIHRoZSBQQ0lfQ0xBU1NfQlJJREdFX1BDSSBjbGFzcy4KICovCnN0YXRpYyB2b2lkIHF1aXJr
X2FsX21zaV9kaXNhYmxlKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWRldi0+bm9fbXNpID0gMTsK
CXBjaV93YXJuKGRldiwgIkRpc2FibGluZyBNU0kvTVNJLVhcbiIpOwp9CkRFQ0xBUkVfUENJX0ZJ
WFVQX0NMQVNTX0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1BWk9OX0FOTkFQVVJOQV9MQUJTLCAweDAw
MzEsCgkJCSAgICAgIFBDSV9DTEFTU19CUklER0VfUENJLCA4LCBxdWlya19hbF9tc2lfZGlzYWJs
ZSk7CiNlbmRpZiAvKiBDT05GSUdfUENJX01TSSAqLwoKLyoKICogQWxsb3cgbWFudWFsIHJlc291
cmNlIGFsbG9jYXRpb24gZm9yIFBDSSBob3RwbHVnIGJyaWRnZXMgdmlhCiAqIHBjaT1ocG1lbXNp
emU9bm5NIGFuZCBwY2k9aHBpb3NpemU9bm5NIHBhcmFtZXRlcnMuIEZvciBzb21lIFBDSS1QQ0kK
ICogaG90cGx1ZyBicmlkZ2VzLCBsaWtlIFBMWCA2MjU0IChmb3JtZXIgSElOVCBIQjYpLCBrZXJu
ZWwgZmFpbHMgdG8KICogYWxsb2NhdGUgcmVzb3VyY2VzIHdoZW4gaG90cGx1ZyBkZXZpY2UgaXMg
aW5zZXJ0ZWQgYW5kIFBDSSBidXMgaXMKICogcmVzY2FubmVkLgogKi8Kc3RhdGljIHZvaWQgcXVp
cmtfaG90cGx1Z19icmlkZ2Uoc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2LT5pc19ob3RwbHVn
X2JyaWRnZSA9IDE7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSElO
VCwgMHgwMDIwLCBxdWlya19ob3RwbHVnX2JyaWRnZSk7CgovKgogKiBUaGlzIGlzIGEgcXVpcmsg
Zm9yIHRoZSBSaWNvaCBNTUMgY29udHJvbGxlciBmb3VuZCBhcyBhIHBhcnQgb2Ygc29tZQogKiBt
dWx0aWZ1bmN0aW9uIGNoaXBzLgogKgogKiBUaGlzIGlzIHZlcnkgc2ltaWxhciBhbmQgYmFzZWQg
b24gdGhlIHJpY29oX21tYyBkcml2ZXIgd3JpdHRlbiBieQogKiBQaGlsaXAgTGFuZ2RhbGUuIFRo
YW5rIHlvdSBmb3IgdGhlc2UgbWFnaWMgc2VxdWVuY2VzLgogKgogKiBUaGVzZSBjaGlwcyBpbXBs
ZW1lbnQgdGhlIGZvdXIgbWFpbiBtZW1vcnkgY2FyZCBjb250cm9sbGVycyAoU0QsIE1NQywKICog
TVMsIHhEKSBhbmQgb25lIG9yIGJvdGggb2YgQ2FyZEJ1cyBvciBGaXJlV2lyZS4KICoKICogSXQg
aGFwcGVucyB0aGF0IHRoZXkgaW1wbGVtZW50IFNEIGFuZCBNTUMgc3VwcG9ydCBhcyBzZXBhcmF0
ZQogKiBjb250cm9sbGVycyAoYW5kIFBDSSBmdW5jdGlvbnMpLiBUaGUgTGludXggU0RIQ0kgZHJp
dmVyIHN1cHBvcnRzIE1NQwogKiBjYXJkcyBidXQgdGhlIGNoaXAgZGV0ZWN0cyBNTUMgY2FyZHMg
aW4gaGFyZHdhcmUgYW5kIGRpcmVjdHMgdGhlbSB0byB0aGUKICogTU1DIGNvbnRyb2xsZXIgLSBz
byB0aGUgU0RIQ0kgZHJpdmVyIG5ldmVyIHNlZXMgdGhlbS4KICoKICogVG8gZ2V0IGFyb3VuZCB0
aGlzLCB3ZSBtdXN0IGRpc2FibGUgdGhlIHVzZWxlc3MgTU1DIGNvbnRyb2xsZXIuICBBdCB0aGF0
CiAqIHBvaW50LCB0aGUgU0RIQ0kgY29udHJvbGxlciB3aWxsIHN0YXJ0IHNlZWluZyB0aGVtLiAg
SXQgc2VlbXMgdG8gYmUgdGhlCiAqIGNhc2UgdGhhdCB0aGUgcmVsZXZhbnQgUENJIHJlZ2lzdGVy
cyB0byBkZWFjdGl2YXRlIHRoZSBNTUMgY29udHJvbGxlcgogKiBsaXZlIG9uIFBDSSBmdW5jdGlv
biAwLCB3aGljaCBtaWdodCBiZSB0aGUgQ2FyZEJ1cyBjb250cm9sbGVyIG9yIHRoZQogKiBGaXJl
V2lyZSBjb250cm9sbGVyLCBkZXBlbmRpbmcgb24gdGhlIHBhcnRpY3VsYXIgY2hpcCBpbiBxdWVz
dGlvbgogKgogKiBUaGlzIGhhcyB0byBiZSBkb25lIGVhcmx5LCBiZWNhdXNlIGFzIHNvb24gYXMg
d2UgZGlzYWJsZSB0aGUgTU1DIGNvbnRyb2xsZXIKICogb3RoZXIgUENJIGZ1bmN0aW9ucyBzaGlm
dCB1cCBvbmUgbGV2ZWwsIGUuZy4gZnVuY3Rpb24gIzIgYmVjb21lcyBmdW5jdGlvbgogKiAjMSwg
YW5kIHRoaXMgd2lsbCBjb25mdXNlIHRoZSBQQ0kgY29yZS4KICovCiNpZmRlZiBDT05GSUdfTU1D
X1JJQ09IX01NQwotc3RhdGljIHZvaWQgcmljb2hfbW1jX2ZpeHVwX3JsNWM0NzYoc3RydWN0IHBj
aV9kZXYgKmRldikKLXsKLSAgICAgICB1OCB3cml0ZV9lbmFibGU7Ci0gICAgICAgdTggd3JpdGVf
dGFyZ2V0OwotICAgICAgIHU4IGRpc2FibGU7Ci0KLSAgICAgICAvKgotICAgICAgICAqIERpc2Fi
bGUgdmlhIENhcmRCdXMgaW50ZXJmYWNlCi0gICAgICAgICoKLSAgICAgICAgKiBUaGlzIG11c3Qg
YmUgZG9uZSB2aWEgZnVuY3Rpb24gIzAKLSAgICAgICAgKi8KLSAgICAgICBpZiAoUENJX0ZVTkMo
ZGV2LT5kZXZmbikpCi0gICAgICAgICAgICAgICByZXR1cm47Ci0KLSAgICAgICBwY2lfcmVhZF9j
b25maWdfYnl0ZShkZXYsIDB4QjcsICZkaXNhYmxlKTsKLSAgICAgICBpZiAoZGlzYWJsZSAmIDB4
MDIpCi0gICAgICAgICAgICAgICByZXR1cm47Ci0KLSAgICAgICBwY2lfcmVhZF9jb25maWdfYnl0
ZShkZXYsIDB4OEUsICZ3cml0ZV9lbmFibGUpOwotICAgICAgIHBjaV93cml0ZV9jb25maWdfYnl0
ZShkZXYsIDB4OEUsIDB4QUEpOwotICAgICAgIHBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgMHg4
RCwgJndyaXRlX3RhcmdldCk7Ci0gICAgICAgcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHg4
RCwgMHhCNyk7Ci0gICAgICAgcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHhCNywgZGlzYWJs
ZSB8IDB4MDIpOwotICAgICAgIHBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4OEUsIHdyaXRl
X2VuYWJsZSk7Ci0gICAgICAgcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHg4RCwgd3JpdGVf
dGFyZ2V0KTsKLQotICAgICAgIHBjaV9ub3RpY2UoZGV2LCAicHJvcHJpZXRhcnkgUmljb2ggTU1D
IGNvbnRyb2xsZXIgZGlzYWJsZWQgKHZpYSBDYXJkQnVzIGZ1bmN0aW9uKVxuIik7Ci0gICAgICAg
cGNpX25vdGljZShkZXYsICJNTUMgY2FyZHMgYXJlIG5vdyBzdXBwb3J0ZWQgYnkgc3RhbmRhcmQg
U0RIQ0kgY29udHJvbGxlclxuIik7Ci19Ci1ERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVO
RE9SX0lEX1JJQ09ILCBQQ0lfREVWSUNFX0lEX1JJQ09IX1JMNUM0NzYsIHJpY29oX21tY19maXh1
cF9ybDVjNDc2KTsKLURFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lE
X1JJQ09ILCBQQ0lfREVWSUNFX0lEX1JJQ09IX1JMNUM0NzYsIHJpY29oX21tY19maXh1cF9ybDVj
NDc2KTsKLQogc3RhdGljIHZvaWQgcmljb2hfbW1jX2ZpeHVwX3I1YzgzMihzdHJ1Y3QgcGNpX2Rl
diAqZGV2KQogewogICAgICAgIHU4IHdyaXRlX2VuYWJsZTsKCgkvKgoJICogRGlzYWJsZSB2aWEg
RmlyZVdpcmUgaW50ZXJmYWNlCgkgKgoJICogVGhpcyBtdXN0IGJlIGRvbmUgdmlhIGZ1bmN0aW9u
ICMwCgkgKi8KCWlmIChQQ0lfRlVOQyhkZXYtPmRldmZuKSkKCQlyZXR1cm47CgkvKgoJICogUklD
T0ggMHhlODIyIGFuZCAweGU4MjMgU0QvTU1DIGNhcmQgcmVhZGVycyBmYWlsIHRvIHJlY29nbml6
ZQoJICogY2VydGFpbiB0eXBlcyBvZiBTRC9NTUMgY2FyZHMuIExvd2VyaW5nIHRoZSBTRCBiYXNl
IGNsb2NrCgkgKiBmcmVxdWVuY3kgZnJvbSAyMDBNaHogdG8gNTBNaHogZml4ZXMgdGhpcyBpc3N1
ZS4KCSAqCgkgKiAweDE1MCAtIFNEMi4wIG1vZGUgZW5hYmxlIGZvciBjaGFuZ2luZyBiYXNlIGNs
b2NrCgkgKgkgICBmcmVxdWVuY3kgdG8gNTBNaHoKCSAqIDB4ZTEgIC0gQmFzZSBjbG9jayBmcmVx
dWVuY3kKCSAqIDB4MzIgIC0gNTBNaHogbmV3IGNsb2NrIGZyZXF1ZW5jeQoJICogMHhmOSAgLSBL
ZXkgcmVnaXN0ZXIgZm9yIDB4MTUwCgkgKiAweGZjICAtIGtleSByZWdpc3RlciBmb3IgMHhlMQoJ
ICovCglpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9SSUNPSF9SNUNFODIyIHx8Cgkg
ICAgZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9SSUNPSF9SNUNFODIzKSB7CgkJcGNpX3dy
aXRlX2NvbmZpZ19ieXRlKGRldiwgMHhmOSwgMHhmYyk7CgkJcGNpX3dyaXRlX2NvbmZpZ19ieXRl
KGRldiwgMHgxNTAsIDB4MTApOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4ZjksIDB4
MDApOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4ZmMsIDB4MDEpOwoJCXBjaV93cml0
ZV9jb25maWdfYnl0ZShkZXYsIDB4ZTEsIDB4MzIpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShk
ZXYsIDB4ZmMsIDB4MDApOwoKCQlwY2lfbm90aWNlKGRldiwgIk1NQyBjb250cm9sbGVyIGJhc2Ug
ZnJlcXVlbmN5IGNoYW5nZWQgdG8gNTBNaHouXG4iKTsKCX0KCglwY2lfcmVhZF9jb25maWdfYnl0
ZShkZXYsIDB4Q0IsICZkaXNhYmxlKTsKCglpZiAoZGlzYWJsZSAmIDB4MDIpCgkJcmV0dXJuOwoK
CXBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgMHhDQSwgJndyaXRlX2VuYWJsZSk7CglwY2lfd3Jp
dGVfY29uZmlnX2J5dGUoZGV2LCAweENBLCAweDU3KTsKCXBjaV93cml0ZV9jb25maWdfYnl0ZShk
ZXYsIDB4Q0IsIGRpc2FibGUgfCAweDAyKTsKCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4
Q0EsIHdyaXRlX2VuYWJsZSk7CgoJcGNpX25vdGljZShkZXYsICJwcm9wcmlldGFyeSBSaWNvaCBN
TUMgY29udHJvbGxlciBkaXNhYmxlZCAodmlhIEZpcmVXaXJlIGZ1bmN0aW9uKVxuIik7CglwY2lf
bm90aWNlKGRldiwgIk1NQyBjYXJkcyBhcmUgbm93IHN1cHBvcnRlZCBieSBzdGFuZGFyZCBTREhD
SSBjb250cm9sbGVyXG4iKTsKCn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9J
RF9SSUNPSCwgUENJX0RFVklDRV9JRF9SSUNPSF9SNUM4MzIsIHJpY29oX21tY19maXh1cF9yNWM4
MzIpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9SSUNPSCwg
UENJX0RFVklDRV9JRF9SSUNPSF9SNUM4MzIsIHJpY29oX21tY19maXh1cF9yNWM4MzIpOwpERUNM
QVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX1JJQ09ILCBQQ0lfREVWSUNFX0lEX1JJ
Q09IX1I1Q0U4MjIsIHJpY29oX21tY19maXh1cF9yNWM4MzIpOwpERUNMQVJFX1BDSV9GSVhVUF9S
RVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9SSUNPSCwgUENJX0RFVklDRV9JRF9SSUNPSF9SNUNF
ODIyLCByaWNvaF9tbWNfZml4dXBfcjVjODMyKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9SSUNPSCwgUENJX0RFVklDRV9JRF9SSUNPSF9SNUNFODIzLCByaWNvaF9tbWNf
Zml4dXBfcjVjODMyKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1Jf
SURfUklDT0gsIFBDSV9ERVZJQ0VfSURfUklDT0hfUjVDRTgyMywgcmljb2hfbW1jX2ZpeHVwX3I1
YzgzMik7CiNlbmRpZiAvKkNPTkZJR19NTUNfUklDT0hfTU1DKi8KCiNpZmRlZiBDT05GSUdfRE1B
Ul9UQUJMRQojZGVmaW5lIFZUVU5DRVJSTVNLX1JFRwkweDFhYwojZGVmaW5lIFZURF9NU0tfU1BF
Q19FUlJPUlMJKDEgPDwgMzEpCi8qCiAqIFRoaXMgaXMgYSBxdWlyayBmb3IgbWFza2luZyBWVC1k
IHNwZWMtZGVmaW5lZCBlcnJvcnMgdG8gcGxhdGZvcm0gZXJyb3IKICogaGFuZGxpbmcgbG9naWMu
IFdpdGhvdXQgdGhpcywgcGxhdGZvcm1zIHVzaW5nIEludGVsIDc1MDAsIDU1MDAgY2hpcHNldHMK
ICogKGFuZCB0aGUgZGVyaXZhdGl2ZSBjaGlwc2V0cyBsaWtlIFg1OCBldGMpIHNlZW0gdG8gZ2Vu
ZXJhdGUgTk1JL1NNSSAoYmFzZWQKICogb24gdGhlIFJBUyBjb25maWcgc2V0dGluZ3Mgb2YgdGhl
IHBsYXRmb3JtKSB3aGVuIGEgVlQtZCBmYXVsdCBoYXBwZW5zLgogKiBUaGUgcmVzdWx0aW5nIFNN
SSBjYXVzZWQgdGhlIHN5c3RlbSB0byBoYW5nLgogKgogKiBWVC1kIHNwZWMtcmVsYXRlZCBlcnJv
cnMgYXJlIGFscmVhZHkgaGFuZGxlZCBieSB0aGUgVlQtZCBPUyBjb2RlLCBzbyBubwogKiBuZWVk
IHRvIHJlcG9ydCB0aGUgc2FtZSBlcnJvciB0aHJvdWdoIG90aGVyIGNoYW5uZWxzLgogKi8Kc3Rh
dGljIHZvaWQgdnRkX21hc2tfc3BlY19lcnJvcnMoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTMy
IHdvcmQ7CgoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKGRldiwgVlRVTkNFUlJNU0tfUkVHLCAmd29y
ZCk7CglwY2lfd3JpdGVfY29uZmlnX2R3b3JkKGRldiwgVlRVTkNFUlJNU0tfUkVHLCB3b3JkIHwg
VlREX01TS19TUEVDX0VSUk9SUyk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgMHgzNDJlLCB2dGRfbWFza19zcGVjX2Vycm9ycyk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4M2MyOCwgdnRkX21hc2tfc3BlY19lcnJv
cnMpOwojZW5kaWYKCnN0YXRpYyB2b2lkIGZpeHVwX3RpODE2eF9jbGFzcyhzdHJ1Y3QgcGNpX2Rl
diAqZGV2KQp7Cgl1MzIgY2xhc3MgPSBkZXYtPmNsYXNzOwoKCS8qIFRJIDgxNnggZGV2aWNlcyBk
byBub3QgaGF2ZSBjbGFzcyBjb2RlIHNldCB3aGVuIGluIFBDSWUgYm9vdCBtb2RlICovCglkZXYt
PmNsYXNzID0gUENJX0NMQVNTX01VTFRJTUVESUFfVklERU8gPDwgODsKCXBjaV9pbmZvKGRldiwg
IlBDSSBjbGFzcyBvdmVycmlkZGVuICglIzA4eCAtPiAlIzA4eClcbiIsCgkJIGNsYXNzLCBkZXYt
PmNsYXNzKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19FQVJMWShQQ0lfVkVORE9SX0lEX1RJ
LCAweGI4MDAsCgkJCSAgICAgIFBDSV9DTEFTU19OT1RfREVGSU5FRCwgOCwgZml4dXBfdGk4MTZ4
X2NsYXNzKTsKCi8qCiAqIFNvbWUgUENJZSBkZXZpY2VzIGRvIG5vdCB3b3JrIHJlbGlhYmx5IHdp
dGggdGhlIGNsYWltZWQgbWF4aW11bQogKiBwYXlsb2FkIHNpemUgc3VwcG9ydGVkLgogKi8Kc3Rh
dGljIHZvaWQgZml4dXBfbXBzc18yNTYoc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2LT5wY2ll
X21wc3MgPSAxOyAvKiAyNTYgYnl0ZXMgKi8KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJ
X1ZFTkRPUl9JRF9TT0xBUkZMQVJFLAoJCQkgUENJX0RFVklDRV9JRF9TT0xBUkZMQVJFX1NGQzQw
MDBBXzAsIGZpeHVwX21wc3NfMjU2KTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5E
T1JfSURfU09MQVJGTEFSRSwKCQkJIFBDSV9ERVZJQ0VfSURfU09MQVJGTEFSRV9TRkM0MDAwQV8x
LCBmaXh1cF9tcHNzXzI1Nik7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X1NPTEFSRkxBUkUsCgkJCSBQQ0lfREVWSUNFX0lEX1NPTEFSRkxBUkVfU0ZDNDAwMEIsIGZpeHVw
X21wc3NfMjU2KTsKCi8qCiAqIEludGVsIDUwMDAgYW5kIDUxMDAgTWVtb3J5IGNvbnRyb2xsZXJz
IGhhdmUgYW4gZXJyYXR1bSB3aXRoIHJlYWQgY29tcGxldGlvbgogKiBjb2FsZXNjaW5nICh3aGlj
aCBpcyBlbmFibGVkIGJ5IGRlZmF1bHQgb24gc29tZSBCSU9TZXMpIGFuZCBNUFMgb2YgMjU2Qi4K
ICogU2luY2UgdGhlcmUgaXMgbm8gd2F5IG9mIGtub3dpbmcgd2hhdCB0aGUgUENJZSBNUFMgb24g
ZWFjaCBmYWJyaWMgd2lsbCBiZQogKiB1bnRpbCBhbGwgb2YgdGhlIGRldmljZXMgYXJlIGRpc2Nv
dmVyZWQgYW5kIGJ1c2VzIHdhbGtlZCwgcmVhZCBjb21wbGV0aW9uCiAqIGNvYWxlc2NpbmcgbXVz
dCBiZSBkaXNhYmxlZC4gIFVuZm9ydHVuYXRlbHksIGl0IGNhbm5vdCBiZSByZS1lbmFibGVkIGJl
Y2F1c2UKICogaXQgaXMgcG9zc2libGUgdG8gaG90cGx1ZyBhIGRldmljZSB3aXRoIE1QUyBvZiAy
NTZCLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKHN0cnVjdCBwY2lfZGV2
ICpkZXYpCnsKCWludCBlcnI7Cgl1MTYgcmNjOwoKCWlmIChwY2llX2J1c19jb25maWcgPT0gUENJ
RV9CVVNfVFVORV9PRkYgfHwKCSAgICBwY2llX2J1c19jb25maWcgPT0gUENJRV9CVVNfREVGQVVM
VCkKCQlyZXR1cm47CgoJLyoKCSAqIEludGVsIGVycmF0dW0gc3BlY2lmaWVzIGJpdHMgdG8gY2hh
bmdlIGJ1dCBkb2VzIG5vdCBzYXkgd2hhdAoJICogdGhleSBhcmUuICBLZWVwaW5nIHRoZW0gbWFn
aWNhbCB1bnRpbCBzdWNoIHRpbWUgYXMgdGhlIHJlZ2lzdGVycwoJICogYW5kIHZhbHVlcyBjYW4g
YmUgZXhwbGFpbmVkLgoJICovCgllcnIgPSBwY2lfcmVhZF9jb25maWdfd29yZChkZXYsIDB4NDgs
ICZyY2MpOwoJaWYgKGVycikgewoJCXBjaV9lcnIoZGV2LCAiRXJyb3IgYXR0ZW1wdGluZyB0byBy
ZWFkIHRoZSByZWFkIGNvbXBsZXRpb24gY29hbGVzY2luZyByZWdpc3RlclxuIik7CgkJcmV0dXJu
OwoJfQoKCWlmICghKHJjYyAmICgxIDw8IDEwKSkpCgkJcmV0dXJuOwoKCXJjYyAmPSB+KDEgPDwg
MTApOwoKCWVyciA9IHBjaV93cml0ZV9jb25maWdfd29yZChkZXYsIDB4NDgsIHJjYyk7CglpZiAo
ZXJyKSB7CgkJcGNpX2VycihkZXYsICJFcnJvciBhdHRlbXB0aW5nIHRvIHdyaXRlIHRoZSByZWFk
IGNvbXBsZXRpb24gY29hbGVzY2luZyByZWdpc3RlclxuIik7CgkJcmV0dXJuOwoJfQoKCXByX2lu
Zm9fb25jZSgiUmVhZCBjb21wbGV0aW9uIGNvYWxlc2NpbmcgZGlzYWJsZWQgZHVlIHRvIGhhcmR3
YXJlIGVycmF0dW0gcmVsYXRpbmcgdG8gMjU2QiBNUFNcbiIpOwp9Ci8qIEludGVsIDUwMDAgc2Vy
aWVzIG1lbW9yeSBjb250cm9sbGVycyBhbmQgcG9ydHMgMi03ICovCkRFQ0xBUkVfUENJX0ZJWFVQ
X0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1YzAsIHF1aXJrX2ludGVsX21jX2VycmF0
YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1ZDAs
IHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVO
RE9SX0lEX0lOVEVMLCAweDI1ZDQsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1ZDgsIHF1aXJrX2ludGVsX21j
X2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAw
eDI1ZTIsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDI1ZTMsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1ZTQsIHF1aXJrX2lu
dGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lO
VEVMLCAweDI1ZTUsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1ZTYsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1ZTcsIHF1
aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX0lOVEVMLCAweDI1ZjcsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1ZjgsIHF1aXJrX2ludGVsX21jX2Vy
cmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDI1
ZjksIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDI1ZmEsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7Ci8qIEludGVs
IDUxMDAgc2VyaWVzIG1lbW9yeSBjb250cm9sbGVycyBhbmQgcG9ydHMgMi03ICovCkRFQ0xBUkVf
UENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDY1YzAsIHF1aXJrX2ludGVs
X21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVM
LCAweDY1ZTIsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURF
UihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDY1ZTMsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDY1ZTQsIHF1aXJr
X2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X0lOVEVMLCAweDY1ZTUsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDY1ZTYsIHF1aXJrX2ludGVsX21jX2VycmF0
YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDY1ZTcs
IHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVO
RE9SX0lEX0lOVEVMLCAweDY1ZjcsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDY1ZjgsIHF1aXJrX2ludGVsX21j
X2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAw
eDY1ZjksIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDY1ZmEsIHF1aXJrX2ludGVsX21jX2VycmF0YSk7CgovKgog
KiBJdnl0b3duIE5UQiBCQVIgc2l6ZXMgYXJlIG1pc3JlcG9ydGVkIGJ5IHRoZSBoYXJkd2FyZSBk
dWUgdG8gYW4gZXJyYXR1bS4KICogVG8gd29yayBhcm91bmQgdGhpcywgcXVlcnkgdGhlIHNpemUg
aXQgc2hvdWxkIGJlIGNvbmZpZ3VyZWQgdG8gYnkgdGhlCiAqIGRldmljZSBhbmQgbW9kaWZ5IHRo
ZSByZXNvdXJjZSBlbmQgdG8gY29ycmVzcG9uZCB0byB0aGlzIG5ldyBzaXplLgogKi8Kc3RhdGlj
IHZvaWQgcXVpcmtfaW50ZWxfbnRiKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWludCByYzsKCXU4
IHZhbDsKCglyYyA9IHBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgMHgwMEQwLCAmdmFsKTsKCWlm
IChyYykKCQlyZXR1cm47CgoJZGV2LT5yZXNvdXJjZVsyXS5lbmQgPSBkZXYtPnJlc291cmNlWzJd
LnN0YXJ0ICsgKCh1NjQpIDEgPDwgdmFsKSAtIDE7CgoJcmMgPSBwY2lfcmVhZF9jb25maWdfYnl0
ZShkZXYsIDB4MDBEMSwgJnZhbCk7CglpZiAocmMpCgkJcmV0dXJuOwoKCWRldi0+cmVzb3VyY2Vb
NF0uZW5kID0gZGV2LT5yZXNvdXJjZVs0XS5zdGFydCArICgodTY0KSAxIDw8IHZhbCkgLSAxOwp9
CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDBlMDgsIHF1
aXJrX2ludGVsX250Yik7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lO
VEVMLCAweDBlMGQsIHF1aXJrX2ludGVsX250Yik7CgovKgogKiBTb21lIEJJT1MgaW1wbGVtZW50
YXRpb25zIGxlYXZlIHRoZSBJbnRlbCBHUFUgaW50ZXJydXB0cyBlbmFibGVkLCBldmVuCiAqIHRo
b3VnaCBubyBvbmUgaXMgaGFuZGxpbmcgdGhlbSAoZS5nLiwgaWYgdGhlIGk5MTUgZHJpdmVyIGlz
IG5ldmVyCiAqIGxvYWRlZCkuICBBZGRpdGlvbmFsbHkgdGhlIGludGVycnVwdCBkZXN0aW5hdGlv
biBpcyBub3Qgc2V0IHVwIHByb3Blcmx5CiAqIGFuZCB0aGUgaW50ZXJydXB0IGVuZHMgdXAgLXNv
bWV3aGVyZS0uCiAqCiAqIFRoZXNlIHNwdXJpb3VzIGludGVycnVwdHMgYXJlICJzdGlja3kiIGFu
ZCB0aGUga2VybmVsIGRpc2FibGVzIHRoZQogKiAoc2hhcmVkKSBpbnRlcnJ1cHQgbGluZSBhZnRl
ciAxMDAsMDAwKyBnZW5lcmF0ZWQgaW50ZXJydXB0cy4KICoKICogRml4IGl0IGJ5IGRpc2FibGlu
ZyB0aGUgc3RpbGwgZW5hYmxlZCBpbnRlcnJ1cHRzLiAgVGhpcyByZXNvbHZlcyBjcmFzaGVzCiAq
IG9mdGVuIHNlZW4gb24gbW9uaXRvciB1bnBsdWcuCiAqLwojZGVmaW5lIEk5MTVfREVJRVJfUkVH
IDB4NDQwMGMKc3RhdGljIHZvaWQgZGlzYWJsZV9pZ2Z4X2lycShzdHJ1Y3QgcGNpX2RldiAqZGV2
KQp7Cgl2b2lkIF9faW9tZW0gKnJlZ3MgPSBwY2lfaW9tYXAoZGV2LCAwLCAwKTsKCWlmIChyZWdz
ID09IE5VTEwpIHsKCQlwY2lfd2FybihkZXYsICJpZ2Z4IHF1aXJrOiBDYW4ndCBpb21hcCBQQ0kg
ZGV2aWNlXG4iKTsKCQlyZXR1cm47Cgl9CgoJLyogQ2hlY2sgaWYgYW55IGludGVycnVwdCBsaW5l
IGlzIHN0aWxsIGVuYWJsZWQgKi8KCWlmIChyZWFkbChyZWdzICsgSTkxNV9ERUlFUl9SRUcpICE9
IDApIHsKCQlwY2lfd2FybihkZXYsICJCSU9TIGxlZnQgSW50ZWwgR1BVIGludGVycnVwdHMgZW5h
YmxlZDsgZGlzYWJsaW5nXG4iKTsKCgkJd3JpdGVsKDAsIHJlZ3MgKyBJOTE1X0RFSUVSX1JFRyk7
Cgl9CgoJcGNpX2lvdW5tYXAoZGV2LCByZWdzKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDAwNDIsIGRpc2FibGVfaWdmeF9pcnEpOwpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDAwNDYsIGRpc2FibGVfaWdmeF9p
cnEpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDAwNGEs
IGRpc2FibGVfaWdmeF9pcnEpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lE
X0lOVEVMLCAweDAxMDIsIGRpc2FibGVfaWdmeF9pcnEpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5B
TChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDAxMDYsIGRpc2FibGVfaWdmeF9pcnEpOwpERUNMQVJF
X1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDAxMGEsIGRpc2FibGVfaWdm
eF9pcnEpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDAx
NTIsIGRpc2FibGVfaWdmeF9pcnEpOwoKLyoKICogUENJIGRldmljZXMgd2hpY2ggYXJlIG9uIElu
dGVsIGNoaXBzIGNhbiBza2lwIHRoZSAxMG1zIGRlbGF5CiAqIGJlZm9yZSBlbnRlcmluZyBEMyBt
b2RlLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KHN0cnVjdCBwY2lfZGV2
ICpkZXYpCnsKCWRldi0+ZDNfZGVsYXkgPSAwOwp9Ci8qIEM2MDAgU2VyaWVzIGRldmljZXMgZG8g
bm90IG5lZWQgMTBtcyBkM19kZWxheSAqLwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0lOVEVMLCAweDA0MTIsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MGMwMCwgcXVpcmtfcmVtb3ZlX2Qz
X2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgw
YzBjLCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwovKiBMeW54cG9pbnQtSCBQQ0ggZGV2aWNlcyBk
byBub3QgbmVlZCAxMG1zIGQzX2RlbGF5ICovCkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4OGMwMiwgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFSRV9Q
Q0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzE4LCBxdWlya19yZW1vdmVf
ZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAw
eDhjMWMsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4OGMyMCwgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzIyLCBxdWlya19yZW1v
dmVfZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVM
LCAweDhjMjYsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfSU5URUwsIDB4OGMyZCwgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzMxLCBxdWlya19y
ZW1vdmVfZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lO
VEVMLCAweDhjM2EsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4OGMzZCwgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsK
REVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzRlLCBxdWly
a19yZW1vdmVfZDNfZGVsYXkpOwovKiBJbnRlbCBDaGVycnl0cmFpbCBkZXZpY2VzIGRvIG5vdCBu
ZWVkIDEwbXMgZDNfZGVsYXkgKi8KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9J
RF9JTlRFTCwgMHgyMjgwLCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9GSVhV
UF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDIyOTgsIHF1aXJrX3JlbW92ZV9kM19kZWxh
eSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjI5Yywg
cXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgMHgyMmIwLCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9G
SVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDIyYjUsIHF1aXJrX3JlbW92ZV9kM19k
ZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjJi
NywgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZF
TkRPUl9JRF9JTlRFTCwgMHgyMmI4LCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDIyZDgsIHF1aXJrX3JlbW92ZV9k
M19kZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MjJkYywgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKCi8qCiAqIFNvbWUgZGV2aWNlcyBtYXkgcGFz
cyBvdXIgY2hlY2sgaW4gcGNpX2ludHhfbWFza19zdXBwb3J0ZWQoKSBpZgogKiBQQ0lfQ09NTUFO
RF9JTlRYX0RJU0FCTEUgd29ya3MgdGhvdWdoIHRoZXkgYWN0dWFsbHkgZG8gbm90IHByb3Blcmx5
CiAqIHN1cHBvcnQgdGhpcyBmZWF0dXJlLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfYnJva2VuX2lu
dHhfbWFza2luZyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPmJyb2tlbl9pbnR4X21hc2tp
bmcgPSAxOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQ0hFTFNJTywg
MHgwMDMwLAoJCQlxdWlya19icm9rZW5faW50eF9tYXNraW5nKTsKREVDTEFSRV9QQ0lfRklYVVBf
RklOQUwoMHgxODE0LCAweDA2MDEsIC8qIFJhbGluayBSVDI4MDAgODAyLjExbiBQQ0kgKi8KCQkJ
cXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKDB4MWI3
YywgMHgwMDA0LCAvKiBDZXRvbiBJbmZpbmlUVjQgKi8KCQkJcXVpcmtfYnJva2VuX2ludHhfbWFz
a2luZyk7CgovKgogKiBSZWFsdGVrIFJUTDgxNjkgUENJIEdpZ2FiaXQgRXRoZXJuZXQgQ29udHJv
bGxlciAocmV2IDEwKQogKiBTdWJzeXN0ZW06IFJlYWx0ZWsgUlRMODE2OS84MTEwIEZhbWlseSBQ
Q0kgR2lnYWJpdCBFdGhlcm5ldCBOSUMKICoKICogUlRMODExMFNDIC0gRmFpbHMgdW5kZXIgUENJ
IGRldmljZSBhc3NpZ25tZW50IHVzaW5nIERpc0lOVHggbWFza2luZy4KICovCkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfUkVBTFRFSywgMHg4MTY5LAoJCQlxdWlya19icm9r
ZW5faW50eF9tYXNraW5nKTsKCi8qCiAqIEludGVsIGk0MGUgKFhMNzEwL1g3MTApIDEwLzIwLzQw
R2JFIE5JQ3MgYWxsIGhhdmUgYnJva2VuIElOVHggbWFza2luZywKICogRGlzSU5UeCBjYW4gYmUg
c2V0IGJ1dCB0aGUgaW50ZXJydXB0IHN0YXR1cyBiaXQgaXMgbm9uLWZ1bmN0aW9uYWwuCiAqLwpE
RUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1NzIsIHF1aXJr
X2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9S
X0lEX0lOVEVMLCAweDE1NzQsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1ODAsIHF1aXJrX2Jyb2tlbl9p
bnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVM
LCAweDE1ODEsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9G
SU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1ODMsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tp
bmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1ODQs
IHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDE1ODUsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1ODYsIHF1aXJrX2Jy
b2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lE
X0lOVEVMLCAweDE1ODcsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9G
SVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1ODgsIHF1aXJrX2Jyb2tlbl9pbnR4
X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAw
eDE1ODksIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5B
TChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1OGEsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcp
OwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1OGIsIHF1
aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0lOVEVMLCAweDM3ZDAsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJF
X1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDM3ZDEsIHF1aXJrX2Jyb2tl
bl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lO
VEVMLCAweDM3ZDIsIHF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwoKc3RhdGljIHUxNiBtZWxs
YW5veF9icm9rZW5faW50eF9kZXZzW10gPSB7CglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0hFUk1P
Tl9TRFIsCglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0hFUk1PTl9ERFIsCglQQ0lfREVWSUNFX0lE
X01FTExBTk9YX0hFUk1PTl9RRFIsCglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0hFUk1PTl9ERFJf
R0VOMiwKCVBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfSEVSTU9OX1FEUl9HRU4yLAoJUENJX0RFVklD
RV9JRF9NRUxMQU5PWF9IRVJNT05fRU4sCglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0hFUk1PTl9F
Tl9HRU4yLAoJUENJX0RFVklDRV9JRF9NRUxMQU5PWF9DT05ORUNUWF9FTiwKCVBDSV9ERVZJQ0Vf
SURfTUVMTEFOT1hfQ09OTkVDVFhfRU5fVF9HRU4yLAoJUENJX0RFVklDRV9JRF9NRUxMQU5PWF9D
T05ORUNUWF9FTl9HRU4yLAoJUENJX0RFVklDRV9JRF9NRUxMQU5PWF9DT05ORUNUWF9FTl81X0dF
TjIsCglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0NPTk5FQ1RYMiwKCVBDSV9ERVZJQ0VfSURfTUVM
TEFOT1hfQ09OTkVDVFgzLAoJUENJX0RFVklDRV9JRF9NRUxMQU5PWF9DT05ORUNUWDNfUFJPLAp9
OwoKI2RlZmluZSBDT05ORUNUWF80X0NVUlJfTUFYX01JTk9SIDk5CiNkZWZpbmUgQ09OTkVDVFhf
NF9JTlRYX1NVUFBPUlRfTUlOT1IgMTQKCi8qCiAqIENoZWNrIENvbm5lY3RYLTQvTFggRlcgdmVy
c2lvbiB0byBzZWUgaWYgaXQgc3VwcG9ydHMgbGVnYWN5IGludGVycnVwdHMuCiAqIElmIHNvLCBk
b24ndCBtYXJrIGl0IGFzIGJyb2tlbi4KICogRlcgbWlub3IgPiA5OSBtZWFucyBvbGRlciBGVyB2
ZXJzaW9uIGZvcm1hdCBhbmQgbm8gSU5UeCBtYXNraW5nIHN1cHBvcnQuCiAqIEZXIG1pbm9yIDwg
MTQgbWVhbnMgbmV3IEZXIHZlcnNpb24gZm9ybWF0IGFuZCBubyBJTlR4IG1hc2tpbmcgc3VwcG9y
dC4KICovCnN0YXRpYyB2b2lkIG1lbGxhbm94X2NoZWNrX2Jyb2tlbl9pbnR4X21hc2tpbmcoc3Ry
dWN0IHBjaV9kZXYgKnBkZXYpCnsKCV9fYmUzMiBfX2lvbWVtICpmd192ZXI7Cgl1MTYgZndfbWFq
b3I7Cgl1MTYgZndfbWlub3I7Cgl1MTYgZndfc3VibWlub3I7Cgl1MzIgZndfbWFqX21pbjsKCXUz
MiBmd19zdWJfbWluOwoJaW50IGk7CgoJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJWkUobWVsbGFu
b3hfYnJva2VuX2ludHhfZGV2cyk7IGkrKykgewoJCWlmIChwZGV2LT5kZXZpY2UgPT0gbWVsbGFu
b3hfYnJva2VuX2ludHhfZGV2c1tpXSkgewoJCQlwZGV2LT5icm9rZW5faW50eF9tYXNraW5nID0g
MTsKCQkJcmV0dXJuOwoJCX0KCX0KCgkvKgoJICogR2V0dGluZyBoZXJlIG1lYW5zIENvbm5lY3Qt
SUIgY2FyZHMgYW5kIHVwLiBDb25uZWN0LUlCIGhhcyBubyBJTlR4CgkgKiBzdXBwb3J0IHNvIHNo
b3VsZG4ndCBiZSBjaGVja2VkIGZ1cnRoZXIKCSAqLwoJaWYgKHBkZXYtPmRldmljZSA9PSBQQ0lf
REVWSUNFX0lEX01FTExBTk9YX0NPTk5FQ1RJQikKCQlyZXR1cm47CgoJaWYgKHBkZXYtPmRldmlj
ZSAhPSBQQ0lfREVWSUNFX0lEX01FTExBTk9YX0NPTk5FQ1RYNCAmJgoJICAgIHBkZXYtPmRldmlj
ZSAhPSBQQ0lfREVWSUNFX0lEX01FTExBTk9YX0NPTk5FQ1RYNF9MWCkKCQlyZXR1cm47CgoJLyog
Rm9yIENvbm5lY3RYLTQgYW5kIENvbm5lY3RYLTRMWCwgbmVlZCB0byBjaGVjayBGVyBzdXBwb3J0
ICovCglpZiAocGNpX2VuYWJsZV9kZXZpY2VfbWVtKHBkZXYpKSB7CgkJcGNpX3dhcm4ocGRldiwg
IkNhbid0IGVuYWJsZSBkZXZpY2UgbWVtb3J5XG4iKTsKCQlyZXR1cm47Cgl9CgoJZndfdmVyID0g
aW9yZW1hcChwY2lfcmVzb3VyY2Vfc3RhcnQocGRldiwgMCksIDQpOwoJaWYgKCFmd192ZXIpIHsK
CQlwY2lfd2FybihwZGV2LCAiQ2FuJ3QgbWFwIENvbm5lY3RYLTQgaW5pdGlhbGl6YXRpb24gc2Vn
bWVudFxuIik7CgkJZ290byBvdXQ7Cgl9CgoJLyogUmVhZGluZyBmcm9tIHJlc291cmNlIHNwYWNl
IHNob3VsZCBiZSAzMmIgYWxpZ25lZCAqLwoJZndfbWFqX21pbiA9IGlvcmVhZDMyYmUoZndfdmVy
KTsKCWZ3X3N1Yl9taW4gPSBpb3JlYWQzMmJlKGZ3X3ZlciArIDEpOwoJZndfbWFqb3IgPSBmd19t
YWpfbWluICYgMHhmZmZmOwoJZndfbWlub3IgPSBmd19tYWpfbWluID4+IDE2OwoJZndfc3VibWlu
b3IgPSBmd19zdWJfbWluICYgMHhmZmZmOwoJaWYgKGZ3X21pbm9yID4gQ09OTkVDVFhfNF9DVVJS
X01BWF9NSU5PUiB8fAoJICAgIGZ3X21pbm9yIDwgQ09OTkVDVFhfNF9JTlRYX1NVUFBPUlRfTUlO
T1IpIHsKCQlwY2lfd2FybihwZGV2LCAiQ29ubmVjdFgtNDogRlcgJXUuJXUuJXUgZG9lc24ndCBz
dXBwb3J0IElOVHggbWFza2luZywgZGlzYWJsaW5nLiBQbGVhc2UgdXBncmFkZSBGVyB0byAlZC4x
NC4xMTAwIGFuZCB1cCBmb3IgSU5UeCBzdXBwb3J0XG4iLAoJCQkgZndfbWFqb3IsIGZ3X21pbm9y
LCBmd19zdWJtaW5vciwgcGRldi0+ZGV2aWNlID09CgkJCSBQQ0lfREVWSUNFX0lEX01FTExBTk9Y
X0NPTk5FQ1RYNCA/IDEyIDogMTQpOwoJCXBkZXYtPmJyb2tlbl9pbnR4X21hc2tpbmcgPSAxOwoJ
fQoKCWlvdW5tYXAoZndfdmVyKTsKCm91dDoKCXBjaV9kaXNhYmxlX2RldmljZShwZGV2KTsKfQpE
RUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX01FTExBTk9YLCBQQ0lfQU5ZX0lE
LAoJCQltZWxsYW5veF9jaGVja19icm9rZW5faW50eF9tYXNraW5nKTsKCnN0YXRpYyB2b2lkIHF1
aXJrX25vX2J1c19yZXNldChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPmRldl9mbGFncyB8
PSBQQ0lfREVWX0ZMQUdTX05PX0JVU19SRVNFVDsKfQoKLyoKICogU29tZSBBdGhlcm9zIEFSOXh4
eCBhbmQgUUNBOTg4eCBjaGlwcyBkbyBub3QgYmVoYXZlIGFmdGVyIGEgYnVzIHJlc2V0LgogKiBU
aGUgZGV2aWNlIHdpbGwgdGhyb3cgYSBMaW5rIERvd24gZXJyb3Igb24gQUVSLWNhcGFibGUgc3lz
dGVtcyBhbmQKICogcmVnYXJkbGVzcyBvZiBBRVIsIGNvbmZpZyBzcGFjZSBvZiB0aGUgZGV2aWNl
IGlzIG5ldmVyIGFjY2Vzc2libGUgYWdhaW4KICogYW5kIHR5cGljYWxseSBjYXVzZXMgdGhlIHN5
c3RlbSB0byBoYW5nIG9yIHJlc2V0IHdoZW4gYWNjZXNzIGlzIGF0dGVtcHRlZC4KICogaHR0cDov
L3d3dy5zcGluaWNzLm5ldC9saXN0cy9saW51eC1wY2kvbXNnMzQ3OTcuaHRtbAogKi8KREVDTEFS
RV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfQVRIRVJPUywgMHgwMDMwLCBxdWlya19u
b19idXNfcmVzZXQpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BVEhF
Uk9TLCAweDAwMzIsIHF1aXJrX25vX2J1c19yZXNldCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURF
UihQQ0lfVkVORE9SX0lEX0FUSEVST1MsIDB4MDAzYywgcXVpcmtfbm9fYnVzX3Jlc2V0KTsKREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfQVRIRVJPUywgMHgwMDMzLCBxdWly
a19ub19idXNfcmVzZXQpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9B
VEhFUk9TLCAweDAwMzQsIHF1aXJrX25vX2J1c19yZXNldCk7CgovKgogKiBSb290IHBvcnQgb24g
c29tZSBDYXZpdW0gQ044eHh4IGNoaXBzIGRvIG5vdCBzdWNjZXNzZnVsbHkgY29tcGxldGUgYSBi
dXMKICogcmVzZXQgd2hlbiB1c2VkIHdpdGggY2VydGFpbiBjaGlsZCBkZXZpY2VzLiAgQWZ0ZXIg
dGhlIHJlc2V0LCBjb25maWcKICogYWNjZXNzZXMgdG8gdGhlIGNoaWxkIG1heSBmYWlsLgogKi8K
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfQ0FWSVVNLCAweGExMDAsIHF1
aXJrX25vX2J1c19yZXNldCk7CgpzdGF0aWMgdm9pZCBxdWlya19ub19wbV9yZXNldChzdHJ1Y3Qg
cGNpX2RldiAqZGV2KQp7CgkvKgoJICogV2UgY2FuJ3QgZG8gYSBidXMgcmVzZXQgb24gcm9vdCBi
dXMgZGV2aWNlcywgYnV0IGFuIGluZWZmZWN0aXZlCgkgKiBQTSByZXNldCBtYXkgYmUgYmV0dGVy
IHRoYW4gbm90aGluZy4KCSAqLwoJaWYgKCFwY2lfaXNfcm9vdF9idXMoZGV2LT5idXMpKQoJCWRl
di0+ZGV2X2ZsYWdzIHw9IFBDSV9ERVZfRkxBR1NfTk9fUE1fUkVTRVQ7Cn0KCi8qCiAqIFNvbWUg
QU1EL0FUSSBHUFVTIChIRDg1NzAgLSBPbGFuZCkgcmVwb3J0IHRoYXQgYSBEM2hvdC0+RDAgdHJh
bnNpdGlvbgogKiBjYXVzZXMgYSByZXNldCAoaS5lLiwgdGhleSBhZHZlcnRpc2UgTm9Tb2Z0UnN0
LSkuICBUaGlzIHRyYW5zaXRpb24gc2VlbXMKICogdG8gaGF2ZSBubyBlZmZlY3Qgb24gdGhlIGRl
dmljZTogaXQgcmV0YWlucyB0aGUgZnJhbWVidWZmZXIgY29udGVudHMgYW5kCiAqIG1vbml0b3Ig
c3luYy4gIEFkdmVydGlzaW5nIHRoaXMgc3VwcG9ydCBtYWtlcyBvdGhlciBsYXllcnMsIGxpa2Ug
VkZJTywKICogYXNzdW1lIHBjaV9yZXNldF9mdW5jdGlvbigpIGlzIHZpYWJsZSBmb3IgdGhpcyBk
ZXZpY2UuICBNYXJrIGl0IGFzCiAqIHVuYXZhaWxhYmxlIHRvIHNraXAgaXQgd2hlbiB0ZXN0aW5n
IHJlc2V0IG1ldGhvZHMuCiAqLwpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19IRUFERVIoUENJX1ZF
TkRPUl9JRF9BVEksIFBDSV9BTllfSUQsCgkJCSAgICAgICBQQ0lfQ0xBU1NfRElTUExBWV9WR0Es
IDgsIHF1aXJrX25vX3BtX3Jlc2V0KTsKCi8qCiAqIFRodW5kZXJib2x0IGNvbnRyb2xsZXJzIHdp
dGggYnJva2VuIE1TSSBob3RwbHVnIHNpZ25hbGluZzoKICogRW50aXJlIDFzdCBnZW5lcmF0aW9u
IChMaWdodCBSaWRnZSwgRWFnbGUgUmlkZ2UsIExpZ2h0IFBlYWspIGFuZCBwYXJ0CiAqIG9mIHRo
ZSAybmQgZ2VuZXJhdGlvbiAoQ2FjdHVzIFJpZGdlIDRDIHVwIHRvIHJldmlzaW9uIDEsIFBvcnQg
UmlkZ2UpLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfdGh1bmRlcmJvbHRfaG90cGx1Z19tc2koc3Ry
dWN0IHBjaV9kZXYgKnBkZXYpCnsKCWlmIChwZGV2LT5pc19ob3RwbHVnX2JyaWRnZSAmJgoJICAg
IChwZGV2LT5kZXZpY2UgIT0gUENJX0RFVklDRV9JRF9JTlRFTF9DQUNUVVNfUklER0VfNEMgfHwK
CSAgICAgcGRldi0+cmV2aXNpb24gPD0gMSkpCgkJcGRldi0+bm9fbXNpID0gMTsKfQpERUNMQVJF
X1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCBQQ0lfREVWSUNFX0lEX0lOVEVM
X0xJR0hUX1JJREdFLAoJCQlxdWlya190aHVuZGVyYm9sdF9ob3RwbHVnX21zaSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0VfSURfSU5URUxf
RUFHTEVfUklER0UsCgkJCXF1aXJrX3RodW5kZXJib2x0X2hvdHBsdWdfbXNpKTsKREVDTEFSRV9Q
Q0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0RFVklDRV9JRF9JTlRFTF9M
SUdIVF9QRUFLLAoJCQlxdWlya190aHVuZGVyYm9sdF9ob3RwbHVnX21zaSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0VfSURfSU5URUxfQ0FD
VFVTX1JJREdFXzRDLAoJCQlxdWlya190aHVuZGVyYm9sdF9ob3RwbHVnX21zaSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0VfSURfSU5URUxf
UE9SVF9SSURHRSwKCQkJcXVpcmtfdGh1bmRlcmJvbHRfaG90cGx1Z19tc2kpOwoKI2lmZGVmIENP
TkZJR19BQ1BJCi8qCiAqIEFwcGxlOiBTaHV0ZG93biBDYWN0dXMgUmlkZ2UgVGh1bmRlcmJvbHQg
Y29udHJvbGxlci4KICoKICogT24gQXBwbGUgaGFyZHdhcmUgdGhlIENhY3R1cyBSaWRnZSBUaHVu
ZGVyYm9sdCBjb250cm9sbGVyIG5lZWRzIHRvIGJlCiAqIHNodXRkb3duIGJlZm9yZSBzdXNwZW5k
LiBPdGhlcndpc2UgdGhlIG5hdGl2ZSBob3N0IGludGVyZmFjZSAoTkhJKSB3aWxsIG5vdAogKiBi
ZSBwcmVzZW50IGFmdGVyIHJlc3VtZSBpZiBhIGRldmljZSB3YXMgcGx1Z2dlZCBpbiBiZWZvcmUg
c3VzcGVuZC4KICoKICogVGhlIFRodW5kZXJib2x0IGNvbnRyb2xsZXIgY29uc2lzdHMgb2YgYSBQ
Q0llIHN3aXRjaCB3aXRoIGRvd25zdHJlYW0KICogYnJpZGdlcyBsZWFkaW5nIHRvIHRoZSBOSEkg
YW5kIHRvIHRoZSB0dW5uZWwgUENJIGJyaWRnZXMuCiAqCiAqIFRoaXMgcXVpcmsgY3V0cyBwb3dl
ciB0byB0aGUgd2hvbGUgY2hpcC4gVGhlcmVmb3JlIHdlIGhhdmUgdG8gYXBwbHkgaXQKICogZHVy
aW5nIHN1c3BlbmRfbm9pcnEgb2YgdGhlIHVwc3RyZWFtIGJyaWRnZS4KICoKICogUG93ZXIgaXMg
YXV0b21hZ2ljYWxseSByZXN0b3JlZCBiZWZvcmUgcmVzdW1lLiBObyBhY3Rpb24gaXMgbmVlZGVk
LgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfYXBwbGVfcG93ZXJvZmZfdGh1bmRlcmJvbHQoc3RydWN0
IHBjaV9kZXYgKmRldikKewoJYWNwaV9oYW5kbGUgYnJpZGdlLCBTWElPLCBTWEZQLCBTWExWOwoK
CWlmICgheDg2X2FwcGxlX21hY2hpbmUpCgkJcmV0dXJuOwoJaWYgKHBjaV9wY2llX3R5cGUoZGV2
KSAhPSBQQ0lfRVhQX1RZUEVfVVBTVFJFQU0pCgkJcmV0dXJuOwoJYnJpZGdlID0gQUNQSV9IQU5E
TEUoJmRldi0+ZGV2KTsKCWlmICghYnJpZGdlKQoJCXJldHVybjsKCgkvKgoJICogU1hJTyBhbmQg
U1hMViBhcmUgcHJlc2VudCBvbmx5IG9uIG1hY2hpbmVzIHJlcXVpcmluZyB0aGlzIHF1aXJrLgoJ
ICogVGh1bmRlcmJvbHQgYnJpZGdlcyBpbiBleHRlcm5hbCBkZXZpY2VzIG1pZ2h0IGhhdmUgdGhl
IHNhbWUKCSAqIGRldmljZSBJRCBhcyB0aG9zZSBvbiB0aGUgaG9zdCwgYnV0IHRoZXkgd2lsbCBu
b3QgaGF2ZSB0aGUKCSAqIGFzc29jaWF0ZWQgQUNQSSBtZXRob2RzLiBUaGlzIGltcGxpY2l0bHkg
Y2hlY2tzIHRoYXQgd2UgYXJlIGF0CgkgKiB0aGUgcmlnaHQgYnJpZGdlLgoJICovCglpZiAoQUNQ
SV9GQUlMVVJFKGFjcGlfZ2V0X2hhbmRsZShicmlkZ2UsICJEU0IwLk5ISTAuU1hJTyIsICZTWElP
KSkKCSAgICB8fCBBQ1BJX0ZBSUxVUkUoYWNwaV9nZXRfaGFuZGxlKGJyaWRnZSwgIkRTQjAuTkhJ
MC5TWEZQIiwgJlNYRlApKQoJICAgIHx8IEFDUElfRkFJTFVSRShhY3BpX2dldF9oYW5kbGUoYnJp
ZGdlLCAiRFNCMC5OSEkwLlNYTFYiLCAmU1hMVikpKQoJCXJldHVybjsKCXBjaV9pbmZvKGRldiwg
InF1aXJrOiBjdXR0aW5nIHBvd2VyIHRvIFRodW5kZXJib2x0IGNvbnRyb2xsZXIuLi5cbiIpOwoK
CS8qIG1hZ2ljIHNlcXVlbmNlICovCglhY3BpX2V4ZWN1dGVfc2ltcGxlX21ldGhvZChTWElPLCBO
VUxMLCAxKTsKCWFjcGlfZXhlY3V0ZV9zaW1wbGVfbWV0aG9kKFNYRlAsIE5VTEwsIDApOwoJbXNs
ZWVwKDMwMCk7CglhY3BpX2V4ZWN1dGVfc2ltcGxlX21ldGhvZChTWExWLCBOVUxMLCAwKTsKCWFj
cGlfZXhlY3V0ZV9zaW1wbGVfbWV0aG9kKFNYSU8sIE5VTEwsIDApOwoJYWNwaV9leGVjdXRlX3Np
bXBsZV9tZXRob2QoU1hMViwgTlVMTCwgMCk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfU1VTUEVORF9M
QVRFKFBDSV9WRU5ET1JfSURfSU5URUwsCgkJCSAgICAgICBQQ0lfREVWSUNFX0lEX0lOVEVMX0NB
Q1RVU19SSURHRV80QywKCQkJICAgICAgIHF1aXJrX2FwcGxlX3Bvd2Vyb2ZmX3RodW5kZXJib2x0
KTsKCi8qCiAqIEFwcGxlOiBXYWl0IGZvciB0aGUgVGh1bmRlcmJvbHQgY29udHJvbGxlciB0byBy
ZWVzdGFibGlzaCBQQ0kgdHVubmVscwogKgogKiBEdXJpbmcgc3VzcGVuZCB0aGUgVGh1bmRlcmJv
bHQgY29udHJvbGxlciBpcyByZXNldCBhbmQgYWxsIFBDSQogKiB0dW5uZWxzIGFyZSBsb3N0LiBU
aGUgTkhJIGRyaXZlciB3aWxsIHRyeSB0byByZWVzdGFibGlzaCBhbGwgdHVubmVscwogKiBkdXJp
bmcgcmVzdW1lLiBXZSBoYXZlIHRvIG1hbnVhbGx5IHdhaXQgZm9yIHRoZSBOSEkgc2luY2UgdGhl
cmUgaXMKICogbm8gcGFyZW50IGNoaWxkIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBOSEkgYW5k
IHRoZSB0dW5uZWxlZAogKiBicmlkZ2VzLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfYXBwbGVfd2Fp
dF9mb3JfdGh1bmRlcmJvbHQoc3RydWN0IHBjaV9kZXYgKmRldikKewoJc3RydWN0IHBjaV9kZXYg
KnNpYmxpbmcgPSBOVUxMOwoJc3RydWN0IHBjaV9kZXYgKm5oaSA9IE5VTEw7CgoJaWYgKCF4ODZf
YXBwbGVfbWFjaGluZSkKCQlyZXR1cm47CglpZiAocGNpX3BjaWVfdHlwZShkZXYpICE9IFBDSV9F
WFBfVFlQRV9ET1dOU1RSRUFNKQoJCXJldHVybjsKCgkvKgoJICogRmluZCB0aGUgTkhJIGFuZCBj
b25maXJtIHRoYXQgd2UgYXJlIGEgYnJpZGdlIG9uIHRoZSBUaHVuZGVyYm9sdAoJICogaG9zdCBj
b250cm9sbGVyIGFuZCBub3Qgb24gYSBUaHVuZGVyYm9sdCBlbmRwb2ludC4KCSAqLwoJc2libGlu
ZyA9IHBjaV9nZXRfc2xvdChkZXYtPmJ1cywgMHgwKTsKCWlmIChzaWJsaW5nID09IGRldikKCQln
b3RvIG91dDsgLyogd2UgYXJlIHRoZSBkb3duc3RyZWFtIGJyaWRnZSB0byB0aGUgTkhJICovCglp
ZiAoIXNpYmxpbmcgfHwgIXNpYmxpbmctPnN1Ym9yZGluYXRlKQoJCWdvdG8gb3V0OwoJbmhpID0g
cGNpX2dldF9zbG90KHNpYmxpbmctPnN1Ym9yZGluYXRlLCAweDApOwoJaWYgKCFuaGkpCgkJZ290
byBvdXQ7CglpZiAobmhpLT52ZW5kb3IgIT0gUENJX1ZFTkRPUl9JRF9JTlRFTAoJCSAgICB8fCAo
bmhpLT5kZXZpY2UgIT0gUENJX0RFVklDRV9JRF9JTlRFTF9MSUdIVF9SSURHRSAmJgoJCQluaGkt
PmRldmljZSAhPSBQQ0lfREVWSUNFX0lEX0lOVEVMX0NBQ1RVU19SSURHRV80QyAmJgoJCQluaGkt
PmRldmljZSAhPSBQQ0lfREVWSUNFX0lEX0lOVEVMX0ZBTENPTl9SSURHRV8yQ19OSEkgJiYKCQkJ
bmhpLT5kZXZpY2UgIT0gUENJX0RFVklDRV9JRF9JTlRFTF9GQUxDT05fUklER0VfNENfTkhJKQoJ
CSAgICB8fCBuaGktPmNsYXNzICE9IFBDSV9DTEFTU19TWVNURU1fT1RIRVIgPDwgOCkKCQlnb3Rv
IG91dDsKCXBjaV9pbmZvKGRldiwgInF1aXJrOiB3YWl0aW5nIGZvciBUaHVuZGVyYm9sdCB0byBy
ZWVzdGFibGlzaCBQQ0kgdHVubmVscy4uLlxuIik7CglkZXZpY2VfcG1fd2FpdF9mb3JfZGV2KCZk
ZXYtPmRldiwgJm5oaS0+ZGV2KTsKb3V0OgoJcGNpX2Rldl9wdXQobmhpKTsKCXBjaV9kZXZfcHV0
KHNpYmxpbmcpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lE
X0lOVEVMLAoJCQkgICAgICAgUENJX0RFVklDRV9JRF9JTlRFTF9MSUdIVF9SSURHRSwKCQkJICAg
ICAgIHF1aXJrX2FwcGxlX3dhaXRfZm9yX3RodW5kZXJib2x0KTsKREVDTEFSRV9QQ0lfRklYVVBf
UkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsCgkJCSAgICAgICBQQ0lfREVWSUNFX0lE
X0lOVEVMX0NBQ1RVU19SSURHRV80QywKCQkJICAgICAgIHF1aXJrX2FwcGxlX3dhaXRfZm9yX3Ro
dW5kZXJib2x0KTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURf
SU5URUwsCgkJCSAgICAgICBQQ0lfREVWSUNFX0lEX0lOVEVMX0ZBTENPTl9SSURHRV8yQ19CUklE
R0UsCgkJCSAgICAgICBxdWlya19hcHBsZV93YWl0X2Zvcl90aHVuZGVyYm9sdCk7CkRFQ0xBUkVf
UENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0lOVEVMLAoJCQkgICAgICAgUENJ
X0RFVklDRV9JRF9JTlRFTF9GQUxDT05fUklER0VfNENfQlJJREdFLAoJCQkgICAgICAgcXVpcmtf
YXBwbGVfd2FpdF9mb3JfdGh1bmRlcmJvbHQpOwojZW5kaWYKCi8qCiAqIEZvbGxvd2luZyBhcmUg
ZGV2aWNlLXNwZWNpZmljIHJlc2V0IG1ldGhvZHMgd2hpY2ggY2FuIGJlIHVzZWQgdG8KICogcmVz
ZXQgYSBzaW5nbGUgZnVuY3Rpb24gaWYgb3RoZXIgbWV0aG9kcyAoZS5nLiBGTFIsIFBNIEQwLT5E
MykgYXJlCiAqIG5vdCBhdmFpbGFibGUuCiAqLwpzdGF0aWMgaW50IHJlc2V0X2ludGVsXzgyNTk5
X3NmcF92aXJ0Zm4oc3RydWN0IHBjaV9kZXYgKmRldiwgaW50IHByb2JlKQp7CgkvKgoJICogaHR0
cDovL3d3dy5pbnRlbC5jb20vY29udGVudC9kYW0vZG9jL2RhdGFzaGVldC84MjU5OS0xMC1nYmUt
Y29udHJvbGxlci1kYXRhc2hlZXQucGRmCgkgKgoJICogVGhlIDgyNTk5IHN1cHBvcnRzIEZMUiBv
biBWRnMsIGJ1dCBGTFIgc3VwcG9ydCBpcyByZXBvcnRlZCBvbmx5CgkgKiBpbiB0aGUgUEYgREVW
Q0FQIChzZWMgOS4zLjEwLjQpLCBub3QgaW4gdGhlIFZGIERFVkNBUCAoc2VjIDkuNSkuCgkgKiBU
aHVzIHdlIG11c3QgY2FsbCBwY2llX2ZscigpIGRpcmVjdGx5IHdpdGhvdXQgZmlyc3QgY2hlY2tp
bmcgaWYgaXQgaXMKCSAqIHN1cHBvcnRlZC4KCSAqLwoJaWYgKCFwcm9iZSkKCQlwY2llX2Zscihk
ZXYpOwoJcmV0dXJuIDA7Cn0KCiNkZWZpbmUgU09VVEhfQ0hJQ0tFTjIJCTB4YzIwMDQKI2RlZmlu
ZSBQQ0hfUFBfU1RBVFVTCQkweGM3MjAwCiNkZWZpbmUgUENIX1BQX0NPTlRST0wJCTB4YzcyMDQK
I2RlZmluZSBNU0dfQ1RMCQkJMHg0NTAxMAojZGVmaW5lIE5TREVfUFdSX1NUQVRFCQkweGQwMTAw
CiNkZWZpbmUgSUdEX09QRVJBVElPTl9USU1FT1VUCTEwMDAwICAgICAvKiBzZXQgdGltZW91dCAx
MCBzZWNvbmRzICovCgpzdGF0aWMgaW50IHJlc2V0X2l2Yl9pZ2Qoc3RydWN0IHBjaV9kZXYgKmRl
diwgaW50IHByb2JlKQp7Cgl2b2lkIF9faW9tZW0gKm1taW9fYmFzZTsKCXVuc2lnbmVkIGxvbmcg
dGltZW91dDsKCXUzMiB2YWw7CgoJaWYgKHByb2JlKQoJCXJldHVybiAwOwoKCW1taW9fYmFzZSA9
IHBjaV9pb21hcChkZXYsIDAsIDApOwoJaWYgKCFtbWlvX2Jhc2UpCgkJcmV0dXJuIC1FTk9NRU07
CgoJaW93cml0ZTMyKDB4MDAwMDAwMDIsIG1taW9fYmFzZSArIE1TR19DVEwpOwoKCS8qCgkgKiBD
bG9iYmVyaW5nIFNPVVRIX0NISUNLRU4yIHJlZ2lzdGVyIGlzIGZpbmUgb25seSBpZiB0aGUgbmV4
dAoJICogZHJpdmVyIGxvYWRlZCBzZXRzIHRoZSByaWdodCBiaXRzLiBIb3dldmVyLCB0aGlzJ3Mg
YSByZXNldCBhbmQKCSAqIHRoZSBiaXRzIGhhdmUgYmVlbiBzZXQgYnkgaTkxNSBwcmV2aW91c2x5
LCBzbyB3ZSBjbG9iYmVyCgkgKiBTT1VUSF9DSElDS0VOMiByZWdpc3RlciBkaXJlY3RseSBoZXJl
LgoJICovCglpb3dyaXRlMzIoMHgwMDAwMDAwNSwgbW1pb19iYXNlICsgU09VVEhfQ0hJQ0tFTjIp
OwoKCXZhbCA9IGlvcmVhZDMyKG1taW9fYmFzZSArIFBDSF9QUF9DT05UUk9MKSAmIDB4ZmZmZmZm
ZmU7Cglpb3dyaXRlMzIodmFsLCBtbWlvX2Jhc2UgKyBQQ0hfUFBfQ09OVFJPTCk7CgoJdGltZW91
dCA9IGppZmZpZXMgKyBtc2Vjc190b19qaWZmaWVzKElHRF9PUEVSQVRJT05fVElNRU9VVCk7Cglk
byB7CgkJdmFsID0gaW9yZWFkMzIobW1pb19iYXNlICsgUENIX1BQX1NUQVRVUyk7CgkJaWYgKCh2
YWwgJiAweGIwMDAwMDAwKSA9PSAwKQoJCQlnb3RvIHJlc2V0X2NvbXBsZXRlOwoJCW1zbGVlcCgx
MCk7Cgl9IHdoaWxlICh0aW1lX2JlZm9yZShqaWZmaWVzLCB0aW1lb3V0KSk7CglwY2lfd2Fybihk
ZXYsICJ0aW1lb3V0IGR1cmluZyByZXNldFxuIik7CgpyZXNldF9jb21wbGV0ZToKCWlvd3JpdGUz
MigweDAwMDAwMDAyLCBtbWlvX2Jhc2UgKyBOU0RFX1BXUl9TVEFURSk7CgoJcGNpX2lvdW5tYXAo
ZGV2LCBtbWlvX2Jhc2UpOwoJcmV0dXJuIDA7Cn0KCi8qIERldmljZS1zcGVjaWZpYyByZXNldCBt
ZXRob2QgZm9yIENoZWxzaW8gVDQtYmFzZWQgYWRhcHRlcnMgKi8Kc3RhdGljIGludCByZXNldF9j
aGVsc2lvX2dlbmVyaWNfZGV2KHN0cnVjdCBwY2lfZGV2ICpkZXYsIGludCBwcm9iZSkKewoJdTE2
IG9sZF9jb21tYW5kOwoJdTE2IG1zaXhfZmxhZ3M7CgoJLyoKCSAqIElmIHRoaXMgaXNuJ3QgYSBD
aGVsc2lvIFQ0LWJhc2VkIGRldmljZSwgcmV0dXJuIC1FTk9UVFkgaW5kaWNhdGluZwoJICogdGhh
dCB3ZSBoYXZlIG5vIGRldmljZS1zcGVjaWZpYyByZXNldCBtZXRob2QuCgkgKi8KCWlmICgoZGV2
LT5kZXZpY2UgJiAweGYwMDApICE9IDB4NDAwMCkKCQlyZXR1cm4gLUVOT1RUWTsKCgkvKgoJICog
SWYgdGhpcyBpcyB0aGUgInByb2JlIiBwaGFzZSwgcmV0dXJuIDAgaW5kaWNhdGluZyB0aGF0IHdl
IGNhbgoJICogcmVzZXQgdGhpcyBkZXZpY2UuCgkgKi8KCWlmIChwcm9iZSkKCQlyZXR1cm4gMDsK
CgkvKgoJICogVDQgY2FuIHdlZGdlIGlmIHRoZXJlIGFyZSBETUFzIGluIGZsaWdodCB3aXRoaW4g
dGhlIGNoaXAgYW5kIEJ1cwoJICogTWFzdGVyIGhhcyBiZWVuIGRpc2FibGVkLiAgV2UgbmVlZCB0
byBoYXZlIGl0IG9uIHRpbGwgdGhlIEZ1bmN0aW9uCgkgKiBMZXZlbCBSZXNldCBjb21wbGV0ZXMu
ICAoQlVTX01BU1RFUiBpcyBkaXNhYmxlZCBpbgoJICogcGNpX3Jlc2V0X2Z1bmN0aW9uKCkpLgoJ
ICovCglwY2lfcmVhZF9jb25maWdfd29yZChkZXYsIFBDSV9DT01NQU5ELCAmb2xkX2NvbW1hbmQp
OwoJcGNpX3dyaXRlX2NvbmZpZ193b3JkKGRldiwgUENJX0NPTU1BTkQsCgkJCSAgICAgIG9sZF9j
b21tYW5kIHwgUENJX0NPTU1BTkRfTUFTVEVSKTsKCgkvKgoJICogUGVyZm9ybSB0aGUgYWN0dWFs
IGRldmljZSBmdW5jdGlvbiByZXNldCwgc2F2aW5nIGFuZCByZXN0b3JpbmcKCSAqIGNvbmZpZ3Vy
YXRpb24gaW5mb3JtYXRpb24gYXJvdW5kIHRoZSByZXNldC4KCSAqLwoJcGNpX3NhdmVfc3RhdGUo
ZGV2KTsKCgkvKgoJICogVDQgYWxzbyBzdWZmZXJzIGEgSGVhZC1PZi1MaW5lIGJsb2NraW5nIHBy
b2JsZW0gaWYgTVNJLVggaW50ZXJydXB0cwoJICogYXJlIGRpc2FibGVkIHdoZW4gYW4gTVNJLVgg
aW50ZXJydXB0IG1lc3NhZ2UgbmVlZHMgdG8gYmUgZGVsaXZlcmVkLgoJICogU28gd2UgYnJpZWZs
eSByZS1lbmFibGUgTVNJLVggaW50ZXJydXB0cyBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZQoJICog
RkxSLiAgVGhlIHBjaV9yZXN0b3JlX3N0YXRlKCkgYmVsb3cgd2lsbCByZXN0b3JlIHRoZSBvcmln
aW5hbAoJICogTVNJLVggc3RhdGUuCgkgKi8KCXBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwgZGV2
LT5tc2l4X2NhcCtQQ0lfTVNJWF9GTEFHUywgJm1zaXhfZmxhZ3MpOwoJaWYgKChtc2l4X2ZsYWdz
ICYgUENJX01TSVhfRkxBR1NfRU5BQkxFKSA9PSAwKQoJCXBjaV93cml0ZV9jb25maWdfd29yZChk
ZXYsIGRldi0+bXNpeF9jYXArUENJX01TSVhfRkxBR1MsCgkJCQkgICAgICBtc2l4X2ZsYWdzIHwK
CQkJCSAgICAgIFBDSV9NU0lYX0ZMQUdTX0VOQUJMRSB8CgkJCQkgICAgICBQQ0lfTVNJWF9GTEFH
U19NQVNLQUxMKTsKCglwY2llX2ZscihkZXYpOwoKCS8qCgkgKiBSZXN0b3JlIHRoZSBjb25maWd1
cmF0aW9uIGluZm9ybWF0aW9uIChCQVIgdmFsdWVzLCBldGMuKSBpbmNsdWRpbmcKCSAqIHRoZSBv
cmlnaW5hbCBQQ0kgQ29uZmlndXJhdGlvbiBTcGFjZSBDb21tYW5kIHdvcmQsIGFuZCByZXR1cm4K
CSAqIHN1Y2Nlc3MuCgkgKi8KCXBjaV9yZXN0b3JlX3N0YXRlKGRldik7CglwY2lfd3JpdGVfY29u
ZmlnX3dvcmQoZGV2LCBQQ0lfQ09NTUFORCwgb2xkX2NvbW1hbmQpOwoJcmV0dXJuIDA7Cn0KCiNk
ZWZpbmUgUENJX0RFVklDRV9JRF9JTlRFTF84MjU5OV9TRlBfVkYgICAweDEwZWQKI2RlZmluZSBQ
Q0lfREVWSUNFX0lEX0lOVEVMX0lWQl9NX1ZHQSAgICAgIDB4MDE1NgojZGVmaW5lIFBDSV9ERVZJ
Q0VfSURfSU5URUxfSVZCX00yX1ZHQSAgICAgMHgwMTY2CgovKgogKiBUaGUgU2Ftc3VuZyBTTTk2
MS9QTTk2MSBjb250cm9sbGVyIGNhbiBzb21ldGltZXMgZW50ZXIgYSBmYXRhbCBzdGF0ZSBhZnRl
cgogKiBGTFIgd2hlcmUgY29uZmlnIHNwYWNlIHJlYWRzIGZyb20gdGhlIGRldmljZSByZXR1cm4g
LTEuICBXZSBzZWVtIHRvIGJlCiAqIGFibGUgdG8gYXZvaWQgdGhpcyBjb25kaXRpb24gaWYgd2Ug
ZGlzYWJsZSB0aGUgTlZNZSBjb250cm9sbGVyIHByaW9yIHRvCiAqIEZMUi4gIFRoaXMgcXVpcmsg
aXMgZ2VuZXJpYyBmb3IgYW55IE5WTWUgY2xhc3MgZGV2aWNlIHJlcXVpcmluZyBzaW1pbGFyCiAq
IGFzc2lzdGFuY2UgdG8gcXVpZXNjZSB0aGUgZGV2aWNlIHByaW9yIHRvIEZMUi4KICoKICogTlZN
ZSBzcGVjaWZpY2F0aW9uOiBodHRwczovL252bWV4cHJlc3Mub3JnL3Jlc291cmNlcy9zcGVjaWZp
Y2F0aW9ucy8KICogUmV2aXNpb24gMS4wZToKICogICAgQ2hhcHRlciAyOiBSZXF1aXJlZCBhbmQg
b3B0aW9uYWwgUENJIGNvbmZpZyByZWdpc3RlcnMKICogICAgQ2hhcHRlciAzOiBOVk1lIGNvbnRy
b2wgcmVnaXN0ZXJzCiAqICAgIENoYXB0ZXIgNy4zOiBSZXNldCBiZWhhdmlvcgogKi8Kc3RhdGlj
IGludCBudm1lX2Rpc2FibGVfYW5kX2ZscihzdHJ1Y3QgcGNpX2RldiAqZGV2LCBpbnQgcHJvYmUp
CnsKCXZvaWQgX19pb21lbSAqYmFyOwoJdTE2IGNtZDsKCXUzMiBjZmc7CgoJaWYgKGRldi0+Y2xh
c3MgIT0gUENJX0NMQVNTX1NUT1JBR0VfRVhQUkVTUyB8fAoJICAgICFwY2llX2hhc19mbHIoZGV2
KSB8fCAhcGNpX3Jlc291cmNlX3N0YXJ0KGRldiwgMCkpCgkJcmV0dXJuIC1FTk9UVFk7CgoJaWYg
KHByb2JlKQoJCXJldHVybiAwOwoKCWJhciA9IHBjaV9pb21hcChkZXYsIDAsIE5WTUVfUkVHX0ND
ICsgc2l6ZW9mKGNmZykpOwoJaWYgKCFiYXIpCgkJcmV0dXJuIC1FTk9UVFk7CgoJcGNpX3JlYWRf
Y29uZmlnX3dvcmQoZGV2LCBQQ0lfQ09NTUFORCwgJmNtZCk7CglwY2lfd3JpdGVfY29uZmlnX3dv
cmQoZGV2LCBQQ0lfQ09NTUFORCwgY21kIHwgUENJX0NPTU1BTkRfTUVNT1JZKTsKCgljZmcgPSBy
ZWFkbChiYXIgKyBOVk1FX1JFR19DQyk7CgoJLyogRGlzYWJsZSBjb250cm9sbGVyIGlmIGVuYWJs
ZWQgKi8KCWlmIChjZmcgJiBOVk1FX0NDX0VOQUJMRSkgewoJCXUzMiBjYXAgPSByZWFkbChiYXIg
KyBOVk1FX1JFR19DQVApOwoJCXVuc2lnbmVkIGxvbmcgdGltZW91dDsKCgkJLyoKCQkgKiBQZXIg
bnZtZV9kaXNhYmxlX2N0cmwoKSBza2lwIHNodXRkb3duIG5vdGlmaWNhdGlvbiBhcyBpdAoJCSAq
IGNvdWxkIGNvbXBsZXRlIGNvbW1hbmRzIHRvIHRoZSBhZG1pbiBxdWV1ZS4gIFdlIG9ubHkgaW50
ZW5kCgkJICogdG8gcXVpZXNjZSB0aGUgZGV2aWNlIGJlZm9yZSByZXNldC4KCQkgKi8KCQljZmcg
Jj0gfihOVk1FX0NDX1NITl9NQVNLIHwgTlZNRV9DQ19FTkFCTEUpOwoKCQl3cml0ZWwoY2ZnLCBi
YXIgKyBOVk1FX1JFR19DQyk7CgoJCS8qCgkJICogU29tZSBjb250cm9sbGVycyByZXF1aXJlIGFu
IGFkZGl0aW9uYWwgZGVsYXkgaGVyZSwgc2VlCgkJICogTlZNRV9RVUlSS19ERUxBWV9CRUZPUkVf
Q0hLX1JEWS4gIE5vbmUgb2YgdGhvc2UgYXJlIHlldAoJCSAqIHN1cHBvcnRlZCBieSB0aGlzIHF1
aXJrLgoJCSAqLwoKCQkvKiBDYXAgcmVnaXN0ZXIgcHJvdmlkZXMgbWF4IHRpbWVvdXQgaW4gNTAw
bXMgaW5jcmVtZW50cyAqLwoJCXRpbWVvdXQgPSAoKE5WTUVfQ0FQX1RJTUVPVVQoY2FwKSArIDEp
ICogSFogLyAyKSArIGppZmZpZXM7CgoJCWZvciAoOzspIHsKCQkJdTMyIHN0YXR1cyA9IHJlYWRs
KGJhciArIE5WTUVfUkVHX0NTVFMpOwoKCQkJLyogUmVhZHkgc3RhdHVzIGJlY29tZXMgemVybyBv
biBkaXNhYmxlIGNvbXBsZXRlICovCgkJCWlmICghKHN0YXR1cyAmIE5WTUVfQ1NUU19SRFkpKQoJ
CQkJYnJlYWs7CgoJCQltc2xlZXAoMTAwKTsKCgkJCWlmICh0aW1lX2FmdGVyKGppZmZpZXMsIHRp
bWVvdXQpKSB7CgkJCQlwY2lfd2FybihkZXYsICJUaW1lb3V0IHdhaXRpbmcgZm9yIE5WTWUgcmVh
ZHkgc3RhdHVzIHRvIGNsZWFyIGFmdGVyIGRpc2FibGVcbiIpOwoJCQkJYnJlYWs7CgkJCX0KCQl9
Cgl9CgoJcGNpX2lvdW5tYXAoZGV2LCBiYXIpOwoKCXBjaWVfZmxyKGRldik7CgoJcmV0dXJuIDA7
Cn0KCi8qCiAqIEludGVsIERDIFAzNzAwIE5WTWUgY29udHJvbGxlciB3aWxsIHRpbWVvdXQgd2Fp
dGluZyBmb3IgcmVhZHkgc3RhdHVzCiAqIHRvIGNoYW5nZSBhZnRlciBOVk1lIGVuYWJsZSBpZiB0
aGUgZHJpdmVyIHN0YXJ0cyBpbnRlcmFjdGluZyB3aXRoIHRoZQogKiBkZXZpY2UgdG9vIHNvb24g
YWZ0ZXIgRkxSLiAgQSAyNTBtcyBkZWxheSBhZnRlciBGTFIgaGFzIGhldXJpc3RpY2FsbHkKICog
cHJvdmVuIHRvIHByb2R1Y2UgcmVsaWFibHkgd29ya2luZyByZXN1bHRzIGZvciBkZXZpY2UgYXNz
aWdubWVudCBjYXNlcy4KICovCnN0YXRpYyBpbnQgZGVsYXlfMjUwbXNfYWZ0ZXJfZmxyKHN0cnVj
dCBwY2lfZGV2ICpkZXYsIGludCBwcm9iZSkKewoJaWYgKCFwY2llX2hhc19mbHIoZGV2KSkKCQly
ZXR1cm4gLUVOT1RUWTsKCglpZiAocHJvYmUpCgkJcmV0dXJuIDA7CgoJcGNpZV9mbHIoZGV2KTsK
Cgltc2xlZXAoMjUwKTsKCglyZXR1cm4gMDsKfQoKc3RhdGljIGNvbnN0IHN0cnVjdCBwY2lfZGV2
X3Jlc2V0X21ldGhvZHMgcGNpX2Rldl9yZXNldF9tZXRob2RzW10gPSB7Cgl7IFBDSV9WRU5ET1Jf
SURfSU5URUwsIFBDSV9ERVZJQ0VfSURfSU5URUxfODI1OTlfU0ZQX1ZGLAoJCSByZXNldF9pbnRl
bF84MjU5OV9zZnBfdmlydGZuIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0Vf
SURfSU5URUxfSVZCX01fVkdBLAoJCXJlc2V0X2l2Yl9pZ2QgfSwKCXsgUENJX1ZFTkRPUl9JRF9J
TlRFTCwgUENJX0RFVklDRV9JRF9JTlRFTF9JVkJfTTJfVkdBLAoJCXJlc2V0X2l2Yl9pZ2QgfSwK
CXsgUENJX1ZFTkRPUl9JRF9TQU1TVU5HLCAweGE4MDQsIG52bWVfZGlzYWJsZV9hbmRfZmxyIH0s
Cgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MDk1MywgZGVsYXlfMjUwbXNfYWZ0ZXJfZmxyIH0s
Cgl7IFBDSV9WRU5ET1JfSURfQ0hFTFNJTywgUENJX0FOWV9JRCwKCQlyZXNldF9jaGVsc2lvX2dl
bmVyaWNfZGV2IH0sCgl7IDAgfQp9OwoKLyoKICogVGhlc2UgZGV2aWNlLXNwZWNpZmljIHJlc2V0
IG1ldGhvZHMgYXJlIGhlcmUgcmF0aGVyIHRoYW4gaW4gYSBkcml2ZXIKICogYmVjYXVzZSB3aGVu
IGEgaG9zdCBhc3NpZ25zIGEgZGV2aWNlIHRvIGEgZ3Vlc3QgVk0sIHRoZSBob3N0IG1heSBuZWVk
CiAqIHRvIHJlc2V0IHRoZSBkZXZpY2UgYnV0IHByb2JhYmx5IGRvZXNuJ3QgaGF2ZSBhIGRyaXZl
ciBmb3IgaXQuCiAqLwppbnQgcGNpX2Rldl9zcGVjaWZpY19yZXNldChzdHJ1Y3QgcGNpX2RldiAq
ZGV2LCBpbnQgcHJvYmUpCnsKCWNvbnN0IHN0cnVjdCBwY2lfZGV2X3Jlc2V0X21ldGhvZHMgKmk7
CgoJZm9yIChpID0gcGNpX2Rldl9yZXNldF9tZXRob2RzOyBpLT5yZXNldDsgaSsrKSB7CgkJaWYg
KChpLT52ZW5kb3IgPT0gZGV2LT52ZW5kb3IgfHwKCQkgICAgIGktPnZlbmRvciA9PSAodTE2KVBD
SV9BTllfSUQpICYmCgkJICAgIChpLT5kZXZpY2UgPT0gZGV2LT5kZXZpY2UgfHwKCQkgICAgIGkt
PmRldmljZSA9PSAodTE2KVBDSV9BTllfSUQpKQoJCQlyZXR1cm4gaS0+cmVzZXQoZGV2LCBwcm9i
ZSk7Cgl9CgoJcmV0dXJuIC1FTk9UVFk7Cn0KCnN0YXRpYyB2b2lkIHF1aXJrX2RtYV9mdW5jMF9h
bGlhcyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAoUENJX0ZVTkMoZGV2LT5kZXZmbikgIT0g
MCkKCQlwY2lfYWRkX2RtYV9hbGlhcyhkZXYsIFBDSV9ERVZGTihQQ0lfU0xPVChkZXYtPmRldmZu
KSwgMCkpOwp9CgovKgogKiBodHRwczovL2J1Z3ppbGxhLnJlZGhhdC5jb20vc2hvd19idWcuY2dp
P2lkPTYwNTg4OAogKgogKiBTb21lIFJpY29oIGRldmljZXMgdXNlIGZ1bmN0aW9uIDAgYXMgdGhl
IFBDSWUgcmVxdWVzdGVyIElEIGZvciBETUEuCiAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIo
UENJX1ZFTkRPUl9JRF9SSUNPSCwgMHhlODMyLCBxdWlya19kbWFfZnVuYzBfYWxpYXMpOwpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9SSUNPSCwgMHhlNDc2LCBxdWlya19k
bWFfZnVuYzBfYWxpYXMpOwoKc3RhdGljIHZvaWQgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKHN0cnVj
dCBwY2lfZGV2ICpkZXYpCnsKCWlmIChQQ0lfRlVOQyhkZXYtPmRldmZuKSAhPSAxKQoJCXBjaV9h
ZGRfZG1hX2FsaWFzKGRldiwgUENJX0RFVkZOKFBDSV9TTE9UKGRldi0+ZGV2Zm4pLCAxKSk7Cn0K
Ci8qCiAqIE1hcnZlbGwgODhTRTkxMjMgdXNlcyBmdW5jdGlvbiAxIGFzIHRoZSByZXF1ZXN0ZXIg
SUQgZm9yIERNQS4gIEluIHNvbWUKICogU0tVcyBmdW5jdGlvbiAxIGlzIHByZXNlbnQgYW5kIGlz
IGEgbGVnYWN5IElERSBjb250cm9sbGVyLCBpbiBvdGhlcgogKiBTS1VzIHRoaXMgZnVuY3Rpb24g
aXMgbm90IHByZXNlbnQsIG1ha2luZyB0aGlzIGEgZ2hvc3QgcmVxdWVzdGVyLgogKiBodHRwczov
L2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lkPTQyNjc5CiAqLwpERUNMQVJFX1BD
SV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9NQVJWRUxMX0VYVCwgMHg5MTIwLAoJCQkgcXVp
cmtfZG1hX2Z1bmMxX2FsaWFzKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1Jf
SURfTUFSVkVMTF9FWFQsIDB4OTEyMywKCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX01BUlZFTExfRVhULCAweDkxMjgsCgkJ
CSBxdWlya19kbWFfZnVuYzFfYWxpYXMpOwovKiBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcv
c2hvd19idWcuY2dpP2lkPTQyNjc5I2MxNCAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJ
X1ZFTkRPUl9JRF9NQVJWRUxMX0VYVCwgMHg5MTMwLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFz
KTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTUFSVkVMTF9FWFQsIDB4
OTE3MCwKCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7Ci8qIGh0dHBzOi8vYnVnemlsbGEua2Vy
bmVsLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDI2NzkjYzQ3ICsgYzU3ICovCkRFQ0xBUkVfUENJX0ZJ
WFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX01BUlZFTExfRVhULCAweDkxNzIsCgkJCSBxdWlya19k
bWFfZnVuYzFfYWxpYXMpOwovKiBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcu
Y2dpP2lkPTQyNjc5I2M1OSAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9J
RF9NQVJWRUxMX0VYVCwgMHg5MTdhLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKTsKLyogaHR0
cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00MjY3OSNjNzggKi8KREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTUFSVkVMTF9FWFQsIDB4OTE4MiwK
CQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7Ci8qIGh0dHBzOi8vYnVnemlsbGEua2VybmVsLm9y
Zy9zaG93X2J1Zy5jZ2k/aWQ9NDI2NzkjYzEzNCAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIo
UENJX1ZFTkRPUl9JRF9NQVJWRUxMX0VYVCwgMHg5MTgzLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2Fs
aWFzKTsKLyogaHR0cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00MjY3
OSNjNDYgKi8KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTUFSVkVMTF9F
WFQsIDB4OTFhMCwKCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7Ci8qIGh0dHBzOi8vYnVnemls
bGEua2VybmVsLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDI2NzkjYzEyNyAqLwpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9NQVJWRUxMX0VYVCwgMHg5MjIwLAoJCQkgcXVpcmtf
ZG1hX2Z1bmMxX2FsaWFzKTsKLyogaHR0cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVn
LmNnaT9pZD00MjY3OSNjNDkgKi8KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1Jf
SURfTUFSVkVMTF9FWFQsIDB4OTIzMCwKCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1RUSSwgMHgwNjQyLAoJCQkgcXVpcmtf
ZG1hX2Z1bmMxX2FsaWFzKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
VFRJLCAweDA2NDUsCgkJCSBxdWlya19kbWFfZnVuYzFfYWxpYXMpOwovKiBodHRwczovL2J1Z3Mu
Z2VudG9vLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDk3NjMwICovCkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX0pNSUNST04sCgkJCSBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1C
Mzg4X0VTRCwKCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7Ci8qIGh0dHBzOi8vYnVnemlsbGEu
a2VybmVsLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDI2NzkjYzExNyAqLwpERUNMQVJFX1BDSV9GSVhV
UF9IRUFERVIoMHgxYzI4LCAvKiBMaXRlLU9uICovCgkJCSAweDAxMjIsIC8qIFBsZXh0b3IgTTZF
IChNYXJ2ZWxsIDg4U1M5MTgzKSovCgkJCSBxdWlya19kbWFfZnVuYzFfYWxpYXMpOwoKLyoKICog
U29tZSBkZXZpY2VzIERNQSB3aXRoIHRoZSB3cm9uZyBkZXZmbiwgbm90IGp1c3QgdGhlIHdyb25n
IGZ1bmN0aW9uLgogKiBxdWlya19maXhlZF9kbWFfYWxpYXMoKSB1c2VzIHRoaXMgdGFibGUgdG8g
Y3JlYXRlIGZpeGVkIGFsaWFzZXMsIHdoZXJlCiAqIHRoZSBhbGlhcyBpcyAiZml4ZWQiIGFuZCBp
bmRlcGVuZGVudCBvZiB0aGUgZGV2aWNlIGRldmZuLgogKgogKiBGb3IgZXhhbXBsZSwgdGhlIEFk
YXB0ZWMgMzQwNSBpcyBhIFBDSWUgY2FyZCB3aXRoIGFuIEludGVsIDgwMzMzIEkvTwogKiBwcm9j
ZXNzb3IuICBUbyBzb2Z0d2FyZSwgdGhpcyBhcHBlYXJzIGFzIGEgUENJZS10by1QQ0kvWCBicmlk
Z2Ugd2l0aCBhCiAqIHNpbmdsZSBkZXZpY2Ugb24gdGhlIHNlY29uZGFyeSBidXMuICBJbiByZWFs
aXR5LCB0aGUgc2luZ2xlIGV4cG9zZWQKICogZGV2aWNlIGF0IDBlLjAgaXMgdGhlIEFkZHJlc3Mg
VHJhbnNsYXRpb24gVW5pdCAoQVRVKSBvZiB0aGUgY29udHJvbGxlcgogKiB0aGF0IHByb3ZpZGVz
IGEgYnJpZGdlIHRvIHRoZSBpbnRlcm5hbCBidXMgb2YgdGhlIEkvTyBwcm9jZXNzb3IuICBUaGUK
ICogY29udHJvbGxlciBzdXBwb3J0cyBwcml2YXRlIGRldmljZXMsIHdoaWNoIGNhbiBiZSBoaWRk
ZW4gZnJvbSBQQ0kgY29uZmlnCiAqIHNwYWNlLiAgSW4gdGhlIGNhc2Ugb2YgdGhlIEFkYXB0ZWMg
MzQwNSwgYSBwcml2YXRlIGRldmljZSBhdCAwMS4wCiAqIGFwcGVhcnMgdG8gYmUgdGhlIERNQSBl
bmdpbmUsIHdoaWNoIHRoZXJlZm9yZSBuZWVkcyB0byBiZWNvbWUgYSBETUEKICogYWxpYXMgZm9y
IHRoZSBkZXZpY2UuCiAqLwpzdGF0aWMgY29uc3Qgc3RydWN0IHBjaV9kZXZpY2VfaWQgZml4ZWRf
ZG1hX2FsaWFzX3RibFtdID0gewoJeyBQQ0lfREVWSUNFX1NVQihQQ0lfVkVORE9SX0lEX0FEQVBU
RUMyLCAweDAyODUsCgkJCSBQQ0lfVkVORE9SX0lEX0FEQVBURUMyLCAweDAyYmIpLCAvKiBBZGFw
dGVjIDM0MDUgKi8KCSAgLmRyaXZlcl9kYXRhID0gUENJX0RFVkZOKDEsIDApIH0sCgl7IFBDSV9E
RVZJQ0VfU1VCKFBDSV9WRU5ET1JfSURfQURBUFRFQzIsIDB4MDI4NSwKCQkJIFBDSV9WRU5ET1Jf
SURfQURBUFRFQzIsIDB4MDJiYyksIC8qIEFkYXB0ZWMgMzgwNSAqLwoJICAuZHJpdmVyX2RhdGEg
PSBQQ0lfREVWRk4oMSwgMCkgfSwKCXsgMCB9Cn07CgpzdGF0aWMgdm9pZCBxdWlya19maXhlZF9k
bWFfYWxpYXMoc3RydWN0IHBjaV9kZXYgKmRldikKewoJY29uc3Qgc3RydWN0IHBjaV9kZXZpY2Vf
aWQgKmlkOwoKCWlkID0gcGNpX21hdGNoX2lkKGZpeGVkX2RtYV9hbGlhc190YmwsIGRldik7Cglp
ZiAoaWQpCgkJcGNpX2FkZF9kbWFfYWxpYXMoZGV2LCBpZC0+ZHJpdmVyX2RhdGEpOwp9CgpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BREFQVEVDMiwgMHgwMjg1LCBxdWly
a19maXhlZF9kbWFfYWxpYXMpOwoKLyoKICogQSBmZXcgUENJZS10by1QQ0kgYnJpZGdlcyBmYWls
IHRvIGV4cG9zZSBhIFBDSWUgY2FwYWJpbGl0eSwgcmVzdWx0aW5nIGluCiAqIHVzaW5nIHRoZSB3
cm9uZyBETUEgYWxpYXMgZm9yIHRoZSBkZXZpY2UuICBTb21lIG9mIHRoZXNlIGRldmljZXMgY2Fu
IGJlCiAqIHVzZWQgYXMgZWl0aGVyIGZvcndhcmQgb3IgcmV2ZXJzZSBicmlkZ2VzLCBzbyB3ZSBu
ZWVkIHRvIHRlc3Qgd2hldGhlciB0aGUKICogZGV2aWNlIGlzIG9wZXJhdGluZyBpbiB0aGUgY29y
cmVjdCBtb2RlLiAgV2UgY291bGQgcHJvYmFibHkgYXBwbHkgdGhpcwogKiBxdWlyayB0byBQQ0lf
QU5ZX0lELCBidXQgZm9yIG5vdyB3ZSdsbCBqdXN0IHVzZSBrbm93biBvZmZlbmRlcnMuICBUaGUg
dGVzdAogKiBpcyBmb3IgYSBub24tcm9vdCwgbm9uLVBDSWUgYnJpZGdlIHdoZXJlIHRoZSB1cHN0
cmVhbSBkZXZpY2UgaXMgUENJZSBhbmQKICogaXMgbm90IGEgUENJZS10by1QQ0kgYnJpZGdlLCB0
aGVuIEBwZGV2IGlzIGFjdHVhbGx5IGEgUENJZS10by1QQ0kgYnJpZGdlLgogKi8Kc3RhdGljIHZv
aWQgcXVpcmtfdXNlX3BjaWVfYnJpZGdlX2RtYV9hbGlhcyhzdHJ1Y3QgcGNpX2RldiAqcGRldikK
ewoJaWYgKCFwY2lfaXNfcm9vdF9idXMocGRldi0+YnVzKSAmJgoJICAgIHBkZXYtPmhkcl90eXBl
ID09IFBDSV9IRUFERVJfVFlQRV9CUklER0UgJiYKCSAgICAhcGNpX2lzX3BjaWUocGRldikgJiYg
cGNpX2lzX3BjaWUocGRldi0+YnVzLT5zZWxmKSAmJgoJICAgIHBjaV9wY2llX3R5cGUocGRldi0+
YnVzLT5zZWxmKSAhPSBQQ0lfRVhQX1RZUEVfUENJX0JSSURHRSkKCQlwZGV2LT5kZXZfZmxhZ3Mg
fD0gUENJX0RFVl9GTEFHX1BDSUVfQlJJREdFX0FMSUFTOwp9Ci8qIEFTTTEwODMvMTA4NSwgaHR0
cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00NDg4MSNjNDYgKi8KREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfQVNNRURJQSwgMHgxMDgwLAoJCQkg
cXVpcmtfdXNlX3BjaWVfYnJpZGdlX2RtYV9hbGlhcyk7Ci8qIFR1bmRyYSA4MTEzLCBodHRwczov
L2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lkPTQ0ODgxI2M0MyAqLwpERUNMQVJF
X1BDSV9GSVhVUF9IRUFERVIoMHgxMGUzLCAweDgxMTMsIHF1aXJrX3VzZV9wY2llX2JyaWRnZV9k
bWFfYWxpYXMpOwovKiBJVEUgODg5MiwgaHR0cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3df
YnVnLmNnaT9pZD03MzU1MSAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoMHgxMjgzLCAweDg4
OTIsIHF1aXJrX3VzZV9wY2llX2JyaWRnZV9kbWFfYWxpYXMpOwovKiBJVEUgODg5MyBoYXMgdGhl
IHNhbWUgcHJvYmxlbSBhcyB0aGUgODg5MiAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoMHgx
MjgzLCAweDg4OTMsIHF1aXJrX3VzZV9wY2llX2JyaWRnZV9kbWFfYWxpYXMpOwovKiBJbnRlbCA4
MjgwMSwgaHR0cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00NDg4MSNj
NDkgKi8KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKDB4ODA4NiwgMHgyNDRlLCBxdWlya191c2Vf
cGNpZV9icmlkZ2VfZG1hX2FsaWFzKTsKCi8qCiAqIE1JQyB4MjAwIE5UQiBmb3J3YXJkcyBQQ0ll
IHRyYWZmaWMgdXNpbmcgbXVsdGlwbGUgYWxpZW4gUklEcy4gVGhleSBoYXZlIHRvCiAqIGJlIGFk
ZGVkIGFzIGFsaWFzZXMgdG8gdGhlIERNQSBkZXZpY2UgaW4gb3JkZXIgdG8gYWxsb3cgYnVmZmVy
IGFjY2VzcwogKiB3aGVuIElPTU1VIGlzIGVuYWJsZWQuIEZvbGxvd2luZyBkZXZmbnMgaGF2ZSB0
byBtYXRjaCBSSVQtTFVUIHRhYmxlCiAqIHByb2dyYW1tZWQgaW4gdGhlIEVFUFJPTS4KICovCnN0
YXRpYyB2b2lkIHF1aXJrX21pY194MjAwX2RtYV9hbGlhcyhzdHJ1Y3QgcGNpX2RldiAqcGRldikK
ewoJcGNpX2FkZF9kbWFfYWxpYXMocGRldiwgUENJX0RFVkZOKDB4MTAsIDB4MCkpOwoJcGNpX2Fk
ZF9kbWFfYWxpYXMocGRldiwgUENJX0RFVkZOKDB4MTEsIDB4MCkpOwoJcGNpX2FkZF9kbWFfYWxp
YXMocGRldiwgUENJX0RFVkZOKDB4MTIsIDB4MykpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURF
UihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDIyNjAsIHF1aXJrX21pY194MjAwX2RtYV9hbGlhcyk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDIyNjQsIHF1
aXJrX21pY194MjAwX2RtYV9hbGlhcyk7CgovKgogKiBUaGUgSU9NTVUgYW5kIGludGVycnVwdCBj
b250cm9sbGVyIG9uIEJyb2FkY29tIFZ1bGNhbi9DYXZpdW0gVGh1bmRlclgyIGFyZQogKiBhc3Nv
Y2lhdGVkIG5vdCBhdCB0aGUgcm9vdCBidXMsIGJ1dCBhdCBhIGJyaWRnZSBiZWxvdy4gVGhpcyBx
dWlyayBhdm9pZHMKICogZ2VuZXJhdGluZyBpbnZhbGlkIERNQSBhbGlhc2VzLgogKi8Kc3RhdGlj
IHZvaWQgcXVpcmtfYnJpZGdlX2Nhdm1fdGhyeDJfcGNpZV9yb290KHN0cnVjdCBwY2lfZGV2ICpw
ZGV2KQp7CglwZGV2LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFHU19CUklER0VfWExBVEVfUk9P
VDsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9CUk9BRENPTSwgMHg5
MDAwLAoJCQkJcXVpcmtfYnJpZGdlX2Nhdm1fdGhyeDJfcGNpZV9yb290KTsKREVDTEFSRV9QQ0lf
RklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfQlJPQURDT00sIDB4OTA4NCwKCQkJCXF1aXJrX2Jy
aWRnZV9jYXZtX3RocngyX3BjaWVfcm9vdCk7CgovKgogKiBJbnRlcnNpbC9UZWNod2VsbCBUVzY4
Nls0NTg5XS1iYXNlZCB2aWRlbyBjYXB0dXJlIGNhcmRzIGhhdmUgYW4gZW1wdHkgKHplcm8pCiAq
IGNsYXNzIGNvZGUuICBGaXggaXQuCiAqLwpzdGF0aWMgdm9pZCBxdWlya190dzY4NnhfY2xhc3Mo
c3RydWN0IHBjaV9kZXYgKnBkZXYpCnsKCXUzMiBjbGFzcyA9IHBkZXYtPmNsYXNzOwoKCS8qIFVz
ZSAiTXVsdGltZWRpYSBjb250cm9sbGVyIiBjbGFzcyAqLwoJcGRldi0+Y2xhc3MgPSAoUENJX0NM
QVNTX01VTFRJTUVESUFfT1RIRVIgPDwgOCkgfCAweDAxOwoJcGNpX2luZm8ocGRldiwgIlRXNjg2
eCBQQ0kgY2xhc3Mgb3ZlcnJpZGRlbiAoJSMwOHggLT4gJSMwOHgpXG4iLAoJCSBjbGFzcywgcGRl
di0+Y2xhc3MpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKDB4MTc5NywgMHg2ODY0
LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3R3Njg2eF9jbGFzcyk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKDB4MTc5NywgMHg2ODY1LCBQQ0lfQ0xBU1Nf
Tk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3R3Njg2eF9jbGFzcyk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0NMQVNTX0VBUkxZKDB4MTc5NywgMHg2ODY4LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQs
IDgsCgkJCSAgICAgIHF1aXJrX3R3Njg2eF9jbGFzcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNT
X0VBUkxZKDB4MTc5NywgMHg2ODY5LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAg
IHF1aXJrX3R3Njg2eF9jbGFzcyk7CgovKgogKiBTb21lIGRldmljZXMgaGF2ZSBwcm9ibGVtcyB3
aXRoIFRyYW5zYWN0aW9uIExheWVyIFBhY2tldHMgd2l0aCB0aGUgUmVsYXhlZAogKiBPcmRlcmlu
ZyBBdHRyaWJ1dGUgc2V0LiAgU3VjaCBkZXZpY2VzIHNob3VsZCBtYXJrIHRoZW1zZWx2ZXMgYW5k
IG90aGVyCiAqIGRldmljZSBkcml2ZXJzIHNob3VsZCBjaGVjayBiZWZvcmUgc2VuZGluZyBUTFBz
IHdpdGggUk8gc2V0LgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfcmVsYXhlZG9yZGVyaW5nX2Rpc2Fi
bGUoc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFH
U19OT19SRUxBWEVEX09SREVSSU5HOwoJcGNpX2luZm8oZGV2LCAiRGlzYWJsZSBSZWxheGVkIE9y
ZGVyaW5nIEF0dHJpYnV0ZXMgdG8gYXZvaWQgUENJZSBDb21wbGV0aW9uIGVycmF0dW1cbiIpOwp9
CgovKgogKiBJbnRlbCBYZW9uIHByb2Nlc3NvcnMgYmFzZWQgb24gQnJvYWR3ZWxsL0hhc3dlbGwg
bWljcm9hcmNoaXRlY3R1cmUgUm9vdAogKiBDb21wbGV4IGhhdmUgYSBGbG93IENvbnRyb2wgQ3Jl
ZGl0IGlzc3VlIHdoaWNoIGNhbiBjYXVzZSBwZXJmb3JtYW5jZQogKiBwcm9ibGVtcyB3aXRoIFVw
c3RyZWFtIFRyYW5zYWN0aW9uIExheWVyIFBhY2tldHMgd2l0aCBSZWxheGVkIE9yZGVyaW5nIHNl
dC4KICovCkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUws
IDB4NmYwMSwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVk
b3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5E
T1JfSURfSU5URUwsIDB4NmYwMiwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBx
dWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VB
UkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYwMywgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4
LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYwNCwgUENJX0NMQVNTX05P
VF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYwNSwg
UENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdf
ZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4NmYwNiwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxh
eGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4NmYwNywgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAg
ICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNT
X0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYwOCwgUENJX0NMQVNTX05PVF9ERUZJTkVE
LCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYwOSwgUENJX0NMQVNT
X05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYw
YSwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJp
bmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURf
SU5URUwsIDB4NmYwYiwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19y
ZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4NmYwYywgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkg
ICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NM
QVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYwZCwgUENJX0NMQVNTX05PVF9ERUZJ
TkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NmYwZSwgUENJX0NM
QVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJs
ZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MmYwMSwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3Jk
ZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4MmYwMiwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWly
a19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZ
KFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwMywgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJ
CQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwNCwgUENJX0NMQVNTX05PVF9E
RUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwNSwgUENJ
X0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlz
YWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUws
IDB4MmYwNiwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVk
b3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5E
T1JfSURfSU5URUwsIDB4MmYwNywgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBx
dWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VB
UkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwOCwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4
LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwOSwgUENJX0NMQVNTX05P
VF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwYSwg
UENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdf
ZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MmYwYiwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxh
eGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MmYwYywgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJCQkgICAg
ICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNT
X0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwZCwgUENJX0NMQVNTX05PVF9ERUZJTkVE
LCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MmYwZSwgUENJX0NMQVNT
X05PVF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7
CgovKgogKiBUaGUgQU1EIEFSTSBBMTEwMCAoYWthICJTRUFUVExFIikgU29DIGhhcyBhIGJ1ZyBp
biBpdHMgUENJZSBSb290IENvbXBsZXgKICogd2hlcmUgVXBzdHJlYW0gVHJhbnNhY3Rpb24gTGF5
ZXIgUGFja2V0cyB3aXRoIHRoZSBSZWxheGVkIE9yZGVyaW5nCiAqIEF0dHJpYnV0ZSBjbGVhciBh
cmUgYWxsb3dlZCB0byBieXBhc3MgZWFybGllciBUTFBzIHdpdGggUmVsYXhlZCBPcmRlcmluZwog
KiBzZXQuICBUaGlzIGlzIGEgdmlvbGF0aW9uIG9mIHRoZSBQQ0llIDMuMCBUcmFuc2FjdGlvbiBP
cmRlcmluZyBSdWxlcwogKiBvdXRsaW5lZCBpbiBTZWN0aW9uIDIuNC4xIChQQ0kgRXhwcmVzcyhy
KSBCYXNlIFNwZWNpZmljYXRpb24gUmV2aXNpb24gMy4wCiAqIE5vdmVtYmVyIDEwLCAyMDEwKS4g
IEFzIGEgcmVzdWx0LCBvbiB0aGlzIHBsYXRmb3JtIHdlIGNhbid0IHVzZSBSZWxheGVkCiAqIE9y
ZGVyaW5nIGZvciBVcHN0cmVhbSBUTFBzLgogKi8KREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFS
TFkoUENJX1ZFTkRPUl9JRF9BTUQsIDB4MWEwMCwgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LAoJ
CQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfQU1ELCAweDFhMDEsIFBDSV9DTEFTU19OT1RfREVG
SU5FRCwgOCwKCQkJICAgICAgcXVpcmtfcmVsYXhlZG9yZGVyaW5nX2Rpc2FibGUpOwpERUNMQVJF
X1BDSV9GSVhVUF9DTEFTU19FQVJMWShQQ0lfVkVORE9SX0lEX0FNRCwgMHgxYTAyLCBQQ0lfQ0xB
U1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxl
KTsKCi8qCiAqIFBlciBQQ0llIHIzLjAsIHNlYyAyLjIuOSwgIkNvbXBsZXRpb24gaGVhZGVycyBt
dXN0IHN1cHBseSB0aGUgc2FtZQogKiB2YWx1ZXMgZm9yIHRoZSBBdHRyaWJ1dGUgYXMgd2VyZSBz
dXBwbGllZCBpbiB0aGUgaGVhZGVyIG9mIHRoZQogKiBjb3JyZXNwb25kaW5nIFJlcXVlc3QsIGV4
Y2VwdCBhcyBleHBsaWNpdGx5IGFsbG93ZWQgd2hlbiBJRE8gaXMgdXNlZC4iCiAqCiAqIElmIGEg
bm9uLWNvbXBsaWFudCBkZXZpY2UgZ2VuZXJhdGVzIGEgY29tcGxldGlvbiB3aXRoIGEgZGlmZmVy
ZW50CiAqIGF0dHJpYnV0ZSB0aGFuIHRoZSByZXF1ZXN0LCB0aGUgcmVjZWl2ZXIgbWF5IGFjY2Vw
dCBpdCAod2hpY2ggaXRzZWxmCiAqIHNlZW1zIG5vbi1jb21wbGlhbnQgYmFzZWQgb24gc2VjIDIu
My4yKSwgb3IgaXQgbWF5IGhhbmRsZSBpdCBhcyBhCiAqIE1hbGZvcm1lZCBUTFAgb3IgYW4gVW5l
eHBlY3RlZCBDb21wbGV0aW9uLCB3aGljaCB3aWxsIHByb2JhYmx5IGxlYWQgdG8gYQogKiBkZXZp
Y2UgYWNjZXNzIHRpbWVvdXQuCiAqCiAqIElmIHRoZSBub24tY29tcGxpYW50IGRldmljZSBnZW5l
cmF0ZXMgY29tcGxldGlvbnMgd2l0aCB6ZXJvIGF0dHJpYnV0ZXMKICogKGluc3RlYWQgb2YgY29w
eWluZyB0aGUgYXR0cmlidXRlcyBmcm9tIHRoZSByZXF1ZXN0KSwgd2UgY2FuIHdvcmsgYXJvdW5k
CiAqIHRoaXMgYnkgZGlzYWJsaW5nIHRoZSAiUmVsYXhlZCBPcmRlcmluZyIgYW5kICJObyBTbm9v
cCIgYXR0cmlidXRlcyBpbgogKiB1cHN0cmVhbSBkZXZpY2VzIHNvIHRoZXkgYWx3YXlzIGdlbmVy
YXRlIHJlcXVlc3RzIHdpdGggemVybyBhdHRyaWJ1dGVzLgogKgogKiBUaGlzIGFmZmVjdHMgb3Ro
ZXIgZGV2aWNlcyB1bmRlciB0aGUgc2FtZSBSb290IFBvcnQsIGJ1dCBzaW5jZSB0aGVzZQogKiBh
dHRyaWJ1dGVzIGFyZSBwZXJmb3JtYW5jZSBoaW50cywgdGhlcmUgc2hvdWxkIGJlIG5vIGZ1bmN0
aW9uYWwgcHJvYmxlbS4KICoKICogTm90ZSB0aGF0IENvbmZpZ3VyYXRpb24gU3BhY2UgYWNjZXNz
ZXMgYXJlIG5ldmVyIHN1cHBvc2VkIHRvIGhhdmUgVExQCiAqIEF0dHJpYnV0ZXMsIHNvIHdlJ3Jl
IHNhZmUgd2FpdGluZyB0aWxsIGFmdGVyIGFueSBDb25maWd1cmF0aW9uIFNwYWNlCiAqIGFjY2Vz
c2VzIHRvIGRvIHRoZSBSb290IFBvcnQgZml4dXAuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19kaXNh
YmxlX3Jvb3RfcG9ydF9hdHRyaWJ1dGVzKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7CglzdHJ1Y3Qg
cGNpX2RldiAqcm9vdF9wb3J0ID0gcGNpX2ZpbmRfcGNpZV9yb290X3BvcnQocGRldik7CgoJaWYg
KCFyb290X3BvcnQpIHsKCQlwY2lfd2FybihwZGV2LCAiUENJZSBDb21wbGV0aW9uIGVycmF0dW0g
bWF5IGNhdXNlIGRldmljZSBlcnJvcnNcbiIpOwoJCXJldHVybjsKCX0KCglwY2lfaW5mbyhyb290
X3BvcnQsICJEaXNhYmxpbmcgTm8gU25vb3AvUmVsYXhlZCBPcmRlcmluZyBBdHRyaWJ1dGVzIHRv
IGF2b2lkIFBDSWUgQ29tcGxldGlvbiBlcnJhdHVtIGluICVzXG4iLAoJCSBkZXZfbmFtZSgmcGRl
di0+ZGV2KSk7CglwY2llX2NhcGFiaWxpdHlfY2xlYXJfYW5kX3NldF93b3JkKHJvb3RfcG9ydCwg
UENJX0VYUF9ERVZDVEwsCgkJCQkJICAgUENJX0VYUF9ERVZDVExfUkVMQVhfRU4gfAoJCQkJCSAg
IFBDSV9FWFBfREVWQ1RMX05PU05PT1BfRU4sIDApOwp9CgovKgogKiBUaGUgQ2hlbHNpbyBUNSBj
aGlwIGZhaWxzIHRvIGNvcHkgVExQIEF0dHJpYnV0ZXMgZnJvbSBhIFJlcXVlc3QgdG8gdGhlCiAq
IENvbXBsZXRpb24gaXQgZ2VuZXJhdGVzLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfY2hlbHNpb19U
NV9kaXNhYmxlX3Jvb3RfcG9ydF9hdHRyaWJ1dGVzKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7Cgkv
KgoJICogVGhpcyBtYXNrL2NvbXBhcmUgb3BlcmF0aW9uIHNlbGVjdHMgZm9yIFBoeXNpY2FsIEZ1
bmN0aW9uIDQgb24gYQoJICogVDUuICBXZSBvbmx5IG5lZWQgdG8gZml4IHVwIHRoZSBSb290IFBv
cnQgb25jZSBmb3IgYW55IG9mIHRoZQoJICogUEZzLiAgUEZbMC4uM10gaGF2ZSBQQ0kgRGV2aWNl
IElEcyBvZiAweDUweHgsIGJ1dCBQRjQgaXMgdW5pcXVlbHkKCSAqIDB4NTR4eCBzbyB3ZSB1c2Ug
dGhhdCBvbmUuCgkgKi8KCWlmICgocGRldi0+ZGV2aWNlICYgMHhmZjAwKSA9PSAweDU0MDApCgkJ
cXVpcmtfZGlzYWJsZV9yb290X3BvcnRfYXR0cmlidXRlcyhwZGV2KTsKfQpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9DSEVMU0lPLCBQQ0lfQU5ZX0lELAoJCQkgcXVpcmtf
Y2hlbHNpb19UNV9kaXNhYmxlX3Jvb3RfcG9ydF9hdHRyaWJ1dGVzKTsKCi8qCiAqIEFNRCBoYXMg
aW5kaWNhdGVkIHRoYXQgdGhlIGRldmljZXMgYmVsb3cgZG8gbm90IHN1cHBvcnQgcGVlci10by1w
ZWVyCiAqIGluIGFueSBzeXN0ZW0gd2hlcmUgdGhleSBhcmUgZm91bmQgaW4gdGhlIHNvdXRoYnJp
ZGdlIHdpdGggYW4gQU1ECiAqIElPTU1VIGluIHRoZSBzeXN0ZW0uICBNdWx0aWZ1bmN0aW9uIGRl
dmljZXMgdGhhdCBkbyBub3Qgc3VwcG9ydAogKiBwZWVyLXRvLXBlZXIgYmV0d2VlbiBmdW5jdGlv
bnMgY2FuIGNsYWltIHRvIHN1cHBvcnQgYSBzdWJzZXQgb2YgQUNTLgogKiBTdWNoIGRldmljZXMg
ZWZmZWN0aXZlbHkgZW5hYmxlIHJlcXVlc3QgcmVkaXJlY3QgKFJSKSBhbmQgY29tcGxldGlvbgog
KiByZWRpcmVjdCAoQ1IpIHNpbmNlIGFsbCB0cmFuc2FjdGlvbnMgYXJlIHJlZGlyZWN0ZWQgdG8g
dGhlIHVwc3RyZWFtCiAqIHJvb3QgY29tcGxleC4KICoKICogaHR0cDovL3Blcm1hbGluay5nbWFu
ZS5vcmcvZ21hbmUuY29tcC5lbXVsYXRvcnMua3ZtLmRldmVsLzk0MDg2CiAqIGh0dHA6Ly9wZXJt
YWxpbmsuZ21hbmUub3JnL2dtYW5lLmNvbXAuZW11bGF0b3JzLmt2bS5kZXZlbC85NDEwMgogKiBo
dHRwOi8vcGVybWFsaW5rLmdtYW5lLm9yZy9nbWFuZS5jb21wLmVtdWxhdG9ycy5rdm0uZGV2ZWwv
OTk0MDIKICoKICogMTAwMjo0Mzg1IFNCeDAwIFNNQnVzIENvbnRyb2xsZXIKICogMTAwMjo0Mzlj
IFNCN3gwL1NCOHgwL1NCOXgwIElERSBDb250cm9sbGVyCiAqIDEwMDI6NDM4MyBTQngwMCBBemFs
aWEgKEludGVsIEhEQSkKICogMTAwMjo0MzlkIFNCN3gwL1NCOHgwL1NCOXgwIExQQyBob3N0IGNv
bnRyb2xsZXIKICogMTAwMjo0Mzg0IFNCeDAwIFBDSSB0byBQQ0kgQnJpZGdlCiAqIDEwMDI6NDM5
OSBTQjd4MC9TQjh4MC9TQjl4MCBVU0IgT0hDSTIgQ29udHJvbGxlcgogKgogKiBodHRwczovL2J1
Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lkPTgxODQxI2MxNQogKgogKiAxMDIyOjc4
MGYgW0FNRF0gRkNIIFBDSSBCcmlkZ2UKICogMTAyMjo3ODA5IFtBTURdIEZDSCBVU0IgT0hDSSBD
b250cm9sbGVyCiAqLwpzdGF0aWMgaW50IHBjaV9xdWlya19hbWRfc2JfYWNzKHN0cnVjdCBwY2lf
ZGV2ICpkZXYsIHUxNiBhY3NfZmxhZ3MpCnsKI2lmZGVmIENPTkZJR19BQ1BJCglzdHJ1Y3QgYWNw
aV90YWJsZV9oZWFkZXIgKmhlYWRlciA9IE5VTEw7CglhY3BpX3N0YXR1cyBzdGF0dXM7CgoJLyog
VGFyZ2V0aW5nIG11bHRpZnVuY3Rpb24gZGV2aWNlcyBvbiB0aGUgU0IgKGFwcGVhcnMgb24gcm9v
dCBidXMpICovCglpZiAoIWRldi0+bXVsdGlmdW5jdGlvbiB8fCAhcGNpX2lzX3Jvb3RfYnVzKGRl
di0+YnVzKSkKCQlyZXR1cm4gLUVOT0RFVjsKCgkvKiBUaGUgSVZSUyB0YWJsZSBkZXNjcmliZXMg
dGhlIEFNRCBJT01NVSAqLwoJc3RhdHVzID0gYWNwaV9nZXRfdGFibGUoIklWUlMiLCAwLCAmaGVh
ZGVyKTsKCWlmIChBQ1BJX0ZBSUxVUkUoc3RhdHVzKSkKCQlyZXR1cm4gLUVOT0RFVjsKCgkvKiBG
aWx0ZXIgb3V0IGZsYWdzIG5vdCBhcHBsaWNhYmxlIHRvIG11bHRpZnVuY3Rpb24gKi8KCWFjc19m
bGFncyAmPSAoUENJX0FDU19SUiB8IFBDSV9BQ1NfQ1IgfCBQQ0lfQUNTX0VDIHwgUENJX0FDU19E
VCk7CgoJcmV0dXJuIGFjc19mbGFncyAmIH4oUENJX0FDU19SUiB8IFBDSV9BQ1NfQ1IpID8gMCA6
IDE7CiNlbHNlCglyZXR1cm4gLUVOT0RFVjsKI2VuZGlmCn0KCnN0YXRpYyBib29sIHBjaV9xdWly
a19jYXZpdW1fYWNzX21hdGNoKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCS8qCgkgKiBFZmZlY3Rp
dmVseSBzZWxlY3RzIGFsbCBkb3duc3RyZWFtIHBvcnRzIGZvciB3aG9sZSBUaHVuZGVyWCAxCgkg
KiBmYW1pbHkgYnkgMHhmODAwIG1hc2sgKHdoaWNoIHJlcHJlc2VudHMgOCBTb0NzKSwgd2hpbGUg
dGhlIGxvd2VyCgkgKiBiaXRzIG9mIGRldmljZSBJRCBhcmUgdXNlZCB0byBpbmRpY2F0ZSB3aGlj
aCBzdWJkZXZpY2UgaXMgdXNlZAoJICogd2l0aGluIHRoZSBTb0MuCgkgKi8KCXJldHVybiAocGNp
X2lzX3BjaWUoZGV2KSAmJgoJCShwY2lfcGNpZV90eXBlKGRldikgPT0gUENJX0VYUF9UWVBFX1JP
T1RfUE9SVCkgJiYKCQkoKGRldi0+ZGV2aWNlICYgMHhmODAwKSA9PSAweGEwMDApKTsKfQoKc3Rh
dGljIGludCBwY2lfcXVpcmtfY2F2aXVtX2FjcyhzdHJ1Y3QgcGNpX2RldiAqZGV2LCB1MTYgYWNz
X2ZsYWdzKQp7CgkvKgoJICogQ2F2aXVtIHJvb3QgcG9ydHMgZG9uJ3QgYWR2ZXJ0aXNlIGFuIEFD
UyBjYXBhYmlsaXR5LiAgSG93ZXZlciwKCSAqIHRoZSBSVEwgaW50ZXJuYWxseSBpbXBsZW1lbnRz
IHNpbWlsYXIgcHJvdGVjdGlvbiBhcyBpZiBBQ1MgaGFkCgkgKiBSZXF1ZXN0IFJlZGlyZWN0aW9u
LCBDb21wbGV0aW9uIFJlZGlyZWN0aW9uLCBTb3VyY2UgVmFsaWRhdGlvbiwKCSAqIGFuZCBVcHN0
cmVhbSBGb3J3YXJkaW5nIGZlYXR1cmVzIGVuYWJsZWQuICBBc3NlcnQgdGhhdCB0aGUKCSAqIGhh
cmR3YXJlIGltcGxlbWVudHMgYW5kIGVuYWJsZXMgZXF1aXZhbGVudCBBQ1MgZnVuY3Rpb25hbGl0
eSBmb3IKCSAqIHRoZXNlIGZsYWdzLgoJICovCglhY3NfZmxhZ3MgJj0gfihQQ0lfQUNTX1JSIHwg
UENJX0FDU19DUiB8IFBDSV9BQ1NfU1YgfCBQQ0lfQUNTX1VGKTsKCglpZiAoIXBjaV9xdWlya19j
YXZpdW1fYWNzX21hdGNoKGRldikpCgkJcmV0dXJuIC1FTk9UVFk7CgoJcmV0dXJuIGFjc19mbGFn
cyA/IDAgOiAxOwp9CgpzdGF0aWMgaW50IHBjaV9xdWlya194Z2VuZV9hY3Moc3RydWN0IHBjaV9k
ZXYgKmRldiwgdTE2IGFjc19mbGFncykKewoJLyoKCSAqIFgtR2VuZSBSb290IFBvcnRzIG1hdGNo
aW5nIHRoaXMgcXVpcmsgZG8gbm90IGFsbG93IHBlZXItdG8tcGVlcgoJICogdHJhbnNhY3Rpb25z
IHdpdGggb3RoZXJzLCBhbGxvd2luZyBtYXNraW5nIG91dCB0aGVzZSBiaXRzIGFzIGlmIHRoZXkK
CSAqIHdlcmUgdW5pbXBsZW1lbnRlZCBpbiB0aGUgQUNTIGNhcGFiaWxpdHkuCgkgKi8KCWFjc19m
bGFncyAmPSB+KFBDSV9BQ1NfU1YgfCBQQ0lfQUNTX1JSIHwgUENJX0FDU19DUiB8IFBDSV9BQ1Nf
VUYpOwoKCXJldHVybiBhY3NfZmxhZ3MgPyAwIDogMTsKfQoKLyoKICogTWFueSBJbnRlbCBQQ0gg
cm9vdCBwb3J0cyBkbyBwcm92aWRlIEFDUy1saWtlIGZlYXR1cmVzIHRvIGRpc2FibGUgcGVlcgog
KiB0cmFuc2FjdGlvbnMgYW5kIHZhbGlkYXRlIGJ1cyBudW1iZXJzIGluIHJlcXVlc3RzLCBidXQg
ZG8gbm90IHByb3ZpZGUgYW4KICogYWN0dWFsIFBDSWUgQUNTIGNhcGFiaWxpdHkuICBUaGlzIGlz
IHRoZSBsaXN0IG9mIGRldmljZSBJRHMga25vd24gdG8gZmFsbAogKiBpbnRvIHRoYXQgY2F0ZWdv
cnkgYXMgcHJvdmlkZWQgYnkgSW50ZWwgaW4gUmVkIEhhdCBidWd6aWxsYSAxMDM3Njg0LgogKi8K
c3RhdGljIGNvbnN0IHUxNiBwY2lfcXVpcmtfaW50ZWxfcGNoX2Fjc19pZHNbXSA9IHsKCS8qIEli
ZXhwZWFrIFBDSCAqLwoJMHgzYjQyLCAweDNiNDMsIDB4M2I0NCwgMHgzYjQ1LCAweDNiNDYsIDB4
M2I0NywgMHgzYjQ4LCAweDNiNDksCgkweDNiNGEsIDB4M2I0YiwgMHgzYjRjLCAweDNiNGQsIDB4
M2I0ZSwgMHgzYjRmLCAweDNiNTAsIDB4M2I1MSwKCS8qIENvdWdhcnBvaW50IFBDSCAqLwoJMHgx
YzEwLCAweDFjMTEsIDB4MWMxMiwgMHgxYzEzLCAweDFjMTQsIDB4MWMxNSwgMHgxYzE2LCAweDFj
MTcsCgkweDFjMTgsIDB4MWMxOSwgMHgxYzFhLCAweDFjMWIsIDB4MWMxYywgMHgxYzFkLCAweDFj
MWUsIDB4MWMxZiwKCS8qIFBhbnRoZXJwb2ludCBQQ0ggKi8KCTB4MWUxMCwgMHgxZTExLCAweDFl
MTIsIDB4MWUxMywgMHgxZTE0LCAweDFlMTUsIDB4MWUxNiwgMHgxZTE3LAoJMHgxZTE4LCAweDFl
MTksIDB4MWUxYSwgMHgxZTFiLCAweDFlMWMsIDB4MWUxZCwgMHgxZTFlLCAweDFlMWYsCgkvKiBM
eW54cG9pbnQtSCBQQ0ggKi8KCTB4OGMxMCwgMHg4YzExLCAweDhjMTIsIDB4OGMxMywgMHg4YzE0
LCAweDhjMTUsIDB4OGMxNiwgMHg4YzE3LAoJMHg4YzE4LCAweDhjMTksIDB4OGMxYSwgMHg4YzFi
LCAweDhjMWMsIDB4OGMxZCwgMHg4YzFlLCAweDhjMWYsCgkvKiBMeW54cG9pbnQtTFAgUENIICov
CgkweDljMTAsIDB4OWMxMSwgMHg5YzEyLCAweDljMTMsIDB4OWMxNCwgMHg5YzE1LCAweDljMTYs
IDB4OWMxNywKCTB4OWMxOCwgMHg5YzE5LCAweDljMWEsIDB4OWMxYiwKCS8qIFdpbGRjYXQgUENI
ICovCgkweDljOTAsIDB4OWM5MSwgMHg5YzkyLCAweDljOTMsIDB4OWM5NCwgMHg5Yzk1LCAweDlj
OTYsIDB4OWM5NywKCTB4OWM5OCwgMHg5Yzk5LCAweDljOWEsIDB4OWM5YiwKCS8qIFBhdHNidXJn
IChYNzkpIFBDSCAqLwoJMHgxZDEwLCAweDFkMTIsIDB4MWQxNCwgMHgxZDE2LCAweDFkMTgsIDB4
MWQxYSwgMHgxZDFjLCAweDFkMWUsCgkvKiBXZWxsc2J1cmcgKFg5OSkgUENIICovCgkweDhkMTAs
IDB4OGQxMSwgMHg4ZDEyLCAweDhkMTMsIDB4OGQxNCwgMHg4ZDE1LCAweDhkMTYsIDB4OGQxNywK
CTB4OGQxOCwgMHg4ZDE5LCAweDhkMWEsIDB4OGQxYiwgMHg4ZDFjLCAweDhkMWQsIDB4OGQxZSwK
CS8qIEx5bnggUG9pbnQgKDkgc2VyaWVzKSBQQ0ggKi8KCTB4OGM5MCwgMHg4YzkyLCAweDhjOTQs
IDB4OGM5NiwgMHg4Yzk4LCAweDhjOWEsIDB4OGM5YywgMHg4YzllLAp9OwoKc3RhdGljIGJvb2wg
cGNpX3F1aXJrX2ludGVsX3BjaF9hY3NfbWF0Y2goc3RydWN0IHBjaV9kZXYgKmRldikKewoJaW50
IGk7CgoJLyogRmlsdGVyIG91dCBhIGZldyBvYnZpb3VzIG5vbi1tYXRjaGVzIGZpcnN0ICovCglp
ZiAoIXBjaV9pc19wY2llKGRldikgfHwgcGNpX3BjaWVfdHlwZShkZXYpICE9IFBDSV9FWFBfVFlQ
RV9ST09UX1BPUlQpCgkJcmV0dXJuIGZhbHNlOwoKCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpF
KHBjaV9xdWlya19pbnRlbF9wY2hfYWNzX2lkcyk7IGkrKykKCQlpZiAocGNpX3F1aXJrX2ludGVs
X3BjaF9hY3NfaWRzW2ldID09IGRldi0+ZGV2aWNlKQoJCQlyZXR1cm4gdHJ1ZTsKCglyZXR1cm4g
ZmFsc2U7Cn0KCiNkZWZpbmUgSU5URUxfUENIX0FDU19GTEFHUyAoUENJX0FDU19SUiB8IFBDSV9B
Q1NfQ1IgfCBQQ0lfQUNTX1VGIHwgUENJX0FDU19TVikKCnN0YXRpYyBpbnQgcGNpX3F1aXJrX2lu
dGVsX3BjaF9hY3Moc3RydWN0IHBjaV9kZXYgKmRldiwgdTE2IGFjc19mbGFncykKewoJdTE2IGZs
YWdzID0gZGV2LT5kZXZfZmxhZ3MgJiBQQ0lfREVWX0ZMQUdTX0FDU19FTkFCTEVEX1FVSVJLID8K
CQkgICAgSU5URUxfUENIX0FDU19GTEFHUyA6IDA7CgoJaWYgKCFwY2lfcXVpcmtfaW50ZWxfcGNo
X2Fjc19tYXRjaChkZXYpKQoJCXJldHVybiAtRU5PVFRZOwoKCXJldHVybiBhY3NfZmxhZ3MgJiB+
ZmxhZ3MgPyAwIDogMTsKfQoKLyoKICogVGhlc2UgUUNPTSByb290IHBvcnRzIGRvIHByb3ZpZGUg
QUNTLWxpa2UgZmVhdHVyZXMgdG8gZGlzYWJsZSBwZWVyCiAqIHRyYW5zYWN0aW9ucyBhbmQgdmFs
aWRhdGUgYnVzIG51bWJlcnMgaW4gcmVxdWVzdHMsIGJ1dCBkbyBub3QgcHJvdmlkZSBhbgogKiBh
Y3R1YWwgUENJZSBBQ1MgY2FwYWJpbGl0eS4gIEhhcmR3YXJlIHN1cHBvcnRzIHNvdXJjZSB2YWxp
ZGF0aW9uIGJ1dCBpdAogKiB3aWxsIHJlcG9ydCB0aGUgaXNzdWUgYXMgQ29tcGxldGVyIEFib3J0
IGluc3RlYWQgb2YgQUNTIFZpb2xhdGlvbi4KICogSGFyZHdhcmUgZG9lc24ndCBzdXBwb3J0IHBl
ZXItdG8tcGVlciBhbmQgZWFjaCByb290IHBvcnQgaXMgYSByb290CiAqIGNvbXBsZXggd2l0aCB1
bmlxdWUgc2VnbWVudCBudW1iZXJzLiAgSXQgaXMgbm90IHBvc3NpYmxlIGZvciBvbmUgcm9vdAog
KiBwb3J0IHRvIHBhc3MgdHJhZmZpYyB0byBhbm90aGVyIHJvb3QgcG9ydC4gIEFsbCBQQ0llIHRy
YW5zYWN0aW9ucyBhcmUKICogdGVybWluYXRlZCBpbnNpZGUgdGhlIHJvb3QgcG9ydC4KICovCnN0
YXRpYyBpbnQgcGNpX3F1aXJrX3Fjb21fcnBfYWNzKHN0cnVjdCBwY2lfZGV2ICpkZXYsIHUxNiBh
Y3NfZmxhZ3MpCnsKCXUxNiBmbGFncyA9IChQQ0lfQUNTX1JSIHwgUENJX0FDU19DUiB8IFBDSV9B
Q1NfVUYgfCBQQ0lfQUNTX1NWKTsKCWludCByZXQgPSBhY3NfZmxhZ3MgJiB+ZmxhZ3MgPyAwIDog
MTsKCglwY2lfaW5mbyhkZXYsICJVc2luZyBRQ09NIEFDUyBRdWlyayAoJWQpXG4iLCByZXQpOwoK
CXJldHVybiByZXQ7Cn0KCnN0YXRpYyBpbnQgcGNpX3F1aXJrX2FsX2FjcyhzdHJ1Y3QgcGNpX2Rl
diAqZGV2LCB1MTYgYWNzX2ZsYWdzKQp7CglpZiAocGNpX3BjaWVfdHlwZShkZXYpICE9IFBDSV9F
WFBfVFlQRV9ST09UX1BPUlQpCgkJcmV0dXJuIC1FTk9UVFk7CgoJLyoKCSAqIEFtYXpvbidzIEFu
bmFwdXJuYSBMYWJzIHJvb3QgcG9ydHMgZG9uJ3QgaW5jbHVkZSBhbiBBQ1MgY2FwYWJpbGl0eSwK
CSAqIGJ1dCBkbyBpbmNsdWRlIEFDUy1saWtlIGZ1bmN0aW9uYWxpdHkuIFRoZSBoYXJkd2FyZSBk
b2Vzbid0IHN1cHBvcnQKCSAqIHBlZXItdG8tcGVlciB0cmFuc2FjdGlvbnMgdmlhIHRoZSByb290
IHBvcnQgYW5kIGVhY2ggaGFzIGEgdW5pcXVlCgkgKiBzZWdtZW50IG51bWJlci4KCSAqCgkgKiBB
ZGRpdGlvbmFsbHksIHRoZSByb290IHBvcnRzIGNhbm5vdCBzZW5kIHRyYWZmaWMgdG8gZWFjaCBv
dGhlci4KCSAqLwoJYWNzX2ZsYWdzICY9IH4oUENJX0FDU19TViB8IFBDSV9BQ1NfUlIgfCBQQ0lf
QUNTX0NSIHwgUENJX0FDU19VRik7CgoJcmV0dXJuIGFjc19mbGFncyA/IDAgOiAxOwp9CgovKgog
KiBTdW5yaXNlIFBvaW50IFBDSCByb290IHBvcnRzIGltcGxlbWVudCBBQ1MsIGJ1dCB1bmZvcnR1
bmF0ZWx5IGFzIHNob3duIGluCiAqIHRoZSBkYXRhc2hlZXQgKEludGVsIDEwMCBTZXJpZXMgQ2hp
cHNldCBGYW1pbHkgUENIIERhdGFzaGVldCwgVm9sLiAyLAogKiAxMi4xLjQ2LCAxMi4xLjQ3KVsx
XSB0aGlzIGNoaXBzZXQgdXNlcyBkd29yZHMgZm9yIHRoZSBBQ1MgY2FwYWJpbGl0eSBhbmQKICog
Y29udHJvbCByZWdpc3RlcnMgd2hlcmVhcyB0aGUgUENJZSBzcGVjIHBhY2tzIHRoZW0gaW50byB3
b3JkcyAoUmV2IDMuMCwKICogNy4xNiBBQ1MgRXh0ZW5kZWQgQ2FwYWJpbGl0eSkuICBUaGUgYml0
IGRlZmluaXRpb25zIGFyZSBjb3JyZWN0LCBidXQgdGhlCiAqIGNvbnRyb2wgcmVnaXN0ZXIgaXMg
YXQgb2Zmc2V0IDggaW5zdGVhZCBvZiA2IGFuZCB3ZSBzaG91bGQgcHJvYmFibHkgdXNlCiAqIGR3
b3JkIGFjY2Vzc2VzIHRvIHRoZW0uICBUaGlzIGFwcGxpZXMgdG8gdGhlIGZvbGxvd2luZyBQQ0kg
RGV2aWNlIElEcywgYXMKICogZm91bmQgaW4gdm9sdW1lIDEgb2YgdGhlIGRhdGFzaGVldFsyXToK
ICoKICogMHhhMTEwLTB4YTExZiBTdW5yaXNlIFBvaW50LUggUENJIEV4cHJlc3MgUm9vdCBQb3J0
ICN7MC0xNn0KICogMHhhMTY3LTB4YTE2YSBTdW5yaXNlIFBvaW50LUggUENJIEV4cHJlc3MgUm9v
dCBQb3J0ICN7MTctMjB9CiAqCiAqIE4uQi4gVGhpcyBkb2Vzbid0IGZpeCB3aGF0IGxzcGNpIHNo
b3dzLgogKgogKiBUaGUgMTAwIHNlcmllcyBjaGlwc2V0IHNwZWNpZmljYXRpb24gdXBkYXRlIGlu
Y2x1ZGVzIHRoaXMgYXMgZXJyYXRhICMyM1szXS4KICoKICogVGhlIDIwMCBzZXJpZXMgY2hpcHNl
dCAoVW5pb24gUG9pbnQpIGhhcyB0aGUgc2FtZSBidWcgYWNjb3JkaW5nIHRvIHRoZQogKiBzcGVj
aWZpY2F0aW9uIHVwZGF0ZSAoSW50ZWwgMjAwIFNlcmllcyBDaGlwc2V0IEZhbWlseSBQbGF0Zm9y
bSBDb250cm9sbGVyCiAqIEh1YiwgU3BlY2lmaWNhdGlvbiBVcGRhdGUsIEphbnVhcnkgMjAxNywg
UmV2aXNpb24gMDAxLCBEb2N1bWVudCMgMzM1MTk0LTAwMSwKICogRXJyYXRhIDIyKVs0XS4gIFBl
ciB0aGUgZGF0YXNoZWV0WzVdLCByb290IHBvcnQgUENJIERldmljZSBJRHMgZm9yIHRoaXMKICog
Y2hpcHNldCBpbmNsdWRlOgogKgogKiAweGEyOTAtMHhhMjlmIFBDSSBFeHByZXNzIFJvb3QgcG9y
dCAjezAtMTZ9CiAqIDB4YTJlNy0weGEyZWUgUENJIEV4cHJlc3MgUm9vdCBwb3J0ICN7MTctMjR9
CiAqCiAqIE1vYmlsZSBjaGlwc2V0cyBhcmUgYWxzbyBhZmZlY3RlZCwgN3RoICYgOHRoIEdlbmVy
YXRpb24KICogU3BlY2lmaWNhdGlvbiB1cGRhdGUgY29uZmlybXMgQUNTIGVycmF0YSAyMiwgc3Rh
dHVzIG5vIGZpeDogKDd0aCBHZW5lcmF0aW9uCiAqIEludGVsIFByb2Nlc3NvciBGYW1pbHkgSS9P
IGZvciBVL1kgUGxhdGZvcm1zIGFuZCA4dGggR2VuZXJhdGlvbiBJbnRlbAogKiBQcm9jZXNzb3Ig
RmFtaWx5IEkvTyBmb3IgVSBRdWFkIENvcmUgUGxhdGZvcm1zIFNwZWNpZmljYXRpb24gVXBkYXRl
LAogKiBBdWd1c3QgMjAxNywgUmV2aXNpb24gMDAyLCBEb2N1bWVudCM6IDMzNDY2MC0wMDIpWzZd
CiAqIERldmljZSBJRHMgZnJvbSBJL08gZGF0YXNoZWV0OiAoN3RoIEdlbmVyYXRpb24gSW50ZWwg
UHJvY2Vzc29yIEZhbWlseSBJL08KICogZm9yIFUvWSBQbGF0Zm9ybXMgYW5kIDh0aCBHZW5lcmF0
aW9uIEludGVsIMKuIFByb2Nlc3NvciBGYW1pbHkgSS9PIGZvciBVCiAqIFF1YWQgQ29yZSBQbGF0
Zm9ybXMsIFZvbCAxIG9mIDIsIEF1Z3VzdCAyMDE3LCBEb2N1bWVudCM6IDMzNDY1OC0wMDMpWzdd
CiAqCiAqIDB4OWQxMC0weDlkMWIgUENJIEV4cHJlc3MgUm9vdCBwb3J0ICN7MS0xMn0KICoKICog
WzFdIGh0dHA6Ly93d3cuaW50ZWwuY29tL2NvbnRlbnQvd3d3L3VzL2VuL2NoaXBzZXRzLzEwMC1z
ZXJpZXMtY2hpcHNldC1kYXRhc2hlZXQtdm9sLTIuaHRtbAogKiBbMl0gaHR0cDovL3d3dy5pbnRl
bC5jb20vY29udGVudC93d3cvdXMvZW4vY2hpcHNldHMvMTAwLXNlcmllcy1jaGlwc2V0LWRhdGFz
aGVldC12b2wtMS5odG1sCiAqIFszXSBodHRwOi8vd3d3LmludGVsLmNvbS9jb250ZW50L3d3dy91
cy9lbi9jaGlwc2V0cy8xMDAtc2VyaWVzLWNoaXBzZXQtc3BlYy11cGRhdGUuaHRtbAogKiBbNF0g
aHR0cDovL3d3dy5pbnRlbC5jb20vY29udGVudC93d3cvdXMvZW4vY2hpcHNldHMvMjAwLXNlcmll
cy1jaGlwc2V0LXBjaC1zcGVjLXVwZGF0ZS5odG1sCiAqIFs1XSBodHRwOi8vd3d3LmludGVsLmNv
bS9jb250ZW50L3d3dy91cy9lbi9jaGlwc2V0cy8yMDAtc2VyaWVzLWNoaXBzZXQtcGNoLWRhdGFz
aGVldC12b2wtMS5odG1sCiAqIFs2XSBodHRwczovL3d3dy5pbnRlbC5jb20vY29udGVudC93d3cv
dXMvZW4vcHJvY2Vzc29ycy9jb3JlLzd0aC1nZW4tY29yZS1mYW1pbHktbW9iaWxlLXUteS1wcm9j
ZXNzb3ItbGluZXMtaS1vLXNwZWMtdXBkYXRlLmh0bWwKICogWzddIGh0dHBzOi8vd3d3LmludGVs
LmNvbS9jb250ZW50L3d3dy91cy9lbi9wcm9jZXNzb3JzL2NvcmUvN3RoLWdlbi1jb3JlLWZhbWls
eS1tb2JpbGUtdS15LXByb2Nlc3Nvci1saW5lcy1pLW8tZGF0YXNoZWV0LXZvbC0xLmh0bWwKICov
CnN0YXRpYyBib29sIHBjaV9xdWlya19pbnRlbF9zcHRfcGNoX2Fjc19tYXRjaChzdHJ1Y3QgcGNp
X2RldiAqZGV2KQp7CglpZiAoIXBjaV9pc19wY2llKGRldikgfHwgcGNpX3BjaWVfdHlwZShkZXYp
ICE9IFBDSV9FWFBfVFlQRV9ST09UX1BPUlQpCgkJcmV0dXJuIGZhbHNlOwoKCXN3aXRjaCAoZGV2
LT5kZXZpY2UpIHsKCWNhc2UgMHhhMTEwIC4uLiAweGExMWY6IGNhc2UgMHhhMTY3IC4uLiAweGEx
NmE6IC8qIFN1bnJpc2UgUG9pbnQgKi8KCWNhc2UgMHhhMjkwIC4uLiAweGEyOWY6IGNhc2UgMHhh
MmU3IC4uLiAweGEyZWU6IC8qIFVuaW9uIFBvaW50ICovCgljYXNlIDB4OWQxMCAuLi4gMHg5ZDFi
OiAvKiA3dGggJiA4dGggR2VuIE1vYmlsZSAqLwoJCXJldHVybiB0cnVlOwoJfQoKCXJldHVybiBm
YWxzZTsKfQoKI2RlZmluZSBJTlRFTF9TUFRfQUNTX0NUUkwgKFBDSV9BQ1NfQ0FQICsgNCkKCnN0
YXRpYyBpbnQgcGNpX3F1aXJrX2ludGVsX3NwdF9wY2hfYWNzKHN0cnVjdCBwY2lfZGV2ICpkZXYs
IHUxNiBhY3NfZmxhZ3MpCnsKCWludCBwb3M7Cgl1MzIgY2FwLCBjdHJsOwoKCWlmICghcGNpX3F1
aXJrX2ludGVsX3NwdF9wY2hfYWNzX21hdGNoKGRldikpCgkJcmV0dXJuIC1FTk9UVFk7CgoJcG9z
ID0gcGNpX2ZpbmRfZXh0X2NhcGFiaWxpdHkoZGV2LCBQQ0lfRVhUX0NBUF9JRF9BQ1MpOwoJaWYg
KCFwb3MpCgkJcmV0dXJuIC1FTk9UVFk7CgoJLyogc2VlIHBjaV9hY3NfZmxhZ3NfZW5hYmxlZCgp
ICovCglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCBwb3MgKyBQQ0lfQUNTX0NBUCwgJmNhcCk7
CglhY3NfZmxhZ3MgJj0gKGNhcCB8IFBDSV9BQ1NfRUMpOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29y
ZChkZXYsIHBvcyArIElOVEVMX1NQVF9BQ1NfQ1RSTCwgJmN0cmwpOwoKCXJldHVybiBhY3NfZmxh
Z3MgJiB+Y3RybCA/IDAgOiAxOwp9CgpzdGF0aWMgaW50IHBjaV9xdWlya19tZl9lbmRwb2ludF9h
Y3Moc3RydWN0IHBjaV9kZXYgKmRldiwgdTE2IGFjc19mbGFncykKewoJLyoKCSAqIFNWLCBUQiwg
YW5kIFVGIGFyZSBub3QgcmVsZXZhbnQgdG8gbXVsdGlmdW5jdGlvbiBlbmRwb2ludHMuCgkgKgoJ
ICogTXVsdGlmdW5jdGlvbiBkZXZpY2VzIGFyZSBvbmx5IHJlcXVpcmVkIHRvIGltcGxlbWVudCBS
UiwgQ1IsIGFuZCBEVAoJICogaW4gdGhlaXIgQUNTIGNhcGFiaWxpdHkgaWYgdGhleSBzdXBwb3J0
IHBlZXItdG8tcGVlciB0cmFuc2FjdGlvbnMuCgkgKiBEZXZpY2VzIG1hdGNoaW5nIHRoaXMgcXVp
cmsgaGF2ZSBiZWVuIHZlcmlmaWVkIGJ5IHRoZSB2ZW5kb3IgdG8gbm90CgkgKiBwZXJmb3JtIHBl
ZXItdG8tcGVlciB3aXRoIG90aGVyIGZ1bmN0aW9ucywgYWxsb3dpbmcgdXMgdG8gbWFzayBvdXQK
CSAqIHRoZXNlIGJpdHMgYXMgaWYgdGhleSB3ZXJlIHVuaW1wbGVtZW50ZWQgaW4gdGhlIEFDUyBj
YXBhYmlsaXR5LgoJICovCglhY3NfZmxhZ3MgJj0gfihQQ0lfQUNTX1NWIHwgUENJX0FDU19UQiB8
IFBDSV9BQ1NfUlIgfAoJCSAgICAgICBQQ0lfQUNTX0NSIHwgUENJX0FDU19VRiB8IFBDSV9BQ1Nf
RFQpOwoKCXJldHVybiBhY3NfZmxhZ3MgPyAwIDogMTsKfQoKc3RhdGljIGludCBwY2lfcXVpcmtf
YnJjbV9hY3Moc3RydWN0IHBjaV9kZXYgKmRldiwgdTE2IGFjc19mbGFncykKewoJLyoKCSAqIGlQ
cm9jIFBBWEIgUm9vdCBQb3J0cyBkb24ndCBhZHZlcnRpc2UgYW4gQUNTIGNhcGFiaWxpdHksIGJ1
dAoJICogdGhleSBkbyBub3QgYWxsb3cgcGVlci10by1wZWVyIHRyYW5zYWN0aW9ucyBiZXR3ZWVu
IFJvb3QgUG9ydHMuCgkgKiBBbGxvdyBlYWNoIFJvb3QgUG9ydCB0byBiZSBpbiBhIHNlcGFyYXRl
IElPTU1VIGdyb3VwIGJ5IG1hc2tpbmcKCSAqIFNWL1JSL0NSL1VGIGJpdHMuCgkgKi8KCWFjc19m
bGFncyAmPSB+KFBDSV9BQ1NfU1YgfCBQQ0lfQUNTX1JSIHwgUENJX0FDU19DUiB8IFBDSV9BQ1Nf
VUYpOwoKCXJldHVybiBhY3NfZmxhZ3MgPyAwIDogMTsKfQoKc3RhdGljIGNvbnN0IHN0cnVjdCBw
Y2lfZGV2X2Fjc19lbmFibGVkIHsKCXUxNiB2ZW5kb3I7Cgl1MTYgZGV2aWNlOwoJaW50ICgqYWNz
X2VuYWJsZWQpKHN0cnVjdCBwY2lfZGV2ICpkZXYsIHUxNiBhY3NfZmxhZ3MpOwp9IHBjaV9kZXZf
YWNzX2VuYWJsZWRbXSA9IHsKCXsgUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM4NSwgcGNpX3F1aXJr
X2FtZF9zYl9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM5YywgcGNpX3F1aXJrX2Ft
ZF9zYl9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM4MywgcGNpX3F1aXJrX2FtZF9z
Yl9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM5ZCwgcGNpX3F1aXJrX2FtZF9zYl9h
Y3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM4NCwgcGNpX3F1aXJrX2FtZF9zYl9hY3Mg
fSwKCXsgUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM5OSwgcGNpX3F1aXJrX2FtZF9zYl9hY3MgfSwK
CXsgUENJX1ZFTkRPUl9JRF9BTUQsIDB4NzgwZiwgcGNpX3F1aXJrX2FtZF9zYl9hY3MgfSwKCXsg
UENJX1ZFTkRPUl9JRF9BTUQsIDB4NzgwOSwgcGNpX3F1aXJrX2FtZF9zYl9hY3MgfSwKCXsgUENJ
X1ZFTkRPUl9JRF9TT0xBUkZMQVJFLCAweDA5MDMsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3Mg
fSwKCXsgUENJX1ZFTkRPUl9JRF9TT0xBUkZMQVJFLCAweDA5MjMsIHBjaV9xdWlya19tZl9lbmRw
b2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9TT0xBUkZMQVJFLCAweDBBMDMsIHBjaV9xdWly
a19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEM2LCBwY2lf
cXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBEQiwg
cGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEw
REQsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHgxMEUxLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTBGMSwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lE
X0lOVEVMLCAweDEwRjcsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgMHgxMEY4LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MTBGOSwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDEwRkEsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwK
CXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEZCLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNz
IH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBGQywgcGNpX3F1aXJrX21mX2VuZHBvaW50
X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1MDcsIHBjaV9xdWlya19tZl9lbmRw
b2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTE0LCBwY2lfcXVpcmtfbWZf
ZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUxQywgcGNpX3F1aXJr
X21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1MjksIHBjaV9x
dWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTJBLCBw
Y2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU0
RCwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAw
eDE1NEYsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRF
TCwgMHgxNTUxLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURf
SU5URUwsIDB4MTU1OCwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJLyogODI1ODAgKi8K
CXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTA5LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNz
IH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUwRSwgcGNpX3F1aXJrX21mX2VuZHBvaW50
X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1MEYsIHBjaV9xdWlya19tZl9lbmRw
b2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTEwLCBwY2lfcXVpcmtfbWZf
ZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUxMSwgcGNpX3F1aXJr
X21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1MTYsIHBjaV9x
dWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTI3LCBw
Y2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgkvKiA4MjU3NiAqLwoJeyBQQ0lfVkVORE9SX0lE
X0lOVEVMLCAweDEwQzksIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgMHgxMEU2LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MTBFNywgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDEwRTgsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwK
CXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTBBLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNz
IH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUwRCwgcGNpX3F1aXJrX21mX2VuZHBvaW50
X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1MTgsIHBjaV9xdWlya19tZl9lbmRw
b2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTI2LCBwY2lfcXVpcmtfbWZf
ZW5kcG9pbnRfYWNzIH0sCgkvKiA4MjU3NSAqLwoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEw
QTcsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHgxMEE5LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTBENiwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJLyogSTM1MCAqLwoJeyBQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDE1MjEsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwK
CXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTIyLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNz
IH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUyMywgcGNpX3F1aXJrX21mX2VuZHBvaW50
X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1MjQsIHBjaV9xdWlya19tZl9lbmRw
b2ludF9hY3MgfSwKCS8qIDgyNTcxIChRdWFkcyBvbWl0dGVkIGR1ZSB0byBub24tQUNTIHN3aXRj
aCkgKi8KCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMDVFLCBwY2lfcXVpcmtfbWZfZW5kcG9p
bnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTA1RiwgcGNpX3F1aXJrX21mX2Vu
ZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEwNjAsIHBjaV9xdWlya19t
Zl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEQ5LCBwY2lfcXVp
cmtfbWZfZW5kcG9pbnRfYWNzIH0sCgkvKiBJMjE5ICovCgl7IFBDSV9WRU5ET1JfSURfSU5URUws
IDB4MTViNywgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lO
VEVMLCAweDE1YjgsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCS8qIFFDT00gUURGMnh4
eCByb290IHBvcnRzICovCgl7IFBDSV9WRU5ET1JfSURfUUNPTSwgMHgwNDAwLCBwY2lfcXVpcmtf
cWNvbV9ycF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9RQ09NLCAweDA0MDEsIHBjaV9xdWlya19x
Y29tX3JwX2FjcyB9LAoJLyogSFhUIFNENDgwMCByb290IHBvcnRzLiBUaGUgQUNTIGRlc2lnbiBp
cyBzYW1lIGFzIFFDT00gUURGMnh4eCAqLwoJeyBQQ0lfVkVORE9SX0lEX0hYVCwgMHgwNDAxLCBw
Y2lfcXVpcmtfcWNvbV9ycF9hY3MgfSwKCS8qIEludGVsIFBDSCByb290IHBvcnRzICovCgl7IFBD
SV9WRU5ET1JfSURfSU5URUwsIFBDSV9BTllfSUQsIHBjaV9xdWlya19pbnRlbF9wY2hfYWNzIH0s
Cgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9BTllfSUQsIHBjaV9xdWlya19pbnRlbF9zcHRf
cGNoX2FjcyB9LAoJeyAweDE5YTIsIDB4NzEwLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0s
IC8qIEVtdWxleCBCRTMtUiAqLwoJeyAweDEwZGYsIDB4NzIwLCBwY2lfcXVpcmtfbWZfZW5kcG9p
bnRfYWNzIH0sIC8qIEVtdWxleCBTa3loYXdrLVIgKi8KCS8qIENhdml1bSBUaHVuZGVyWCAqLwoJ
eyBQQ0lfVkVORE9SX0lEX0NBVklVTSwgUENJX0FOWV9JRCwgcGNpX3F1aXJrX2Nhdml1bV9hY3Mg
fSwKCS8qIEFQTSBYLUdlbmUgKi8KCXsgUENJX1ZFTkRPUl9JRF9BTUNDLCAweEUwMDQsIHBjaV9x
dWlya194Z2VuZV9hY3MgfSwKCS8qIEFtcGVyZSBDb21wdXRpbmcgKi8KCXsgUENJX1ZFTkRPUl9J
RF9BTVBFUkUsIDB4RTAwNSwgcGNpX3F1aXJrX3hnZW5lX2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lE
X0FNUEVSRSwgMHhFMDA2LCBwY2lfcXVpcmtfeGdlbmVfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURf
QU1QRVJFLCAweEUwMDcsIHBjaV9xdWlya194Z2VuZV9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9B
TVBFUkUsIDB4RTAwOCwgcGNpX3F1aXJrX3hnZW5lX2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0FN
UEVSRSwgMHhFMDA5LCBwY2lfcXVpcmtfeGdlbmVfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQU1Q
RVJFLCAweEUwMEEsIHBjaV9xdWlya194Z2VuZV9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9BTVBF
UkUsIDB4RTAwQiwgcGNpX3F1aXJrX3hnZW5lX2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0FNUEVS
RSwgMHhFMDBDLCBwY2lfcXVpcmtfeGdlbmVfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQlJPQURD
T00sIDB4RDcxNCwgcGNpX3F1aXJrX2JyY21fYWNzIH0sCgkvKiBBbWF6b24gQW5uYXB1cm5hIExh
YnMgKi8KCXsgUENJX1ZFTkRPUl9JRF9BTUFaT05fQU5OQVBVUk5BX0xBQlMsIDB4MDAzMSwgcGNp
X3F1aXJrX2FsX2FjcyB9LAoJeyAwIH0KfTsKCmludCBwY2lfZGV2X3NwZWNpZmljX2Fjc19lbmFi
bGVkKHN0cnVjdCBwY2lfZGV2ICpkZXYsIHUxNiBhY3NfZmxhZ3MpCnsKCWNvbnN0IHN0cnVjdCBw
Y2lfZGV2X2Fjc19lbmFibGVkICppOwoJaW50IHJldDsKCgkvKgoJICogQWxsb3cgZGV2aWNlcyB0
aGF0IGRvIG5vdCBleHBvc2Ugc3RhbmRhcmQgUENJZSBBQ1MgY2FwYWJpbGl0aWVzCgkgKiBvciBj
b250cm9sIHRvIGluZGljYXRlIHRoZWlyIHN1cHBvcnQgaGVyZS4gIE11bHRpLWZ1bmN0aW9uIGV4
cHJlc3MKCSAqIGRldmljZXMgd2hpY2ggZG8gbm90IGFsbG93IGludGVybmFsIHBlZXItdG8tcGVl
ciBiZXR3ZWVuIGZ1bmN0aW9ucywKCSAqIGJ1dCBkbyBub3QgaW1wbGVtZW50IFBDSWUgQUNTIG1h
eSB3aXNoIHRvIHJldHVybiB0cnVlIGhlcmUuCgkgKi8KCWZvciAoaSA9IHBjaV9kZXZfYWNzX2Vu
YWJsZWQ7IGktPmFjc19lbmFibGVkOyBpKyspIHsKCQlpZiAoKGktPnZlbmRvciA9PSBkZXYtPnZl
bmRvciB8fAoJCSAgICAgaS0+dmVuZG9yID09ICh1MTYpUENJX0FOWV9JRCkgJiYKCQkgICAgKGkt
PmRldmljZSA9PSBkZXYtPmRldmljZSB8fAoJCSAgICAgaS0+ZGV2aWNlID09ICh1MTYpUENJX0FO
WV9JRCkpIHsKCQkJcmV0ID0gaS0+YWNzX2VuYWJsZWQoZGV2LCBhY3NfZmxhZ3MpOwoJCQlpZiAo
cmV0ID49IDApCgkJCQlyZXR1cm4gcmV0OwoJCX0KCX0KCglyZXR1cm4gLUVOT1RUWTsKfQoKLyog
Q29uZmlnIHNwYWNlIG9mZnNldCBvZiBSb290IENvbXBsZXggQmFzZSBBZGRyZXNzIHJlZ2lzdGVy
ICovCiNkZWZpbmUgSU5URUxfTFBDX1JDQkFfUkVHIDB4ZjAKLyogMzE6MTQgUkNCQSBhZGRyZXNz
ICovCiNkZWZpbmUgSU5URUxfTFBDX1JDQkFfTUFTSyAweGZmZmZjMDAwCi8qIFJDQkEgRW5hYmxl
ICovCiNkZWZpbmUgSU5URUxfTFBDX1JDQkFfRU5BQkxFICgxIDw8IDApCgovKiBCYWNrYm9uZSBT
Y3JhdGNoIFBhZCBSZWdpc3RlciAqLwojZGVmaW5lIElOVEVMX0JTUFJfUkVHIDB4MTEwNAovKiBC
YWNrYm9uZSBQZWVyIE5vbi1Qb3N0ZWQgRGlzYWJsZSAqLwojZGVmaW5lIElOVEVMX0JTUFJfUkVH
X0JQTlBEICgxIDw8IDgpCi8qIEJhY2tib25lIFBlZXIgUG9zdGVkIERpc2FibGUgKi8KI2RlZmlu
ZSBJTlRFTF9CU1BSX1JFR19CUFBEICAoMSA8PCA5KQoKLyogVXBzdHJlYW0gUGVlciBEZWNvZGUg
Q29uZmlndXJhdGlvbiBSZWdpc3RlciAqLwojZGVmaW5lIElOVEVMX1VQRENSX1JFRyAweDExMTQK
LyogNTowIFBlZXIgRGVjb2RlIEVuYWJsZSBiaXRzICovCiNkZWZpbmUgSU5URUxfVVBEQ1JfUkVH
X01BU0sgMHgzZgoKc3RhdGljIGludCBwY2lfcXVpcmtfZW5hYmxlX2ludGVsX2xwY19hY3Moc3Ry
dWN0IHBjaV9kZXYgKmRldikKewoJdTMyIHJjYmEsIGJzcHIsIHVwZGNyOwoJdm9pZCBfX2lvbWVt
ICpyY2JhX21lbTsKCgkvKgoJICogUmVhZCB0aGUgUkNCQSByZWdpc3RlciBmcm9tIHRoZSBMUEMg
KEQzMTpGMCkuICBQQ0ggcm9vdCBwb3J0cwoJICogYXJlIEQyODpGKiBhbmQgdGhlcmVmb3JlIGdl
dCBwcm9iZWQgYmVmb3JlIExQQywgdGh1cyB3ZSBjYW4ndAoJICogdXNlIHBjaV9nZXRfc2xvdCgp
L3BjaV9yZWFkX2NvbmZpZ19kd29yZCgpIGhlcmUuCgkgKi8KCXBjaV9idXNfcmVhZF9jb25maWdf
ZHdvcmQoZGV2LT5idXMsIFBDSV9ERVZGTigzMSwgMCksCgkJCQkgIElOVEVMX0xQQ19SQ0JBX1JF
RywgJnJjYmEpOwoJaWYgKCEocmNiYSAmIElOVEVMX0xQQ19SQ0JBX0VOQUJMRSkpCgkJcmV0dXJu
IC1FSU5WQUw7CgoJcmNiYV9tZW0gPSBpb3JlbWFwX25vY2FjaGUocmNiYSAmIElOVEVMX0xQQ19S
Q0JBX01BU0ssCgkJCQkgICBQQUdFX0FMSUdOKElOVEVMX1VQRENSX1JFRykpOwoJaWYgKCFyY2Jh
X21lbSkKCQlyZXR1cm4gLUVOT01FTTsKCgkvKgoJICogVGhlIEJTUFIgY2FuIGRpc2FsbG93IHBl
ZXIgY3ljbGVzLCBidXQgaXQncyBzZXQgYnkgc29mdCBzdHJhcCBhbmQKCSAqIHRoZXJlZm9yZSBy
ZWFkLW9ubHkuICBJZiBib3RoIHBvc3RlZCBhbmQgbm9uLXBvc3RlZCBwZWVyIGN5Y2xlcyBhcmUK
CSAqIGRpc2FsbG93ZWQsIHdlJ3JlIG9rLiAgSWYgZWl0aGVyIGFyZSBhbGxvd2VkLCB0aGVuIHdl
IG5lZWQgdG8gdXNlCgkgKiB0aGUgVVBEQ1IgdG8gZGlzYWJsZSBwZWVyIGRlY29kZXMgZm9yIGVh
Y2ggcG9ydC4gIFRoaXMgcHJvdmlkZXMgdGhlCgkgKiBQQ0llIEFDUyBlcXVpdmFsZW50IG9mIFBD
SV9BQ1NfUlIgfCBQQ0lfQUNTX0NSIHwgUENJX0FDU19VRgoJICovCglic3ByID0gcmVhZGwocmNi
YV9tZW0gKyBJTlRFTF9CU1BSX1JFRyk7Cglic3ByICY9IElOVEVMX0JTUFJfUkVHX0JQTlBEIHwg
SU5URUxfQlNQUl9SRUdfQlBQRDsKCWlmIChic3ByICE9IChJTlRFTF9CU1BSX1JFR19CUE5QRCB8
IElOVEVMX0JTUFJfUkVHX0JQUEQpKSB7CgkJdXBkY3IgPSByZWFkbChyY2JhX21lbSArIElOVEVM
X1VQRENSX1JFRyk7CgkJaWYgKHVwZGNyICYgSU5URUxfVVBEQ1JfUkVHX01BU0spIHsKCQkJcGNp
X2luZm8oZGV2LCAiRGlzYWJsaW5nIFVQRENSIHBlZXIgZGVjb2Rlc1xuIik7CgkJCXVwZGNyICY9
IH5JTlRFTF9VUERDUl9SRUdfTUFTSzsKCQkJd3JpdGVsKHVwZGNyLCByY2JhX21lbSArIElOVEVM
X1VQRENSX1JFRyk7CgkJfQoJfQoKCWlvdW5tYXAocmNiYV9tZW0pOwoJcmV0dXJuIDA7Cn0KCi8q
IE1pc2NlbGxhbmVvdXMgUG9ydCBDb25maWd1cmF0aW9uIHJlZ2lzdGVyICovCiNkZWZpbmUgSU5U
RUxfTVBDX1JFRyAweGQ4Ci8qIE1QQzogSW52YWxpZCBSZWNlaXZlIEJ1cyBOdW1iZXIgQ2hlY2sg
RW5hYmxlICovCiNkZWZpbmUgSU5URUxfTVBDX1JFR19JUkJOQ0UgKDEgPDwgMjYpCgpzdGF0aWMg
dm9pZCBwY2lfcXVpcmtfZW5hYmxlX2ludGVsX3JwX21wY19hY3Moc3RydWN0IHBjaV9kZXYgKmRl
dikKewoJdTMyIG1wYzsKCgkvKgoJICogV2hlbiBlbmFibGVkLCB0aGUgSVJCTkNFIGJpdCBvZiB0
aGUgTVBDIHJlZ2lzdGVyIGVuYWJsZXMgdGhlCgkgKiBlcXVpdmFsZW50IG9mIFBDSSBBQ1MgU291
cmNlIFZhbGlkYXRpb24gKFBDSV9BQ1NfU1YpLCB3aGljaAoJICogZW5zdXJlcyB0aGF0IHJlcXVl
c3RlciBJRHMgZmFsbCB3aXRoaW4gdGhlIGJ1cyBudW1iZXIgcmFuZ2UKCSAqIG9mIHRoZSBicmlk
Z2UuICBFbmFibGUgaWYgbm90IGFscmVhZHkuCgkgKi8KCXBjaV9yZWFkX2NvbmZpZ19kd29yZChk
ZXYsIElOVEVMX01QQ19SRUcsICZtcGMpOwoJaWYgKCEobXBjICYgSU5URUxfTVBDX1JFR19JUkJO
Q0UpKSB7CgkJcGNpX2luZm8oZGV2LCAiRW5hYmxpbmcgTVBDIElSQk5DRVxuIik7CgkJbXBjIHw9
IElOVEVMX01QQ19SRUdfSVJCTkNFOwoJCXBjaV93cml0ZV9jb25maWdfd29yZChkZXYsIElOVEVM
X01QQ19SRUcsIG1wYyk7Cgl9Cn0KCnN0YXRpYyBpbnQgcGNpX3F1aXJrX2VuYWJsZV9pbnRlbF9w
Y2hfYWNzKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWlmICghcGNpX3F1aXJrX2ludGVsX3BjaF9h
Y3NfbWF0Y2goZGV2KSkKCQlyZXR1cm4gLUVOT1RUWTsKCglpZiAocGNpX3F1aXJrX2VuYWJsZV9p
bnRlbF9scGNfYWNzKGRldikpIHsKCQlwY2lfd2FybihkZXYsICJGYWlsZWQgdG8gZW5hYmxlIElu
dGVsIFBDSCBBQ1MgcXVpcmtcbiIpOwoJCXJldHVybiAwOwoJfQoKCXBjaV9xdWlya19lbmFibGVf
aW50ZWxfcnBfbXBjX2FjcyhkZXYpOwoKCWRldi0+ZGV2X2ZsYWdzIHw9IFBDSV9ERVZfRkxBR1Nf
QUNTX0VOQUJMRURfUVVJUks7CgoJcGNpX2luZm8oZGV2LCAiSW50ZWwgUENIIHJvb3QgcG9ydCBB
Q1Mgd29ya2Fyb3VuZCBlbmFibGVkXG4iKTsKCglyZXR1cm4gMDsKfQoKc3RhdGljIGludCBwY2lf
cXVpcmtfZW5hYmxlX2ludGVsX3NwdF9wY2hfYWNzKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWlu
dCBwb3M7Cgl1MzIgY2FwLCBjdHJsOwoKCWlmICghcGNpX3F1aXJrX2ludGVsX3NwdF9wY2hfYWNz
X21hdGNoKGRldikpCgkJcmV0dXJuIC1FTk9UVFk7CgoJcG9zID0gcGNpX2ZpbmRfZXh0X2NhcGFi
aWxpdHkoZGV2LCBQQ0lfRVhUX0NBUF9JRF9BQ1MpOwoJaWYgKCFwb3MpCgkJcmV0dXJuIC1FTk9U
VFk7CgoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKGRldiwgcG9zICsgUENJX0FDU19DQVAsICZjYXAp
OwoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKGRldiwgcG9zICsgSU5URUxfU1BUX0FDU19DVFJMLCAm
Y3RybCk7CgoJY3RybCB8PSAoY2FwICYgUENJX0FDU19TVik7CgljdHJsIHw9IChjYXAgJiBQQ0lf
QUNTX1JSKTsKCWN0cmwgfD0gKGNhcCAmIFBDSV9BQ1NfQ1IpOwoJY3RybCB8PSAoY2FwICYgUENJ
X0FDU19VRik7CgoJcGNpX3dyaXRlX2NvbmZpZ19kd29yZChkZXYsIHBvcyArIElOVEVMX1NQVF9B
Q1NfQ1RSTCwgY3RybCk7CgoJcGNpX2luZm8oZGV2LCAiSW50ZWwgU1BUIFBDSCByb290IHBvcnQg
QUNTIHdvcmthcm91bmQgZW5hYmxlZFxuIik7CgoJcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQgcGNp
X3F1aXJrX2Rpc2FibGVfaW50ZWxfc3B0X3BjaF9hY3NfcmVkaXIoc3RydWN0IHBjaV9kZXYgKmRl
dikKewoJaW50IHBvczsKCXUzMiBjYXAsIGN0cmw7CgoJaWYgKCFwY2lfcXVpcmtfaW50ZWxfc3B0
X3BjaF9hY3NfbWF0Y2goZGV2KSkKCQlyZXR1cm4gLUVOT1RUWTsKCglwb3MgPSBwY2lfZmluZF9l
eHRfY2FwYWJpbGl0eShkZXYsIFBDSV9FWFRfQ0FQX0lEX0FDUyk7CglpZiAoIXBvcykKCQlyZXR1
cm4gLUVOT1RUWTsKCglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCBwb3MgKyBQQ0lfQUNTX0NB
UCwgJmNhcCk7CglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCBwb3MgKyBJTlRFTF9TUFRfQUNT
X0NUUkwsICZjdHJsKTsKCgljdHJsICY9IH4oUENJX0FDU19SUiB8IFBDSV9BQ1NfQ1IgfCBQQ0lf
QUNTX0VDKTsKCglwY2lfd3JpdGVfY29uZmlnX2R3b3JkKGRldiwgcG9zICsgSU5URUxfU1BUX0FD
U19DVFJMLCBjdHJsKTsKCglwY2lfaW5mbyhkZXYsICJJbnRlbCBTUFQgUENIIHJvb3QgcG9ydCB3
b3JrYXJvdW5kOiBkaXNhYmxlZCBBQ1MgcmVkaXJlY3RcbiIpOwoKCXJldHVybiAwOwp9CgpzdGF0
aWMgY29uc3Qgc3RydWN0IHBjaV9kZXZfYWNzX29wcyB7Cgl1MTYgdmVuZG9yOwoJdTE2IGRldmlj
ZTsKCWludCAoKmVuYWJsZV9hY3MpKHN0cnVjdCBwY2lfZGV2ICpkZXYpOwoJaW50ICgqZGlzYWJs
ZV9hY3NfcmVkaXIpKHN0cnVjdCBwY2lfZGV2ICpkZXYpOwp9IHBjaV9kZXZfYWNzX29wc1tdID0g
ewoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCBQQ0lfQU5ZX0lELAoJICAgIC5lbmFibGVfYWNzID0g
cGNpX3F1aXJrX2VuYWJsZV9pbnRlbF9wY2hfYWNzLAoJfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRF
TCwgUENJX0FOWV9JRCwKCSAgICAuZW5hYmxlX2FjcyA9IHBjaV9xdWlya19lbmFibGVfaW50ZWxf
c3B0X3BjaF9hY3MsCgkgICAgLmRpc2FibGVfYWNzX3JlZGlyID0gcGNpX3F1aXJrX2Rpc2FibGVf
aW50ZWxfc3B0X3BjaF9hY3NfcmVkaXIsCgl9LAp9OwoKaW50IHBjaV9kZXZfc3BlY2lmaWNfZW5h
YmxlX2FjcyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgljb25zdCBzdHJ1Y3QgcGNpX2Rldl9hY3Nf
b3BzICpwOwoJaW50IGksIHJldDsKCglmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShwY2lfZGV2
X2Fjc19vcHMpOyBpKyspIHsKCQlwID0gJnBjaV9kZXZfYWNzX29wc1tpXTsKCQlpZiAoKHAtPnZl
bmRvciA9PSBkZXYtPnZlbmRvciB8fAoJCSAgICAgcC0+dmVuZG9yID09ICh1MTYpUENJX0FOWV9J
RCkgJiYKCQkgICAgKHAtPmRldmljZSA9PSBkZXYtPmRldmljZSB8fAoJCSAgICAgcC0+ZGV2aWNl
ID09ICh1MTYpUENJX0FOWV9JRCkgJiYKCQkgICAgcC0+ZW5hYmxlX2FjcykgewoJCQlyZXQgPSBw
LT5lbmFibGVfYWNzKGRldik7CgkJCWlmIChyZXQgPj0gMCkKCQkJCXJldHVybiByZXQ7CgkJfQoJ
fQoKCXJldHVybiAtRU5PVFRZOwp9CgppbnQgcGNpX2Rldl9zcGVjaWZpY19kaXNhYmxlX2Fjc19y
ZWRpcihzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgljb25zdCBzdHJ1Y3QgcGNpX2Rldl9hY3Nfb3Bz
ICpwOwoJaW50IGksIHJldDsKCglmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShwY2lfZGV2X2Fj
c19vcHMpOyBpKyspIHsKCQlwID0gJnBjaV9kZXZfYWNzX29wc1tpXTsKCQlpZiAoKHAtPnZlbmRv
ciA9PSBkZXYtPnZlbmRvciB8fAoJCSAgICAgcC0+dmVuZG9yID09ICh1MTYpUENJX0FOWV9JRCkg
JiYKCQkgICAgKHAtPmRldmljZSA9PSBkZXYtPmRldmljZSB8fAoJCSAgICAgcC0+ZGV2aWNlID09
ICh1MTYpUENJX0FOWV9JRCkgJiYKCQkgICAgcC0+ZGlzYWJsZV9hY3NfcmVkaXIpIHsKCQkJcmV0
ID0gcC0+ZGlzYWJsZV9hY3NfcmVkaXIoZGV2KTsKCQkJaWYgKHJldCA+PSAwKQoJCQkJcmV0dXJu
IHJldDsKCQl9Cgl9CgoJcmV0dXJuIC1FTk9UVFk7Cn0KCi8qCiAqIFRoZSBQQ0kgY2FwYWJpbGl0
aWVzIGxpc3QgZm9yIEludGVsIERIODk1eENDIFZGcyAoZGV2aWNlIElEIDB4MDQ0Mykgd2l0aAog
KiBRdWlja0Fzc2lzdCBUZWNobm9sb2d5IChRQVQpIGlzIHByZW1hdHVyZWx5IHRlcm1pbmF0ZWQg
aW4gaGFyZHdhcmUuICBUaGUKICogTmV4dCBDYXBhYmlsaXR5IHBvaW50ZXIgaW4gdGhlIE1TSSBD
YXBhYmlsaXR5IFN0cnVjdHVyZSBzaG91bGQgcG9pbnQgdG8KICogdGhlIFBDSWUgQ2FwYWJpbGl0
eSBTdHJ1Y3R1cmUgYnV0IGlzIGluY29ycmVjdGx5IGhhcmR3aXJlZCBhcyAwIHRlcm1pbmF0aW5n
CiAqIHRoZSBsaXN0LgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfaW50ZWxfcWF0X3ZmX2NhcChzdHJ1
Y3QgcGNpX2RldiAqcGRldikKewoJaW50IHBvcywgaSA9IDA7Cgl1OCBuZXh0X2NhcDsKCXUxNiBy
ZWcxNiwgKmNhcDsKCXN0cnVjdCBwY2lfY2FwX3NhdmVkX3N0YXRlICpzdGF0ZTsKCgkvKiBCYWls
IGlmIHRoZSBoYXJkd2FyZSBidWcgaXMgZml4ZWQgKi8KCWlmIChwZGV2LT5wY2llX2NhcCB8fCBw
Y2lfZmluZF9jYXBhYmlsaXR5KHBkZXYsIFBDSV9DQVBfSURfRVhQKSkKCQlyZXR1cm47CgoJLyog
QmFpbCBpZiBNU0kgQ2FwYWJpbGl0eSBTdHJ1Y3R1cmUgaXMgbm90IGZvdW5kIGZvciBzb21lIHJl
YXNvbiAqLwoJcG9zID0gcGNpX2ZpbmRfY2FwYWJpbGl0eShwZGV2LCBQQ0lfQ0FQX0lEX01TSSk7
CglpZiAoIXBvcykKCQlyZXR1cm47CgoJLyoKCSAqIEJhaWwgaWYgTmV4dCBDYXBhYmlsaXR5IHBv
aW50ZXIgaW4gdGhlIE1TSSBDYXBhYmlsaXR5IFN0cnVjdHVyZQoJICogaXMgbm90IHRoZSBleHBl
Y3RlZCBpbmNvcnJlY3QgMHgwMC4KCSAqLwoJcGNpX3JlYWRfY29uZmlnX2J5dGUocGRldiwgcG9z
ICsgMSwgJm5leHRfY2FwKTsKCWlmIChuZXh0X2NhcCkKCQlyZXR1cm47CgoJLyoKCSAqIFBDSWUg
Q2FwYWJpbGl0eSBTdHJ1Y3R1cmUgaXMgZXhwZWN0ZWQgdG8gYmUgYXQgMHg1MCBhbmQgc2hvdWxk
CgkgKiB0ZXJtaW5hdGUgdGhlIGxpc3QgKE5leHQgQ2FwYWJpbGl0eSBwb2ludGVyIGlzIDB4MDAp
LiAgVmVyaWZ5CgkgKiBDYXBhYmlsaXR5IElkIGFuZCBOZXh0IENhcGFiaWxpdHkgcG9pbnRlciBp
cyBhcyBleHBlY3RlZC4KCSAqIE9wZW4tY29kZSBzb21lIG9mIHNldF9wY2llX3BvcnRfdHlwZSgp
IGFuZCBwY2lfY2ZnX3NwYWNlX3NpemVfZXh0KCkKCSAqIHRvIGNvcnJlY3RseSBzZXQga2VybmVs
IGRhdGEgc3RydWN0dXJlcyB3aGljaCBoYXZlIGFscmVhZHkgYmVlbgoJICogc2V0IGluY29ycmVj
dGx5IGR1ZSB0byB0aGUgaGFyZHdhcmUgYnVnLgoJICovCglwb3MgPSAweDUwOwoJcGNpX3JlYWRf
Y29uZmlnX3dvcmQocGRldiwgcG9zLCAmcmVnMTYpOwoJaWYgKHJlZzE2ID09ICgweDAwMDAgfCBQ
Q0lfQ0FQX0lEX0VYUCkpIHsKCQl1MzIgc3RhdHVzOwojaWZuZGVmIFBDSV9FWFBfU0FWRV9SRUdT
CiNkZWZpbmUgUENJX0VYUF9TQVZFX1JFR1MgICAgIDcKI2VuZGlmCgkJaW50IHNpemUgPSBQQ0lf
RVhQX1NBVkVfUkVHUyAqIHNpemVvZih1MTYpOwoKCQlwZGV2LT5wY2llX2NhcCA9IHBvczsKCQlw
Y2lfcmVhZF9jb25maWdfd29yZChwZGV2LCBwb3MgKyBQQ0lfRVhQX0ZMQUdTLCAmcmVnMTYpOwoJ
CXBkZXYtPnBjaWVfZmxhZ3NfcmVnID0gcmVnMTY7CgkJcGNpX3JlYWRfY29uZmlnX3dvcmQocGRl
diwgcG9zICsgUENJX0VYUF9ERVZDQVAsICZyZWcxNik7CgkJcGRldi0+cGNpZV9tcHNzID0gcmVn
MTYgJiBQQ0lfRVhQX0RFVkNBUF9QQVlMT0FEOwoKCQlwZGV2LT5jZmdfc2l6ZSA9IFBDSV9DRkdf
U1BBQ0VfRVhQX1NJWkU7CgkJaWYgKHBjaV9yZWFkX2NvbmZpZ19kd29yZChwZGV2LCBQQ0lfQ0ZH
X1NQQUNFX1NJWkUsICZzdGF0dXMpICE9CgkJICAgIFBDSUJJT1NfU1VDQ0VTU0ZVTCB8fCAoc3Rh
dHVzID09IDB4ZmZmZmZmZmYpKQoJCQlwZGV2LT5jZmdfc2l6ZSA9IFBDSV9DRkdfU1BBQ0VfU0la
RTsKCgkJaWYgKHBjaV9maW5kX3NhdmVkX2NhcChwZGV2LCBQQ0lfQ0FQX0lEX0VYUCkpCgkJCXJl
dHVybjsKCgkJLyogU2F2ZSBQQ0llIGNhcCAqLwoJCXN0YXRlID0ga3phbGxvYyhzaXplb2YoKnN0
YXRlKSArIHNpemUsIEdGUF9LRVJORUwpOwoJCWlmICghc3RhdGUpCgkJCXJldHVybjsKCgkJc3Rh
dGUtPmNhcC5jYXBfbnIgPSBQQ0lfQ0FQX0lEX0VYUDsKCQlzdGF0ZS0+Y2FwLmNhcF9leHRlbmRl
ZCA9IDA7CgkJc3RhdGUtPmNhcC5zaXplID0gc2l6ZTsKCQljYXAgPSAodTE2ICopJnN0YXRlLT5j
YXAuZGF0YVswXTsKCQlwY2llX2NhcGFiaWxpdHlfcmVhZF93b3JkKHBkZXYsIFBDSV9FWFBfREVW
Q1RMLCAmY2FwW2krK10pOwoJCXBjaWVfY2FwYWJpbGl0eV9yZWFkX3dvcmQocGRldiwgUENJX0VY
UF9MTktDVEwsICZjYXBbaSsrXSk7CgkJcGNpZV9jYXBhYmlsaXR5X3JlYWRfd29yZChwZGV2LCBQ
Q0lfRVhQX1NMVENUTCwgJmNhcFtpKytdKTsKCQlwY2llX2NhcGFiaWxpdHlfcmVhZF93b3JkKHBk
ZXYsIFBDSV9FWFBfUlRDVEwsICAmY2FwW2krK10pOwoJCXBjaWVfY2FwYWJpbGl0eV9yZWFkX3dv
cmQocGRldiwgUENJX0VYUF9ERVZDVEwyLCAmY2FwW2krK10pOwoJCXBjaWVfY2FwYWJpbGl0eV9y
ZWFkX3dvcmQocGRldiwgUENJX0VYUF9MTktDVEwyLCAmY2FwW2krK10pOwoJCXBjaWVfY2FwYWJp
bGl0eV9yZWFkX3dvcmQocGRldiwgUENJX0VYUF9TTFRDVEwyLCAmY2FwW2krK10pOwoJCWhsaXN0
X2FkZF9oZWFkKCZzdGF0ZS0+bmV4dCwgJnBkZXYtPnNhdmVkX2NhcF9zcGFjZSk7Cgl9Cn0KREVD
TEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg0NDMsIHF1aXJrX2lu
dGVsX3FhdF92Zl9jYXApOwoKLyogRkxSIG1heSBjYXVzZSBzb21lIDgyNTc5IGRldmljZXMgdG8g
aGFuZyAqLwpzdGF0aWMgdm9pZCBxdWlya19pbnRlbF9ub19mbHIoc3RydWN0IHBjaV9kZXYgKmRl
dikKewoJZGV2LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFHU19OT19GTFJfUkVTRVQ7Cn0KREVD
TEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTAyLCBxdWlya19p
bnRlbF9ub19mbHIpOwpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX0lOVEVM
LCAweDE1MDMsIHF1aXJrX2ludGVsX25vX2Zscik7CgpzdGF0aWMgdm9pZCBxdWlya19ub19leHRf
dGFncyhzdHJ1Y3QgcGNpX2RldiAqcGRldikKewoJc3RydWN0IHBjaV9ob3N0X2JyaWRnZSAqYnJp
ZGdlID0gcGNpX2ZpbmRfaG9zdF9icmlkZ2UocGRldi0+YnVzKTsKCglpZiAoIWJyaWRnZSkKCQly
ZXR1cm47CgoJYnJpZGdlLT5ub19leHRfdGFncyA9IDE7CglwY2lfaW5mbyhwZGV2LCAiZGlzYWJs
aW5nIEV4dGVuZGVkIFRhZ3MgKHRoaXMgZGV2aWNlIGNhbid0IGhhbmRsZSB0aGVtKVxuIik7CgoJ
cGNpX3dhbGtfYnVzKGJyaWRnZS0+YnVzLCBwY2lfY29uZmlndXJlX2V4dGVuZGVkX3RhZ3MsIE5V
TEwpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfU0VSVkVSV09SS1Ms
IDB4MDEzMiwgcXVpcmtfbm9fZXh0X3RhZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lf
VkVORE9SX0lEX1NFUlZFUldPUktTLCAweDAxNDAsIHF1aXJrX25vX2V4dF90YWdzKTsKREVDTEFS
RV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgMHgwMTQxLCBxdWly
a19ub19leHRfdGFncyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfU0VS
VkVSV09SS1MsIDB4MDE0MiwgcXVpcmtfbm9fZXh0X3RhZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9F
QVJMWShQQ0lfVkVORE9SX0lEX1NFUlZFUldPUktTLCAweDAxNDQsIHF1aXJrX25vX2V4dF90YWdz
KTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgMHgw
NDIwLCBxdWlya19ub19leHRfdGFncyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5E
T1JfSURfU0VSVkVSV09SS1MsIDB4MDQyMiwgcXVpcmtfbm9fZXh0X3RhZ3MpOwoKI2lmZGVmIENP
TkZJR19QQ0lfQVRTCi8qCiAqIFNvbWUgZGV2aWNlcyBoYXZlIGEgYnJva2VuIEFUUyBpbXBsZW1l
bnRhdGlvbiBjYXVzaW5nIElPTU1VIHN0YWxscy4KICogRG9uJ3QgdXNlIEFUUyBmb3IgdGhvc2Ug
ZGV2aWNlcy4KICovCnN0YXRpYyB2b2lkIHF1aXJrX25vX2F0cyhzdHJ1Y3QgcGNpX2RldiAqcGRl
dikKewoJcGNpX2luZm8ocGRldiwgImRpc2FibGluZyBBVFMgKGJyb2tlbiBvbiB0aGlzIGRldmlj
ZSlcbiIpOwoJcGRldi0+YXRzX2NhcCA9IDA7Cn0KCi8qIEFNRCBTdG9uZXkgcGxhdGZvcm0gR1BV
ICovCkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLCAweDk4ZTQsIHF1
aXJrX25vX2F0cyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLCAw
eDY5MDAsIHF1aXJrX25vX2F0cyk7CiNlbmRpZiAvKiBDT05GSUdfUENJX0FUUyAqLwoKLyogRnJl
ZXNjYWxlIFBDSWUgZG9lc24ndCBzdXBwb3J0IE1TSSBpbiBSQyBtb2RlICovCnN0YXRpYyB2b2lk
IHF1aXJrX2ZzbF9ub19tc2koc3RydWN0IHBjaV9kZXYgKnBkZXYpCnsKCWlmIChwY2lfcGNpZV90
eXBlKHBkZXYpID09IFBDSV9FWFBfVFlQRV9ST09UX1BPUlQpCgkJcGRldi0+bm9fbXNpID0gMTsK
fQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0ZSRUVTQ0FMRSwgUENJX0FO
WV9JRCwgcXVpcmtfZnNsX25vX21zaSk7CgovKgogKiBBbHRob3VnaCBub3QgYWxsb3dlZCBieSB0
aGUgc3BlYywgc29tZSBtdWx0aS1mdW5jdGlvbiBkZXZpY2VzIGhhdmUKICogZGVwZW5kZW5jaWVz
IG9mIG9uZSBmdW5jdGlvbiAoY29uc3VtZXIpIG9uIGFub3RoZXIgKHN1cHBsaWVyKS4gIEZvciB0
aGUKICogY29uc3VtZXIgdG8gd29yayBpbiBEMCwgdGhlIHN1cHBsaWVyIG11c3QgYWxzbyBiZSBp
biBEMC4gIENyZWF0ZSBhCiAqIGRldmljZSBsaW5rIGZyb20gdGhlIGNvbnN1bWVyIHRvIHRoZSBz
dXBwbGllciB0byBlbmZvcmNlIHRoaXMKICogZGVwZW5kZW5jeS4gIFJ1bnRpbWUgUE0gaXMgYWxs
b3dlZCBieSBkZWZhdWx0IG9uIHRoZSBjb25zdW1lciB0byBwcmV2ZW50CiAqIGl0IGZyb20gcGVy
bWFuZW50bHkga2VlcGluZyB0aGUgc3VwcGxpZXIgYXdha2UuCiAqLwpzdGF0aWMgdm9pZCBwY2lf
Y3JlYXRlX2RldmljZV9saW5rKHN0cnVjdCBwY2lfZGV2ICpwZGV2LCB1bnNpZ25lZCBpbnQgY29u
c3VtZXIsCgkJCQkgICB1bnNpZ25lZCBpbnQgc3VwcGxpZXIsIHVuc2lnbmVkIGludCBjbGFzcywK
CQkJCSAgIHVuc2lnbmVkIGludCBjbGFzc19zaGlmdCkKewoJc3RydWN0IHBjaV9kZXYgKnN1cHBs
aWVyX3BkZXY7CgoJaWYgKFBDSV9GVU5DKHBkZXYtPmRldmZuKSAhPSBjb25zdW1lcikKCQlyZXR1
cm47CgoJc3VwcGxpZXJfcGRldiA9IHBjaV9nZXRfZG9tYWluX2J1c19hbmRfc2xvdChwY2lfZG9t
YWluX25yKHBkZXYtPmJ1cyksCgkJCQlwZGV2LT5idXMtPm51bWJlciwKCQkJCVBDSV9ERVZGTihQ
Q0lfU0xPVChwZGV2LT5kZXZmbiksIHN1cHBsaWVyKSk7CglpZiAoIXN1cHBsaWVyX3BkZXYgfHwg
KHN1cHBsaWVyX3BkZXYtPmNsYXNzID4+IGNsYXNzX3NoaWZ0KSAhPSBjbGFzcykgewoJCXBjaV9k
ZXZfcHV0KHN1cHBsaWVyX3BkZXYpOwoJCXJldHVybjsKCX0KCglpZiAoZGV2aWNlX2xpbmtfYWRk
KCZwZGV2LT5kZXYsICZzdXBwbGllcl9wZGV2LT5kZXYsCgkJCSAgICBETF9GTEFHX1NUQVRFTEVT
UyB8IERMX0ZMQUdfUE1fUlVOVElNRSkpCgkJcGNpX2luZm8ocGRldiwgIkQwIHBvd2VyIHN0YXRl
IGRlcGVuZHMgb24gJXNcbiIsCgkJCSBwY2lfbmFtZShzdXBwbGllcl9wZGV2KSk7CgllbHNlCgkJ
cGNpX2VycihwZGV2LCAiQ2Fubm90IGVuZm9yY2UgcG93ZXIgZGVwZW5kZW5jeSBvbiAlc1xuIiwK
CQkJcGNpX25hbWUoc3VwcGxpZXJfcGRldikpOwoKCXBtX3J1bnRpbWVfYWxsb3coJnBkZXYtPmRl
dik7CglwY2lfZGV2X3B1dChzdXBwbGllcl9wZGV2KTsKfQoKLyoKICogQ3JlYXRlIGRldmljZSBs
aW5rIGZvciBHUFVzIHdpdGggaW50ZWdyYXRlZCBIREEgY29udHJvbGxlciBmb3Igc3RyZWFtaW5n
CiAqIGF1ZGlvIHRvIGF0dGFjaGVkIGRpc3BsYXlzLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfZ3B1
X2hkYShzdHJ1Y3QgcGNpX2RldiAqaGRhKQp7CglwY2lfY3JlYXRlX2RldmljZV9saW5rKGhkYSwg
MSwgMCwgUENJX0JBU0VfQ0xBU1NfRElTUExBWSwgMTYpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0NM
QVNTX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLCBQQ0lfQU5ZX0lELAoJCQkgICAgICBQQ0lfQ0xB
U1NfTVVMVElNRURJQV9IRF9BVURJTywgOCwgcXVpcmtfZ3B1X2hkYSk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0NMQVNTX0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1ELCBQQ0lfQU5ZX0lELAoJCQkgICAgICBQ
Q0lfQ0xBU1NfTVVMVElNRURJQV9IRF9BVURJTywgOCwgcXVpcmtfZ3B1X2hkYSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0NMQVNTX0ZJTkFMKFBDSV9WRU5ET1JfSURfTlZJRElBLCBQQ0lfQU5ZX0lELAoJ
CQkgICAgICBQQ0lfQ0xBU1NfTVVMVElNRURJQV9IRF9BVURJTywgOCwgcXVpcmtfZ3B1X2hkYSk7
CgovKgogKiBDcmVhdGUgZGV2aWNlIGxpbmsgZm9yIE5WSURJQSBHUFUgd2l0aCBpbnRlZ3JhdGVk
IFVTQiB4SENJIEhvc3QKICogY29udHJvbGxlciB0byBWR0EuCiAqLwpzdGF0aWMgdm9pZCBxdWly
a19ncHVfdXNiKHN0cnVjdCBwY2lfZGV2ICp1c2IpCnsKCXBjaV9jcmVhdGVfZGV2aWNlX2xpbmso
dXNiLCAyLCAwLCBQQ0lfQkFTRV9DTEFTU19ESVNQTEFZLCAxNik7Cn0KREVDTEFSRV9QQ0lfRklY
VVBfQ0xBU1NfRklOQUwoUENJX1ZFTkRPUl9JRF9OVklESUEsIFBDSV9BTllfSUQsCgkJCSAgICAg
IFBDSV9DTEFTU19TRVJJQUxfVVNCLCA4LCBxdWlya19ncHVfdXNiKTsKCi8qCiAqIENyZWF0ZSBk
ZXZpY2UgbGluayBmb3IgTlZJRElBIEdQVSB3aXRoIGludGVncmF0ZWQgVHlwZS1DIFVDU0kgY29u
dHJvbGxlcgogKiB0byBWR0EuIEN1cnJlbnRseSB0aGVyZSBpcyBubyBjbGFzcyBjb2RlIGRlZmlu
ZWQgZm9yIFVDU0kgZGV2aWNlIG92ZXIgUENJCiAqIHNvIHVzaW5nIFVOS05PV04gY2xhc3MgZm9y
IG5vdyBhbmQgaXQgd2lsbCBiZSB1cGRhdGVkIHdoZW4gVUNTSQogKiBvdmVyIFBDSSBnZXRzIGEg
Y2xhc3MgY29kZS4KICovCiNkZWZpbmUgUENJX0NMQVNTX1NFUklBTF9VTktOT1dOCTB4MGM4MApz
dGF0aWMgdm9pZCBxdWlya19ncHVfdXNiX3R5cGVjX3Vjc2koc3RydWN0IHBjaV9kZXYgKnVjc2kp
CnsKCXBjaV9jcmVhdGVfZGV2aWNlX2xpbmsodWNzaSwgMywgMCwgUENJX0JBU0VfQ0xBU1NfRElT
UExBWSwgMTYpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0ZJTkFMKFBDSV9WRU5ET1JfSURf
TlZJRElBLCBQQ0lfQU5ZX0lELAoJCQkgICAgICBQQ0lfQ0xBU1NfU0VSSUFMX1VOS05PV04sIDgs
CgkJCSAgICAgIHF1aXJrX2dwdV91c2JfdHlwZWNfdWNzaSk7CgovKgogKiBFbmFibGUgdGhlIE5W
SURJQSBHUFUgaW50ZWdyYXRlZCBIREEgY29udHJvbGxlciBpZiB0aGUgQklPUyBsZWZ0IGl0CiAq
IGRpc2FibGVkLiAgaHR0cHM6Ly9kZXZ0YWxrLm52aWRpYS5jb20vZGVmYXVsdC90b3BpYy8xMDI0
MDIyCiAqLwpzdGF0aWMgdm9pZCBxdWlya19udmlkaWFfaGRhKHN0cnVjdCBwY2lfZGV2ICpncHUp
CnsKCXU4IGhkcl90eXBlOwoJdTMyIHZhbDsKCgkvKiBUaGVyZSB3YXMgbm8gaW50ZWdyYXRlZCBI
REEgY29udHJvbGxlciBiZWZvcmUgTUNQODkgKi8KCWlmIChncHUtPmRldmljZSA8IFBDSV9ERVZJ
Q0VfSURfTlZJRElBX0dFRk9SQ0VfMzIwTSkKCQlyZXR1cm47CgoJLyogQml0IDI1IGF0IG9mZnNl
dCAweDQ4OCBlbmFibGVzIHRoZSBIREEgY29udHJvbGxlciAqLwoJcGNpX3JlYWRfY29uZmlnX2R3
b3JkKGdwdSwgMHg0ODgsICZ2YWwpOwoJaWYgKHZhbCAmIEJJVCgyNSkpCgkJcmV0dXJuOwoKCXBj
aV9pbmZvKGdwdSwgIkVuYWJsaW5nIEhEQSBjb250cm9sbGVyXG4iKTsKCXBjaV93cml0ZV9jb25m
aWdfZHdvcmQoZ3B1LCAweDQ4OCwgdmFsIHwgQklUKDI1KSk7CgoJLyogVGhlIEdQVSBiZWNvbWVz
IGEgbXVsdGktZnVuY3Rpb24gZGV2aWNlIHdoZW4gdGhlIEhEQSBpcyBlbmFibGVkICovCglwY2lf
cmVhZF9jb25maWdfYnl0ZShncHUsIFBDSV9IRUFERVJfVFlQRSwgJmhkcl90eXBlKTsKCWdwdS0+
bXVsdGlmdW5jdGlvbiA9ICEhKGhkcl90eXBlICYgMHg4MCk7Cn0KREVDTEFSRV9QQ0lfRklYVVBf
Q0xBU1NfSEVBREVSKFBDSV9WRU5ET1JfSURfTlZJRElBLCBQQ0lfQU5ZX0lELAoJCQkgICAgICAg
UENJX0JBU0VfQ0xBU1NfRElTUExBWSwgMTYsIHF1aXJrX252aWRpYV9oZGEpOwpERUNMQVJFX1BD
SV9GSVhVUF9DTEFTU19SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9OVklESUEsIFBDSV9BTllf
SUQsCgkJCSAgICAgICBQQ0lfQkFTRV9DTEFTU19ESVNQTEFZLCAxNiwgcXVpcmtfbnZpZGlhX2hk
YSk7CgovKgogKiBTb21lIElEVCBzd2l0Y2hlcyBpbmNvcnJlY3RseSBmbGFnIGFuIEFDUyBTb3Vy
Y2UgVmFsaWRhdGlvbiBlcnJvciBvbgogKiBjb21wbGV0aW9ucyBmb3IgY29uZmlnIHJlYWQgcmVx
dWVzdHMgZXZlbiB0aG91Z2ggUENJZSByNC4wLCBzZWMKICogNi4xMi4xLjEsIHNheXMgdGhhdCBj
b21wbGV0aW9ucyBhcmUgbmV2ZXIgYWZmZWN0ZWQgYnkgQUNTIFNvdXJjZQogKiBWYWxpZGF0aW9u
LiAgSGVyZSdzIHRoZSB0ZXh0IG9mIElEVCA4OUgzMkg4RzMtWUMsIGVycmF0dW0gIzM2OgogKgog
KiAgIEl0ZW0gIzM2IC0gRG93bnN0cmVhbSBwb3J0IGFwcGxpZXMgQUNTIFNvdXJjZSBWYWxpZGF0
aW9uIHRvIENvbXBsZXRpb25zCiAqICAgU2VjdGlvbiA2LjEyLjEuMSBvZiB0aGUgUENJIEV4cHJl
c3MgQmFzZSBTcGVjaWZpY2F0aW9uIDMuMSBzdGF0ZXMgdGhhdAogKiAgIGNvbXBsZXRpb25zIGFy
ZSBuZXZlciBhZmZlY3RlZCBieSBBQ1MgU291cmNlIFZhbGlkYXRpb24uICBIb3dldmVyLAogKiAg
IGNvbXBsZXRpb25zIHJlY2VpdmVkIGJ5IGEgZG93bnN0cmVhbSBwb3J0IG9mIHRoZSBQQ0llIHN3
aXRjaCBmcm9tIGEKICogICBkZXZpY2UgdGhhdCBoYXMgbm90IHlldCBjYXB0dXJlZCBhIFBDSWUg
YnVzIG51bWJlciBhcmUgaW5jb3JyZWN0bHkKICogICBkcm9wcGVkIGJ5IEFDUyBTb3VyY2UgVmFs
aWRhdGlvbiBieSB0aGUgc3dpdGNoIGRvd25zdHJlYW0gcG9ydC4KICoKICogVGhlIHdvcmthcm91
bmQgc3VnZ2VzdGVkIGJ5IElEVCBpcyB0byBpc3N1ZSBhIGNvbmZpZyB3cml0ZSB0byB0aGUKICog
ZG93bnN0cmVhbSBkZXZpY2UgYmVmb3JlIGlzc3VpbmcgdGhlIGZpcnN0IGNvbmZpZyByZWFkLiAg
VGhpcyBhbGxvd3MgdGhlCiAqIGRvd25zdHJlYW0gZGV2aWNlIHRvIGNhcHR1cmUgaXRzIGJ1cyBh
bmQgZGV2aWNlIG51bWJlcnMgKHNlZSBQQ0llIHI0LjAsCiAqIHNlYyAyLjIuOSksIHRodXMgYXZv
aWRpbmcgdGhlIEFDUyBlcnJvciBvbiB0aGUgY29tcGxldGlvbi4KICoKICogSG93ZXZlciwgd2Ug
ZG9uJ3Qga25vdyB3aGVuIHRoZSBkZXZpY2UgaXMgcmVhZHkgdG8gYWNjZXB0IHRoZSBjb25maWcK
ICogd3JpdGUsIHNvIHdlIGRvIGNvbmZpZyByZWFkcyB1bnRpbCB3ZSByZWNlaXZlIGEgbm9uLUNv
bmZpZyBSZXF1ZXN0IFJldHJ5CiAqIFN0YXR1cywgdGhlbiBkbyB0aGUgY29uZmlnIHdyaXRlLgog
KgogKiBUbyBhdm9pZCBoaXR0aW5nIHRoZSBlcnJhdHVtIHdoZW4gZG9pbmcgdGhlIGNvbmZpZyBy
ZWFkcywgd2UgZGlzYWJsZSBBQ1MKICogU1YgYXJvdW5kIHRoaXMgcHJvY2Vzcy4KICovCmludCBw
Y2lfaWR0X2J1c19xdWlyayhzdHJ1Y3QgcGNpX2J1cyAqYnVzLCBpbnQgZGV2Zm4sIHUzMiAqbCwg
aW50IHRpbWVvdXQpCnsKCWludCBwb3M7Cgl1MTYgY3RybCA9IDA7Cglib29sIGZvdW5kOwoJc3Ry
dWN0IHBjaV9kZXYgKmJyaWRnZSA9IGJ1cy0+c2VsZjsKCglwb3MgPSBwY2lfZmluZF9leHRfY2Fw
YWJpbGl0eShicmlkZ2UsIFBDSV9FWFRfQ0FQX0lEX0FDUyk7CgoJLyogRGlzYWJsZSBBQ1MgU1Yg
YmVmb3JlIGluaXRpYWwgY29uZmlnIHJlYWRzICovCglpZiAocG9zKSB7CgkJcGNpX3JlYWRfY29u
ZmlnX3dvcmQoYnJpZGdlLCBwb3MgKyBQQ0lfQUNTX0NUUkwsICZjdHJsKTsKCQlpZiAoY3RybCAm
IFBDSV9BQ1NfU1YpCgkJCXBjaV93cml0ZV9jb25maWdfd29yZChicmlkZ2UsIHBvcyArIFBDSV9B
Q1NfQ1RSTCwKCQkJCQkgICAgICBjdHJsICYgflBDSV9BQ1NfU1YpOwoJfQoKCWZvdW5kID0gcGNp
X2J1c19nZW5lcmljX3JlYWRfZGV2X3ZlbmRvcl9pZChidXMsIGRldmZuLCBsLCB0aW1lb3V0KTsK
CgkvKiBXcml0ZSBWZW5kb3IgSUQgKHJlYWQtb25seSkgc28gdGhlIGVuZHBvaW50IGxhdGNoZXMg
aXRzIGJ1cy9kZXYgKi8KCWlmIChmb3VuZCkKCQlwY2lfYnVzX3dyaXRlX2NvbmZpZ193b3JkKGJ1
cywgZGV2Zm4sIFBDSV9WRU5ET1JfSUQsIDApOwoKCS8qIFJlLWVuYWJsZSBBQ1NfU1YgaWYgaXQg
d2FzIHByZXZpb3VzbHkgZW5hYmxlZCAqLwoJaWYgKGN0cmwgJiBQQ0lfQUNTX1NWKQoJCXBjaV93
cml0ZV9jb25maWdfd29yZChicmlkZ2UsIHBvcyArIFBDSV9BQ1NfQ1RSTCwgY3RybCk7CgoJcmV0
dXJuIGZvdW5kOwp9CgovKgogKiBNaWNyb3NlbWkgU3dpdGNodGVjIE5UQiB1c2VzIGRldmZuIHBy
b3h5IElEcyB0byBtb3ZlIFRMUHMgYmV0d2VlbgogKiBOVCBlbmRwb2ludHMgdmlhIHRoZSBpbnRl
cm5hbCBzd2l0Y2ggZmFicmljLiBUaGVzZSBJRHMgcmVwbGFjZSB0aGUKICogb3JpZ2luYXRpbmcg
cmVxdWVzdG9yIElEIFRMUHMgd2hpY2ggYWNjZXNzIGhvc3QgbWVtb3J5IG9uIHBlZXIgTlRCCiAq
IHBvcnRzLiBUaGVyZWZvcmUsIGFsbCBwcm94eSBJRHMgbXVzdCBiZSBhbGlhc2VkIHRvIHRoZSBO
VEIgZGV2aWNlCiAqIHRvIHBlcm1pdCBhY2Nlc3Mgd2hlbiB0aGUgSU9NTVUgaXMgdHVybmVkIG9u
LgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfc3dpdGNodGVjX250Yl9kbWFfYWxpYXMoc3RydWN0IHBj
aV9kZXYgKnBkZXYpCnsKCXZvaWQgX19pb21lbSAqbW1pbzsKCXN0cnVjdCBudGJfaW5mb19yZWdz
IF9faW9tZW0gKm1taW9fbnRiOwoJc3RydWN0IG50Yl9jdHJsX3JlZ3MgX19pb21lbSAqbW1pb19j
dHJsOwoJdTY0IHBhcnRpdGlvbl9tYXA7Cgl1OCBwYXJ0aXRpb247CglpbnQgcHA7CgoJaWYgKHBj
aV9lbmFibGVfZGV2aWNlKHBkZXYpKSB7CgkJcGNpX2VycihwZGV2LCAiQ2Fubm90IGVuYWJsZSBT
d2l0Y2h0ZWMgZGV2aWNlXG4iKTsKCQlyZXR1cm47Cgl9CgoJbW1pbyA9IHBjaV9pb21hcChwZGV2
LCAwLCAwKTsKCWlmIChtbWlvID09IE5VTEwpIHsKCQlwY2lfZGlzYWJsZV9kZXZpY2UocGRldik7
CgkJcGNpX2VycihwZGV2LCAiQ2Fubm90IGlvbWFwIFN3aXRjaHRlYyBkZXZpY2VcbiIpOwoJCXJl
dHVybjsKCX0KCglwY2lfaW5mbyhwZGV2LCAiU2V0dGluZyBTd2l0Y2h0ZWMgcHJveHkgSUQgYWxp
YXNlc1xuIik7CgoJbW1pb19udGIgPSBtbWlvICsgU1dJVENIVEVDX0dBU19OVEJfT0ZGU0VUOwoJ
bW1pb19jdHJsID0gKHZvaWQgX19pb21lbSAqKSBtbWlvX250YiArIFNXSVRDSFRFQ19OVEJfUkVH
X0NUUkxfT0ZGU0VUOwoKCXBhcnRpdGlvbiA9IGlvcmVhZDgoJm1taW9fbnRiLT5wYXJ0aXRpb25f
aWQpOwoKCXBhcnRpdGlvbl9tYXAgPSBpb3JlYWQzMigmbW1pb19udGItPmVwX21hcCk7CglwYXJ0
aXRpb25fbWFwIHw9ICgodTY0KSBpb3JlYWQzMigmbW1pb19udGItPmVwX21hcCArIDQpKSA8PCAz
MjsKCXBhcnRpdGlvbl9tYXAgJj0gfigxVUxMIDw8IHBhcnRpdGlvbik7CgoJZm9yIChwcCA9IDA7
IHBwIDwgKHNpemVvZihwYXJ0aXRpb25fbWFwKSAqIDgpOyBwcCsrKSB7CgkJc3RydWN0IG50Yl9j
dHJsX3JlZ3MgX19pb21lbSAqbW1pb19wZWVyX2N0cmw7CgkJdTMyIHRhYmxlX3N6ID0gMDsKCQlp
bnQgdGU7CgoJCWlmICghKHBhcnRpdGlvbl9tYXAgJiAoMVVMTCA8PCBwcCkpKQoJCQljb250aW51
ZTsKCgkJcGNpX2RiZyhwZGV2LCAiUHJvY2Vzc2luZyBwYXJ0aXRpb24gJWRcbiIsIHBwKTsKCgkJ
bW1pb19wZWVyX2N0cmwgPSAmbW1pb19jdHJsW3BwXTsKCgkJdGFibGVfc3ogPSBpb3JlYWQxNigm
bW1pb19wZWVyX2N0cmwtPnJlcV9pZF90YWJsZV9zaXplKTsKCQlpZiAoIXRhYmxlX3N6KSB7CgkJ
CXBjaV93YXJuKHBkZXYsICJQYXJ0aXRpb24gJWQgdGFibGVfc3ogMFxuIiwgcHApOwoJCQljb250
aW51ZTsKCQl9CgoJCWlmICh0YWJsZV9zeiA+IDUxMikgewoJCQlwY2lfd2FybihwZGV2LAoJCQkJ
ICJJbnZhbGlkIFN3aXRjaHRlYyBwYXJ0aXRpb24gJWQgdGFibGVfc3ogJWRcbiIsCgkJCQkgcHAs
IHRhYmxlX3N6KTsKCQkJY29udGludWU7CgkJfQoKCQlmb3IgKHRlID0gMDsgdGUgPCB0YWJsZV9z
ejsgdGUrKykgewoJCQl1MzIgcmlkX2VudHJ5OwoJCQl1OCBkZXZmbjsKCgkJCXJpZF9lbnRyeSA9
IGlvcmVhZDMyKCZtbWlvX3BlZXJfY3RybC0+cmVxX2lkX3RhYmxlW3RlXSk7CgkJCWRldmZuID0g
KHJpZF9lbnRyeSA+PiAxKSAmIDB4RkY7CgkJCXBjaV9kYmcocGRldiwKCQkJCSJBbGlhc2luZyBQ
YXJ0aXRpb24gJWQgUHJveHkgSUQgJTAyeC4lZFxuIiwKCQkJCXBwLCBQQ0lfU0xPVChkZXZmbiks
IFBDSV9GVU5DKGRldmZuKSk7CgkJCXBjaV9hZGRfZG1hX2FsaWFzKHBkZXYsIGRldmZuKTsKCQl9
Cgl9CgoJcGNpX2lvdW5tYXAocGRldiwgbW1pbyk7CglwY2lfZGlzYWJsZV9kZXZpY2UocGRldik7
Cn0KI2RlZmluZSBTV0lUQ0hURUNfUVVJUksodmlkKSBcCglERUNMQVJFX1BDSV9GSVhVUF9DTEFT
U19GSU5BTChQQ0lfVkVORE9SX0lEX01JQ1JPU0VNSSwgdmlkLCBcCgkJUENJX0NMQVNTX0JSSURH
RV9PVEhFUiwgOCwgcXVpcmtfc3dpdGNodGVjX250Yl9kbWFfYWxpYXMpCgpTV0lUQ0hURUNfUVVJ
UksoMHg4NTMxKTsgIC8qIFBGWCAyNHhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTMyKTsgIC8q
IFBGWCAzMnhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTMzKTsgIC8qIFBGWCA0OHhHMyAqLwpT
V0lUQ0hURUNfUVVJUksoMHg4NTM0KTsgIC8qIFBGWCA2NHhHMyAqLwpTV0lUQ0hURUNfUVVJUkso
MHg4NTM1KTsgIC8qIFBGWCA4MHhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTM2KTsgIC8qIFBG
WCA5NnhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTQxKTsgIC8qIFBTWCAyNHhHMyAqLwpTV0lU
Q0hURUNfUVVJUksoMHg4NTQyKTsgIC8qIFBTWCAzMnhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4
NTQzKTsgIC8qIFBTWCA0OHhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTQ0KTsgIC8qIFBTWCA2
NHhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTQ1KTsgIC8qIFBTWCA4MHhHMyAqLwpTV0lUQ0hU
RUNfUVVJUksoMHg4NTQ2KTsgIC8qIFBTWCA5NnhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTUx
KTsgIC8qIFBBWCAyNFhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTUyKTsgIC8qIFBBWCAzMlhH
MyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTUzKTsgIC8qIFBBWCA0OFhHMyAqLwpTV0lUQ0hURUNf
UVVJUksoMHg4NTU0KTsgIC8qIFBBWCA2NFhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTU1KTsg
IC8qIFBBWCA4MFhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTU2KTsgIC8qIFBBWCA5NlhHMyAq
LwpTV0lUQ0hURUNfUVVJUksoMHg4NTYxKTsgIC8qIFBGWEwgMjRYRzMgKi8KU1dJVENIVEVDX1FV
SVJLKDB4ODU2Mik7ICAvKiBQRlhMIDMyWEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NjMpOyAg
LyogUEZYTCA0OFhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTY0KTsgIC8qIFBGWEwgNjRYRzMg
Ki8KU1dJVENIVEVDX1FVSVJLKDB4ODU2NSk7ICAvKiBQRlhMIDgwWEczICovClNXSVRDSFRFQ19R
VUlSSygweDg1NjYpOyAgLyogUEZYTCA5NlhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTcxKTsg
IC8qIFBGWEkgMjRYRzMgKi8KU1dJVENIVEVDX1FVSVJLKDB4ODU3Mik7ICAvKiBQRlhJIDMyWEcz
ICovClNXSVRDSFRFQ19RVUlSSygweDg1NzMpOyAgLyogUEZYSSA0OFhHMyAqLwpTV0lUQ0hURUNf
UVVJUksoMHg4NTc0KTsgIC8qIFBGWEkgNjRYRzMgKi8KU1dJVENIVEVDX1FVSVJLKDB4ODU3NSk7
ICAvKiBQRlhJIDgwWEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NzYpOyAgLyogUEZYSSA5NlhH
MyAqLwoKLyoKICogT24gTGVub3ZvIFRoaW5rcGFkIFA1MCBTS1VzIHdpdGggYSBOdmlkaWEgUXVh
ZHJvIE0xMDAwTSwgdGhlIEJJT1MgZG9lcwogKiBub3QgYWx3YXlzIHJlc2V0IHRoZSBzZWNvbmRh
cnkgTnZpZGlhIEdQVSBiZXR3ZWVuIHJlYm9vdHMgaWYgdGhlIHN5c3RlbQogKiBpcyBjb25maWd1
cmVkIHRvIHVzZSBIeWJyaWQgR3JhcGhpY3MgbW9kZS4gIFRoaXMgcmVzdWx0cyBpbiB0aGUgR1BV
CiAqIGJlaW5nIGxlZnQgaW4gd2hhdGV2ZXIgc3RhdGUgaXQgd2FzIGluIGR1cmluZyB0aGUgKnBy
ZXZpb3VzKiBib290LCB3aGljaAogKiBjYXVzZXMgc3B1cmlvdXMgaW50ZXJydXB0cyBmcm9tIHRo
ZSBHUFUsIHdoaWNoIGluIHR1cm4gY2F1c2VzIHVzIHRvCiAqIGRpc2FibGUgdGhlIHdyb25nIElS
USBhbmQgZW5kIHVwIGJyZWFraW5nIHRoZSB0b3VjaHBhZC4gIFVuc3VycHJpc2luZ2x5LAogKiB0
aGlzIGFsc28gY29tcGxldGVseSBicmVha3Mgbm91dmVhdS4KICoKICogTHVja2lseSwgaXQgc2Vl
bXMgYSBzaW1wbGUgcmVzZXQgb2YgdGhlIE52aWRpYSBHUFUgYnJpbmdzIGl0IGJhY2sgdG8gYQog
KiBjbGVhbiBzdGF0ZSBhbmQgZml4ZXMgYWxsIHRoZXNlIGlzc3Vlcy4KICoKICogV2hlbiB0aGUg
bWFjaGluZSBpcyBjb25maWd1cmVkIGluIERlZGljYXRlZCBkaXNwbGF5IG1vZGUsIHRoZSBpc3N1
ZQogKiBkb2Vzbid0IG9jY3VyLiAgRm9ydHVuYXRlbHkgdGhlIEdQVSBhZHZlcnRpc2VzIE5vUmVz
ZXQrIHdoZW4gaW4gdGhpcwogKiBtb2RlLCBzbyB3ZSBjYW4gZGV0ZWN0IHRoYXQgYW5kIGF2b2lk
IHJlc2V0dGluZyBpdC4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3Jlc2V0X2xlbm92b190aGlua3Bh
ZF9wNTBfbnZncHUoc3RydWN0IHBjaV9kZXYgKnBkZXYpCnsKCXZvaWQgX19pb21lbSAqbWFwOwoJ
aW50IHJldDsKCglpZiAocGRldi0+c3Vic3lzdGVtX3ZlbmRvciAhPSBQQ0lfVkVORE9SX0lEX0xF
Tk9WTyB8fAoJICAgIHBkZXYtPnN1YnN5c3RlbV9kZXZpY2UgIT0gMHgyMjJlIHx8CgkgICAgIXBk
ZXYtPnJlc2V0X2ZuKQoJCXJldHVybjsKCglpZiAocGNpX2VuYWJsZV9kZXZpY2VfbWVtKHBkZXYp
KQoJCXJldHVybjsKCgkvKgoJICogQmFzZWQgb24gbnZrbV9kZXZpY2VfY3RvcigpIGluCgkgKiBk
cml2ZXJzL2dwdS9kcm0vbm91dmVhdS9udmttL2VuZ2luZS9kZXZpY2UvYmFzZS5jCgkgKi8KCW1h
cCA9IHBjaV9pb21hcChwZGV2LCAwLCAweDIzMDAwKTsKCWlmICghbWFwKSB7CgkJcGNpX2Vycihw
ZGV2LCAiQ2FuJ3QgbWFwIE1NSU8gc3BhY2VcbiIpOwoJCWdvdG8gb3V0X2Rpc2FibGU7Cgl9CgoJ
LyoKCSAqIE1ha2Ugc3VyZSB0aGUgR1BVIGxvb2tzIGxpa2UgaXQncyBiZWVuIFBPU1RlZCBiZWZv
cmUgcmVzZXR0aW5nCgkgKiBpdC4KCSAqLwoJaWYgKGlvcmVhZDMyKG1hcCArIDB4MjI0MGMpICYg
MHgyKSB7CgkJcGNpX2luZm8ocGRldiwgRldfQlVHICJHUFUgbGVmdCBpbml0aWFsaXplZCBieSBF
RkksIHJlc2V0dGluZ1xuIik7CgkJcmV0ID0gcGNpX3Jlc2V0X2J1cyhwZGV2KTsKCQlpZiAocmV0
IDwgMCkKCQkJcGNpX2VycihwZGV2LCAiRmFpbGVkIHRvIHJlc2V0IEdQVTogJWRcbiIsIHJldCk7
Cgl9CgoJaW91bm1hcChtYXApOwpvdXRfZGlzYWJsZToKCXBjaV9kaXNhYmxlX2RldmljZShwZGV2
KTsKfQpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19GSU5BTChQQ0lfVkVORE9SX0lEX05WSURJQSwg
MHgxM2IxLAoJCQkgICAgICBQQ0lfQ0xBU1NfRElTUExBWV9WR0EsIDgsCgkJCSAgICAgIHF1aXJr
X3Jlc2V0X2xlbm92b190aGlua3BhZF9wNTBfbnZncHUpOwo=
--000000000000c53b200595b30c7c--
