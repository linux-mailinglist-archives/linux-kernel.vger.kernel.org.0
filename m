Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id C39B621AEE
	for <lists+linux-kernel@lfdr.de>; Fri, 17 May 2019 17:47:42 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729324AbfEQPrd (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Fri, 17 May 2019 11:47:33 -0400
Received: from mx2.suse.de ([195.135.220.15]:41056 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728791AbfEQPrd (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 17 May 2019 11:47:33 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 7FE74AF67;
        Fri, 17 May 2019 15:47:32 +0000 (UTC)
Date:   Fri, 17 May 2019 17:47:31 +0200
Message-ID: <s5h36ldf5gs.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     <parna.naveenkumar@gmail.com>
Cc:     <perex@perex.cz>, <alsa-devel@alsa-project.org>,
        <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] sound: open brace should be on the previous line
In-Reply-To: <20190517063328.21512-1-parna.naveenkumar@gmail.com>
References: <20190517063328.21512-1-parna.naveenkumar@gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, 17 May 2019 08:33:28 +0200,
<parna.naveenkumar@gmail.com> wrote:
> 
> From: Naveen Kumar Parna <parna.naveenkumar@gmail.com>
> 
> Resolved open brace { should be on the previous line checkpatch.pl
> error. While addressing this error, also corrected the affected code
> for below mentioned checkpatch errors.
> 
> ERROR: spaces required around that '<' (ctx:VxV)
> ERROR: spaces required around that '==' (ctx:VxV)
> ERROR: space required before the open parenthesis '('
> 
> Signed-off-by: Naveen Kumar Parna <parna.naveenkumar@gmail.com>

Basically I'd take this kind of coding style cleanup only when really
needed as a preliminary work.  If you have a real fix after this,
please send a patch series together, otherwise this will be skipped.


thanks,

Takashi


> ---
>  sound/sound_core.c | 21 +++++++--------------
>  1 file changed, 7 insertions(+), 14 deletions(-)
> 
> diff --git a/sound/sound_core.c b/sound/sound_core.c
> index 40ad000c2e3c..ce794a2afc6b 100644
> --- a/sound/sound_core.c
> +++ b/sound/sound_core.c
> @@ -111,8 +111,7 @@ module_exit(cleanup_soundcore);
>  
>  #define SOUND_STEP 16
>  
> -struct sound_unit
> -{
> +struct sound_unit {
>  	int unit_minor;
>  	const struct file_operations *unit_fops;
>  	struct sound_unit *next;
> @@ -151,8 +150,7 @@ module_param(preclaim_oss, int, 0444);
>  
>  static int soundcore_open(struct inode *, struct file *);
>  
> -static const struct file_operations soundcore_fops =
> -{
> +static const struct file_operations soundcore_fops = {
>  	/* We must have an owner or the module locking fails */
>  	.owner	= THIS_MODULE,
>  	.open	= soundcore_open,
> @@ -173,8 +171,7 @@ static int __sound_insert_unit(struct sound_unit * s, struct sound_unit **list,
>  		while (*list && (*list)->unit_minor<n)
>  			list=&((*list)->next);
>  
> -		while(n<top)
> -		{
> +		while (n < top) {
>  			/* Found a hole ? */
>  			if(*list==NULL || (*list)->unit_minor>n)
>  				break;
> @@ -219,11 +216,9 @@ static int __sound_insert_unit(struct sound_unit * s, struct sound_unit **list,
>   
>  static struct sound_unit *__sound_remove_unit(struct sound_unit **list, int unit)
>  {
> -	while(*list)
> -	{
> +	while (*list) {
>  		struct sound_unit *p=*list;
> -		if(p->unit_minor==unit)
> -		{
> +		if (p->unit_minor == unit) {
>  			*list=p->next;
>  			return p;
>  		}
> @@ -528,8 +523,7 @@ static struct sound_unit *__look_for_unit(int chain, int unit)
>  	struct sound_unit *s;
>  	
>  	s=chains[chain];
> -	while(s && s->unit_minor <= unit)
> -	{
> +	while (s && s->unit_minor <= unit) {
>  		if(s->unit_minor==unit)
>  			return s;
>  		s=s->next;
> @@ -545,8 +539,7 @@ static int soundcore_open(struct inode *inode, struct file *file)
>  	const struct file_operations *new_fops = NULL;
>  
>  	chain=unit&0x0F;
> -	if(chain==4 || chain==5)	/* dsp/audio/dsp16 */
> -	{
> +	if (chain == 4 || chain == 5) {	/* dsp/audio/dsp16 */
>  		unit&=0xF0;
>  		unit|=3;
>  		chain=3;
> -- 
> 2.17.1
> 
> 
