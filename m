Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 52E6DE76A6
	for <lists+linux-kernel@lfdr.de>; Mon, 28 Oct 2019 17:38:45 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2403801AbfJ1Qik (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 28 Oct 2019 12:38:40 -0400
Received: from mx2.suse.de ([195.135.220.15]:44082 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1733084AbfJ1Qik (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 28 Oct 2019 12:38:40 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 2E8A7B2FE;
        Mon, 28 Oct 2019 16:38:38 +0000 (UTC)
Date:   Mon, 28 Oct 2019 17:38:37 +0100
Message-ID: <s5hy2x4u8oi.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Navid Emamdoost <navid.emamdoost@gmail.com>
Cc:     Navid Emamdoost <emamd001@umn.edu>, Kangjie Lu <kjlu@umn.edu>,
        Stephen McCamant <smccaman@umn.edu>,
        Clemens Ladisch <clemens@ladisch.de>,
        Jaroslav Kysela <perex@perex.cz>,
        Takashi Iwai <tiwai@suse.com>, alsa-devel@alsa-project.org,
        LKML <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] ALSA: usb-audio: Fix memory leak in __snd_usbmidi_create
In-Reply-To: <CAEkB2ESwKEQYQx75BnaHf4aUQHObx4jf0hreQx_KTeZ+QCjL4g@mail.gmail.com>
References: <20191027221007.14317-1-navid.emamdoost@gmail.com>
        <s5hpnihmlk3.wl-tiwai@suse.de>
        <CAEkB2ESwKEQYQx75BnaHf4aUQHObx4jf0hreQx_KTeZ+QCjL4g@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 28 Oct 2019 17:25:41 +0100,
Navid Emamdoost wrote:
> 
> Thanks for the explanation,
> 
> On Mon, Oct 28, 2019 at 1:27 AM Takashi Iwai <tiwai@suse.de> wrote:
> >
> > On Sun, 27 Oct 2019 23:10:06 +0100,
> > Navid Emamdoost wrote:
> > >
> > > In the implementation of __snd_usbmidi_create() there is a memory leak
> > > caused by incorrect goto destination. Go to free_midi if
> > > snd_usbmidi_create_endpoints_midiman() or snd_usbmidi_create_endpoints()
> > > fail.
> >
> > No, this will lead to double-free.  After registering the rawmidi
> > interface at snd_usbmidi_create_rawmidi(), the common destructor will
> > be called via rawmidi private_free callback, and this will release the
> > all resources already.
> Now I can see how rawmidi private_free is set up to release the
> resources, but what concerns me is that at the moment of endpoint/port
> creation umidi is not yet added to the midi_list.
> In other words, what I see is that we still have just one local
> pointer to umidi if any of snd_usbmidi_create_endpoint* fail.
> Am I missing something?

The rawmidi object that is created via snd_rawmidi_new() is managed
via snd_device list, and it's traversed at snd_card_disconnect() and
snd_card_free() calls.  It's something like devm-stuff (but
implemented in a different way).  The midi_list is an explicit list
for the USB MIDI driver, and it's an individual one from the device
list.


Takashi

> 
> 
> >
> >
> > thanks,
> >
> > Takashi
> >
> > >
> > > Fixes: 731209cc0417 ("ALSA: usb-midi: Use common error handling code in __snd_usbmidi_create()")
> > > Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
> > > ---
> > >  sound/usb/midi.c | 2 +-
> > >  1 file changed, 1 insertion(+), 1 deletion(-)
> > >
> > > diff --git a/sound/usb/midi.c b/sound/usb/midi.c
> > > index b737f0ec77d0..22db37fbfbbd 100644
> > > --- a/sound/usb/midi.c
> > > +++ b/sound/usb/midi.c
> > > @@ -2476,7 +2476,7 @@ int __snd_usbmidi_create(struct snd_card *card,
> > >       else
> > >               err = snd_usbmidi_create_endpoints(umidi, endpoints);
> > >       if (err < 0)
> > > -             goto exit;
> > > +             goto free_midi;
> > >
> > >       usb_autopm_get_interface_no_resume(umidi->iface);
> > >
> > > --
> > > 2.17.1
> > >
> 
> 
> 
> -- 
> Navid.
> 
