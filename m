Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 64973E4054
	for <lists+linux-kernel@lfdr.de>; Fri, 25 Oct 2019 01:23:08 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730442AbfJXXW5 (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Thu, 24 Oct 2019 19:22:57 -0400
Received: from mail-ot1-f65.google.com ([209.85.210.65]:38850 "EHLO
        mail-ot1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726395AbfJXXW4 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 24 Oct 2019 19:22:56 -0400
Received: by mail-ot1-f65.google.com with SMTP id e11so533870otl.5;
        Thu, 24 Oct 2019 16:22:52 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=YTU3QExDGlNnPnK1VLpa+NSxP5kTQZTtvWYPzdxq1EY=;
        b=m7Tl4gb3PNDo3lTXX3PzsM1vK4HBCiVJWQfuDvlkoNKJWRe51IHqKs5/TpJtlfbU/W
         t/a6FAx9F3H6pK+rXRG4oSCIh49Bf2PsW2uxynoDJ8NMvg9z4Iyrj8I5z6K1qr5dx0YU
         20Yo8sVxc+P+wG0wAFvcWDAgkl12LRjqMBaTMSG8HHL1LZWVyNBko0ouGPRSm0gwc6PH
         tESmKkO9r5/8jAS0ahOX+DC/pyE1viU5/tuB199A3GXDx9uzxoSfTmBo7LNS6d+66Kq1
         CG7kxCYQK6yse1fwZd4Nv6k8CEaVjA73eNI0ODJRO0AA5HGDw9W/TD5EK/lHcp+l4+5m
         0A+w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=YTU3QExDGlNnPnK1VLpa+NSxP5kTQZTtvWYPzdxq1EY=;
        b=Wl1DVfLMwzE//DcATCxePUZZ4SyBOKhGTa9rI8YP2/yVubvE5Bog9LMS7egBSB64rQ
         YAFu9vvGFUQNHRLmLKwEtVhAiwNK5JRExxOV852qGkcaeoQw+BnuUkNExWWfP2hD/b09
         1KK+nXBQ1nD0fl9C7xb+EYzxMBuzWDgj1nChi6g/ERk8F5ljfvL9iY9LsG1MMmg5Tp7l
         GHGTMU8NYaGH5qhci2NvTQHfEMDunBfCG3PAXmk1R0p1d5QLE9qsPIm2gWVgonKQ/yRN
         0l1vPZLlDXnyBWcjWlSJyuCIqsTjApnJ5q6aCXKjfb1h+1eECIr8PDxIJErfa/CiOnsV
         T4qw==
X-Gm-Message-State: APjAAAVERAECBwRuEIsx441AcBWA24BPeT1x5oYlChpFWGHYRz5Lq/cM
        jEM5kAP6xjLGQZaSSnbfzqGi9MdtJQk7czQbPFA=
X-Google-Smtp-Source: APXvYqwhQ3E5w+o7hOv5naB9Ubz36ap04RawqrQXsJQ5WnXtq47IeXYDVx9GdNu4OZweTxHwC68NHgG2qxbxG8tsF0Q=
X-Received: by 2002:a9d:58c6:: with SMTP id s6mr310273oth.215.1571959371946;
 Thu, 24 Oct 2019 16:22:51 -0700 (PDT)
MIME-Version: 1.0
Received: by 2002:a9d:648:0:0:0:0:0 with HTTP; Thu, 24 Oct 2019 16:22:50 -0700 (PDT)
In-Reply-To: <CAFjuqNiyS4cd=YEFvn3tLkp5zSPbO2vj8JfHsymUuDyEmLydUA@mail.gmail.com>
References: <20191020090800.GA2778@light.dominikbrodowski.net>
 <20191021160952.GA229204@google.com> <CAFjuqNg2BjbxsOeOpoo8FQRwatQHeHKhj01hbwNrSHjz9p3vYw@mail.gmail.com>
 <20191021184701.GA1823@light.dominikbrodowski.net> <CAFjuqNiyS4cd=YEFvn3tLkp5zSPbO2vj8JfHsymUuDyEmLydUA@mail.gmail.com>
From:   "Michael ." <keltoiboy@gmail.com>
Date:   Fri, 25 Oct 2019 10:22:50 +1100
Message-ID: <CAFjuqNg8_G-B5Owz1NBxa-nw620hXwcn9WkE4sfETVR81MWatA@mail.gmail.com>
Subject: Re: PCI device function not being enumerated [Was: PCMCIA not working
 on Panasonic Toughbook CF-29]
To:     Bjorn Helgaas <helgaas@kernel.org>
Cc:     Dominik Brodowski <linux@dominikbrodowski.net>,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        Trevor Jacobs <trevor_jacobs@aol.com>,
        Kris Cleveland <tridentperfusion@yahoo.com>,
        Jeff <bluerocksaddles@willitsonline.com>,
        Morgan Klym <moklym@gmail.com>
Content-Type: multipart/mixed; boundary="000000000000f7a9680595b04fb2"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--000000000000f7a9680595b04fb2
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

I just tried to do a kernel compile on Debian Sid running kernel 5.2.
Downloaded 4.19.80 modded the quirks file, please find modded file
attached, and started the compile.
About an hour into it it fails with:
  CC      drivers/pci/quirks.o
drivers/pci/quirks.c:2945:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 2945 | -static void ricoh_mmc_fixup_rl5c476(struct pci_dev *dev)
      | ^
drivers/pci/quirks.c:2974:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 2974 | -DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_RL5C476, ricoh_mmc_fixup_rl5c476);
      | ^
drivers/pci/quirks.c:2975:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 2975 | -DECLARE_PCI_FIXUP_RESUME_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_RL5C476, ricoh_mmc_fixup_rl5c476);
      | ^
drivers/pci/quirks.c:2976:1: error: expected identifier or =E2=80=98(=E2=80=
=99 before =E2=80=98-=E2=80=99 token
 2976 | -
      | ^
In file included from ./include/linux/export.h:45,
                 from ./include/linux/linkage.h:7,
                 from ./include/linux/kernel.h:7,
                 from drivers/pci/quirks.c:16:
drivers/pci/quirks.c:3026:74: error: =E2=80=98ricoh_mmc_fixup_r5c832=E2=80=
=99
undeclared here (not in a function)
 3026 | DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_R5C832, ricoh_mmc_fixup_r5c832);
      |
          ^~~~~~~~~~~~~~~~~~~~~~
./include/linux/compiler.h:296:53: note: in definition of macro =E2=80=98__=
ADDRESSABLE=E2=80=99
  296 |   __PASTE(__addressable_##sym, __LINE__) =3D (void *)&sym;
      |                                                     ^~~
./include/linux/pci.h:1847:2: note: in expansion of macro
=E2=80=98__DECLARE_PCI_FIXUP_SECTION=E2=80=99
 1847 |  __DECLARE_PCI_FIXUP_SECTION(sec, name, vendor, device, class, \
      |  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./include/linux/pci.h:1892:2: note: in expansion of macro
=E2=80=98DECLARE_PCI_FIXUP_SECTION=E2=80=99
 1892 |  DECLARE_PCI_FIXUP_SECTION(.pci_fixup_early,   \
      |  ^~~~~~~~~~~~~~~~~~~~~~~~~
drivers/pci/quirks.c:3026:1: note: in expansion of macro
=E2=80=98DECLARE_PCI_FIXUP_EARLY=E2=80=99
 3026 | DECLARE_PCI_FIXUP_EARLY(PCI_VENDOR_ID_RICOH,
PCI_DEVICE_ID_RICOH_R5C832, ricoh_mmc_fixup_r5c832);
      | ^~~~~~~~~~~~~~~~~~~~~~~
make[5]: *** [scripts/Makefile.build:304: drivers/pci/quirks.o] Error 1
make[4]: *** [scripts/Makefile.build:544: drivers/pci] Error 2
make[3]: *** [Makefile:1046: drivers] Error 2
make[2]: *** [debian/rules:4: build] Error 2
dpkg-buildpackage: error: debian/rules build subprocess returned exit statu=
s 2
make[1]: *** [scripts/package/Makefile:75: deb-pkg] Error 2
make: *** [Makefile:1359: deb-pkg] Error 2
root@michael-desktop:/home/michael/Debian/linux-4.19.80#

I will try later with the latest 5.4-rc to see if the diff is
incompatible with 4.19.
Cheers.
Michael

On 22/10/2019, Michael . <keltoiboy@gmail.com> wrote:
> Thanks Domunik I'll get onto this and report back the results.
>
> On 22/10/2019, Dominik Brodowski <linux@dominikbrodowski.net> wrote:
>> On Tue, Oct 22, 2019 at 05:17:12AM +1100, Michael . wrote:
>>> Thank you Dominik for looking at this for us and passing it on.
>>>
>>> Good morning Bjorn, thank you also for looking into this for us and
>>> thank you for CCing us into this as non of us are on the mailing list.
>>> One question how do we apply this patch or is this for Dominik to try?
>>
>> That's for you and/or other users of this hardware; I cannot test this
>> myself, sorry. As to how to apply the patch: you'd need to apply the
>> patch
>> for the linux kernel sources, and then build a custom kernel. Some hints
>> on
>> that (details depend on the distribtion):
>>
>> 	https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel
>> 	https://wiki.ubuntu.com/KernelTeam/GitKernelBuild
>> 	https://wiki.archlinux.org/index.php/Kernels/Arch_Build_System
>> 	https://kernelnewbies.org/KernelBuild
>>
>> Best,
>> 	Dominik
>>
>

--000000000000f7a9680595b04fb2
Content-Type: text/x-csrc; charset="UTF-8"; name="quirks.c"
Content-Disposition: attachment; filename="quirks.c"
Content-Transfer-Encoding: base64
X-Attachment-Id: file0

Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKLyoKICogVGhpcyBmaWxlIGNvbnRh
aW5zIHdvcmstYXJvdW5kcyBmb3IgbWFueSBrbm93biBQQ0kgaGFyZHdhcmUgYnVncy4KICogRGV2
aWNlcyBwcmVzZW50IG9ubHkgb24gY2VydGFpbiBhcmNoaXRlY3R1cmVzIChob3N0IGJyaWRnZXMg
ZXQgY2V0ZXJhKQogKiBzaG91bGQgYmUgaGFuZGxlZCBpbiBhcmNoLXNwZWNpZmljIGNvZGUuCiAq
CiAqIE5vdGU6IGFueSBxdWlya3MgZm9yIGhvdHBsdWdnYWJsZSBkZXZpY2VzIG11c3QgX05PVF8g
YmUgZGVjbGFyZWQgX19pbml0LgogKgogKiBDb3B5cmlnaHQgKGMpIDE5OTkgTWFydGluIE1hcmVz
IDxtakB1Y3cuY3o+CiAqCiAqIEluaXQvcmVzZXQgcXVpcmtzIGZvciBVU0IgaG9zdCBjb250cm9s
bGVycyBzaG91bGQgYmUgaW4gdGhlIFVTQiBxdWlya3MKICogZmlsZSwgd2hlcmUgdGhlaXIgZHJp
dmVycyBjYW4gdXNlIHRoZW0uCiAqLwoKI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiNpbmNsdWRl
IDxsaW51eC9rZXJuZWwuaD4KI2luY2x1ZGUgPGxpbnV4L2V4cG9ydC5oPgojaW5jbHVkZSA8bGlu
dXgvcGNpLmg+CiNpbmNsdWRlIDxsaW51eC9pbml0Lmg+CiNpbmNsdWRlIDxsaW51eC9kZWxheS5o
PgojaW5jbHVkZSA8bGludXgvYWNwaS5oPgojaW5jbHVkZSA8bGludXgvZG1pLmg+CiNpbmNsdWRl
IDxsaW51eC9wY2ktYXNwbS5oPgojaW5jbHVkZSA8bGludXgvaW9wb3J0Lmg+CiNpbmNsdWRlIDxs
aW51eC9zY2hlZC5oPgojaW5jbHVkZSA8bGludXgva3RpbWUuaD4KI2luY2x1ZGUgPGxpbnV4L21t
Lmg+CiNpbmNsdWRlIDxsaW51eC9udm1lLmg+CiNpbmNsdWRlIDxsaW51eC9wbGF0Zm9ybV9kYXRh
L3g4Ni9hcHBsZS5oPgojaW5jbHVkZSA8bGludXgvcG1fcnVudGltZS5oPgojaW5jbHVkZSA8bGlu
dXgvc3dpdGNodGVjLmg+CiNpbmNsdWRlIDxhc20vZG1hLmg+CS8qIGlzYV9kbWFfYnJpZGdlX2J1
Z2d5ICovCiNpbmNsdWRlICJwY2kuaCIKCnN0YXRpYyBrdGltZV90IGZpeHVwX2RlYnVnX3N0YXJ0
KHN0cnVjdCBwY2lfZGV2ICpkZXYsCgkJCQkgdm9pZCAoKmZuKShzdHJ1Y3QgcGNpX2RldiAqZGV2
KSkKewoJaWYgKGluaXRjYWxsX2RlYnVnKQoJCXBjaV9pbmZvKGRldiwgImNhbGxpbmcgICVwRiBA
ICVpXG4iLCBmbiwgdGFza19waWRfbnIoY3VycmVudCkpOwoKCXJldHVybiBrdGltZV9nZXQoKTsK
fQoKc3RhdGljIHZvaWQgZml4dXBfZGVidWdfcmVwb3J0KHN0cnVjdCBwY2lfZGV2ICpkZXYsIGt0
aW1lX3QgY2FsbHRpbWUsCgkJCSAgICAgICB2b2lkICgqZm4pKHN0cnVjdCBwY2lfZGV2ICpkZXYp
KQp7CglrdGltZV90IGRlbHRhLCByZXR0aW1lOwoJdW5zaWduZWQgbG9uZyBsb25nIGR1cmF0aW9u
OwoKCXJldHRpbWUgPSBrdGltZV9nZXQoKTsKCWRlbHRhID0ga3RpbWVfc3ViKHJldHRpbWUsIGNh
bGx0aW1lKTsKCWR1cmF0aW9uID0gKHVuc2lnbmVkIGxvbmcgbG9uZykga3RpbWVfdG9fbnMoZGVs
dGEpID4+IDEwOwoJaWYgKGluaXRjYWxsX2RlYnVnIHx8IGR1cmF0aW9uID4gMTAwMDApCgkJcGNp
X2luZm8oZGV2LCAiJXBGIHRvb2sgJWxsZCB1c2Vjc1xuIiwgZm4sIGR1cmF0aW9uKTsKfQoKc3Rh
dGljIHZvaWQgcGNpX2RvX2ZpeHVwcyhzdHJ1Y3QgcGNpX2RldiAqZGV2LCBzdHJ1Y3QgcGNpX2Zp
eHVwICpmLAoJCQkgIHN0cnVjdCBwY2lfZml4dXAgKmVuZCkKewoJa3RpbWVfdCBjYWxsdGltZTsK
Cglmb3IgKDsgZiA8IGVuZDsgZisrKQoJCWlmICgoZi0+Y2xhc3MgPT0gKHUzMikgKGRldi0+Y2xh
c3MgPj4gZi0+Y2xhc3Nfc2hpZnQpIHx8CgkJICAgICBmLT5jbGFzcyA9PSAodTMyKSBQQ0lfQU5Z
X0lEKSAmJgoJCSAgICAoZi0+dmVuZG9yID09IGRldi0+dmVuZG9yIHx8CgkJICAgICBmLT52ZW5k
b3IgPT0gKHUxNikgUENJX0FOWV9JRCkgJiYKCQkgICAgKGYtPmRldmljZSA9PSBkZXYtPmRldmlj
ZSB8fAoJCSAgICAgZi0+ZGV2aWNlID09ICh1MTYpIFBDSV9BTllfSUQpKSB7CgkJCXZvaWQgKCpo
b29rKShzdHJ1Y3QgcGNpX2RldiAqZGV2KTsKI2lmZGVmIENPTkZJR19IQVZFX0FSQ0hfUFJFTDMy
X1JFTE9DQVRJT05TCgkJCWhvb2sgPSBvZmZzZXRfdG9fcHRyKCZmLT5ob29rX29mZnNldCk7CiNl
bHNlCgkJCWhvb2sgPSBmLT5ob29rOwojZW5kaWYKCQkJY2FsbHRpbWUgPSBmaXh1cF9kZWJ1Z19z
dGFydChkZXYsIGhvb2spOwoJCQlob29rKGRldik7CgkJCWZpeHVwX2RlYnVnX3JlcG9ydChkZXYs
IGNhbGx0aW1lLCBob29rKTsKCQl9Cn0KCmV4dGVybiBzdHJ1Y3QgcGNpX2ZpeHVwIF9fc3RhcnRf
cGNpX2ZpeHVwc19lYXJseVtdOwpleHRlcm4gc3RydWN0IHBjaV9maXh1cCBfX2VuZF9wY2lfZml4
dXBzX2Vhcmx5W107CmV4dGVybiBzdHJ1Y3QgcGNpX2ZpeHVwIF9fc3RhcnRfcGNpX2ZpeHVwc19o
ZWFkZXJbXTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19lbmRfcGNpX2ZpeHVwc19oZWFkZXJb
XTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19zdGFydF9wY2lfZml4dXBzX2ZpbmFsW107CmV4
dGVybiBzdHJ1Y3QgcGNpX2ZpeHVwIF9fZW5kX3BjaV9maXh1cHNfZmluYWxbXTsKZXh0ZXJuIHN0
cnVjdCBwY2lfZml4dXAgX19zdGFydF9wY2lfZml4dXBzX2VuYWJsZVtdOwpleHRlcm4gc3RydWN0
IHBjaV9maXh1cCBfX2VuZF9wY2lfZml4dXBzX2VuYWJsZVtdOwpleHRlcm4gc3RydWN0IHBjaV9m
aXh1cCBfX3N0YXJ0X3BjaV9maXh1cHNfcmVzdW1lW107CmV4dGVybiBzdHJ1Y3QgcGNpX2ZpeHVw
IF9fZW5kX3BjaV9maXh1cHNfcmVzdW1lW107CmV4dGVybiBzdHJ1Y3QgcGNpX2ZpeHVwIF9fc3Rh
cnRfcGNpX2ZpeHVwc19yZXN1bWVfZWFybHlbXTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19l
bmRfcGNpX2ZpeHVwc19yZXN1bWVfZWFybHlbXTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19z
dGFydF9wY2lfZml4dXBzX3N1c3BlbmRbXTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19lbmRf
cGNpX2ZpeHVwc19zdXNwZW5kW107CmV4dGVybiBzdHJ1Y3QgcGNpX2ZpeHVwIF9fc3RhcnRfcGNp
X2ZpeHVwc19zdXNwZW5kX2xhdGVbXTsKZXh0ZXJuIHN0cnVjdCBwY2lfZml4dXAgX19lbmRfcGNp
X2ZpeHVwc19zdXNwZW5kX2xhdGVbXTsKCnN0YXRpYyBib29sIHBjaV9hcHBseV9maXh1cF9maW5h
bF9xdWlya3M7Cgp2b2lkIHBjaV9maXh1cF9kZXZpY2UoZW51bSBwY2lfZml4dXBfcGFzcyBwYXNz
LCBzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglzdHJ1Y3QgcGNpX2ZpeHVwICpzdGFydCwgKmVuZDsK
Cglzd2l0Y2ggKHBhc3MpIHsKCWNhc2UgcGNpX2ZpeHVwX2Vhcmx5OgoJCXN0YXJ0ID0gX19zdGFy
dF9wY2lfZml4dXBzX2Vhcmx5OwoJCWVuZCA9IF9fZW5kX3BjaV9maXh1cHNfZWFybHk7CgkJYnJl
YWs7CgoJY2FzZSBwY2lfZml4dXBfaGVhZGVyOgoJCXN0YXJ0ID0gX19zdGFydF9wY2lfZml4dXBz
X2hlYWRlcjsKCQllbmQgPSBfX2VuZF9wY2lfZml4dXBzX2hlYWRlcjsKCQlicmVhazsKCgljYXNl
IHBjaV9maXh1cF9maW5hbDoKCQlpZiAoIXBjaV9hcHBseV9maXh1cF9maW5hbF9xdWlya3MpCgkJ
CXJldHVybjsKCQlzdGFydCA9IF9fc3RhcnRfcGNpX2ZpeHVwc19maW5hbDsKCQllbmQgPSBfX2Vu
ZF9wY2lfZml4dXBzX2ZpbmFsOwoJCWJyZWFrOwoKCWNhc2UgcGNpX2ZpeHVwX2VuYWJsZToKCQlz
dGFydCA9IF9fc3RhcnRfcGNpX2ZpeHVwc19lbmFibGU7CgkJZW5kID0gX19lbmRfcGNpX2ZpeHVw
c19lbmFibGU7CgkJYnJlYWs7CgoJY2FzZSBwY2lfZml4dXBfcmVzdW1lOgoJCXN0YXJ0ID0gX19z
dGFydF9wY2lfZml4dXBzX3Jlc3VtZTsKCQllbmQgPSBfX2VuZF9wY2lfZml4dXBzX3Jlc3VtZTsK
CQlicmVhazsKCgljYXNlIHBjaV9maXh1cF9yZXN1bWVfZWFybHk6CgkJc3RhcnQgPSBfX3N0YXJ0
X3BjaV9maXh1cHNfcmVzdW1lX2Vhcmx5OwoJCWVuZCA9IF9fZW5kX3BjaV9maXh1cHNfcmVzdW1l
X2Vhcmx5OwoJCWJyZWFrOwoKCWNhc2UgcGNpX2ZpeHVwX3N1c3BlbmQ6CgkJc3RhcnQgPSBfX3N0
YXJ0X3BjaV9maXh1cHNfc3VzcGVuZDsKCQllbmQgPSBfX2VuZF9wY2lfZml4dXBzX3N1c3BlbmQ7
CgkJYnJlYWs7CgoJY2FzZSBwY2lfZml4dXBfc3VzcGVuZF9sYXRlOgoJCXN0YXJ0ID0gX19zdGFy
dF9wY2lfZml4dXBzX3N1c3BlbmRfbGF0ZTsKCQllbmQgPSBfX2VuZF9wY2lfZml4dXBzX3N1c3Bl
bmRfbGF0ZTsKCQlicmVhazsKCglkZWZhdWx0OgoJCS8qIHN0dXBpZCBjb21waWxlciB3YXJuaW5n
LCB5b3Ugd291bGQgdGhpbmsgd2l0aCBhbiBlbnVtLi4uICovCgkJcmV0dXJuOwoJfQoJcGNpX2Rv
X2ZpeHVwcyhkZXYsIHN0YXJ0LCBlbmQpOwp9CkVYUE9SVF9TWU1CT0wocGNpX2ZpeHVwX2Rldmlj
ZSk7CgpzdGF0aWMgaW50IF9faW5pdCBwY2lfYXBwbHlfZmluYWxfcXVpcmtzKHZvaWQpCnsKCXN0
cnVjdCBwY2lfZGV2ICpkZXYgPSBOVUxMOwoJdTggY2xzID0gMDsKCXU4IHRtcDsKCglpZiAocGNp
X2NhY2hlX2xpbmVfc2l6ZSkKCQlwcmludGsoS0VSTl9ERUJVRyAiUENJOiBDTFMgJXUgYnl0ZXNc
biIsCgkJICAgICAgIHBjaV9jYWNoZV9saW5lX3NpemUgPDwgMik7CgoJcGNpX2FwcGx5X2ZpeHVw
X2ZpbmFsX3F1aXJrcyA9IHRydWU7Cglmb3JfZWFjaF9wY2lfZGV2KGRldikgewoJCXBjaV9maXh1
cF9kZXZpY2UocGNpX2ZpeHVwX2ZpbmFsLCBkZXYpOwoJCS8qCgkJICogSWYgYXJjaCBoYXNuJ3Qg
c2V0IGl0IGV4cGxpY2l0bHkgeWV0LCB1c2UgdGhlIENMUwoJCSAqIHZhbHVlIHNoYXJlZCBieSBh
bGwgUENJIGRldmljZXMuICBJZiB0aGVyZSdzIGEKCQkgKiBtaXNtYXRjaCwgZmFsbCBiYWNrIHRv
IHRoZSBkZWZhdWx0IHZhbHVlLgoJCSAqLwoJCWlmICghcGNpX2NhY2hlX2xpbmVfc2l6ZSkgewoJ
CQlwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIFBDSV9DQUNIRV9MSU5FX1NJWkUsICZ0bXApOwoJ
CQlpZiAoIWNscykKCQkJCWNscyA9IHRtcDsKCQkJaWYgKCF0bXAgfHwgY2xzID09IHRtcCkKCQkJ
CWNvbnRpbnVlOwoKCQkJcHJpbnRrKEtFUk5fREVCVUcgIlBDSTogQ0xTIG1pc21hdGNoICgldSAh
PSAldSksIHVzaW5nICV1IGJ5dGVzXG4iLAoJCQkgICAgICAgY2xzIDw8IDIsIHRtcCA8PCAyLAoJ
CQkgICAgICAgcGNpX2RmbF9jYWNoZV9saW5lX3NpemUgPDwgMik7CgkJCXBjaV9jYWNoZV9saW5l
X3NpemUgPSBwY2lfZGZsX2NhY2hlX2xpbmVfc2l6ZTsKCQl9Cgl9CgoJaWYgKCFwY2lfY2FjaGVf
bGluZV9zaXplKSB7CgkJcHJpbnRrKEtFUk5fREVCVUcgIlBDSTogQ0xTICV1IGJ5dGVzLCBkZWZh
dWx0ICV1XG4iLAoJCSAgICAgICBjbHMgPDwgMiwgcGNpX2RmbF9jYWNoZV9saW5lX3NpemUgPDwg
Mik7CgkJcGNpX2NhY2hlX2xpbmVfc2l6ZSA9IGNscyA/IGNscyA6IHBjaV9kZmxfY2FjaGVfbGlu
ZV9zaXplOwoJfQoKCXJldHVybiAwOwp9CmZzX2luaXRjYWxsX3N5bmMocGNpX2FwcGx5X2ZpbmFs
X3F1aXJrcyk7CgovKgogKiBEZWNvZGluZyBzaG91bGQgYmUgZGlzYWJsZWQgZm9yIGEgUENJIGRl
dmljZSBkdXJpbmcgQkFSIHNpemluZyB0byBhdm9pZAogKiBjb25mbGljdC4gQnV0IGRvaW5nIHNv
IG1heSBjYXVzZSBwcm9ibGVtcyBvbiBob3N0IGJyaWRnZSBhbmQgcGVyaGFwcyBvdGhlcgogKiBr
ZXkgc3lzdGVtIGRldmljZXMuIEZvciBkZXZpY2VzIHRoYXQgbmVlZCB0byBoYXZlIG1taW8gZGVj
b2RpbmcgYWx3YXlzLW9uLAogKiB3ZSBuZWVkIHRvIHNldCB0aGUgZGV2LT5tbWlvX2Fsd2F5c19v
biBiaXQuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19tbWlvX2Fsd2F5c19vbihzdHJ1Y3QgcGNpX2Rl
diAqZGV2KQp7CglkZXYtPm1taW9fYWx3YXlzX29uID0gMTsKfQpERUNMQVJFX1BDSV9GSVhVUF9D
TEFTU19FQVJMWShQQ0lfQU5ZX0lELCBQQ0lfQU5ZX0lELAoJCQkJUENJX0NMQVNTX0JSSURHRV9I
T1NULCA4LCBxdWlya19tbWlvX2Fsd2F5c19vbik7CgovKgogKiBUaGUgTWVsbGFub3ggVGF2b3Ig
ZGV2aWNlIGdpdmVzIGZhbHNlIHBvc2l0aXZlIHBhcml0eSBlcnJvcnMuICBNYXJrIHRoaXMKICog
ZGV2aWNlIHdpdGggYSBicm9rZW5fcGFyaXR5X3N0YXR1cyB0byBhbGxvdyBQQ0kgc2Nhbm5pbmcg
Y29kZSB0byAic2tpcCIKICogdGhpcyBub3cgYmxhY2tsaXN0ZWQgZGV2aWNlLgogKi8Kc3RhdGlj
IHZvaWQgcXVpcmtfbWVsbGFub3hfdGF2b3Ioc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2LT5i
cm9rZW5fcGFyaXR5X3N0YXR1cyA9IDE7CS8qIFRoaXMgZGV2aWNlIGdpdmVzIGZhbHNlIHBvc2l0
aXZlcyAqLwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfTUVMTEFOT1gs
IFBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfVEFWT1IsIHF1aXJrX21lbGxhbm94X3Rhdm9yKTsKREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9NRUxMQU5PWCwgUENJX0RFVklDRV9J
RF9NRUxMQU5PWF9UQVZPUl9CUklER0UsIHF1aXJrX21lbGxhbm94X3Rhdm9yKTsKCi8qCiAqIERl
YWwgd2l0aCBicm9rZW4gQklPU2VzIHRoYXQgbmVnbGVjdCB0byBlbmFibGUgcGFzc2l2ZSByZWxl
YXNlLAogKiB3aGljaCBjYW4gY2F1c2UgcHJvYmxlbXMgaW4gY29tYmluYXRpb24gd2l0aCB0aGUg
ODI0NDFGWC9QUHJvIE1UUlJzCiAqLwpzdGF0aWMgdm9pZCBxdWlya19wYXNzaXZlX3JlbGVhc2Uo
c3RydWN0IHBjaV9kZXYgKmRldikKewoJc3RydWN0IHBjaV9kZXYgKmQgPSBOVUxMOwoJdW5zaWdu
ZWQgY2hhciBkbGM7CgoJLyoKCSAqIFdlIGhhdmUgdG8gbWFrZSBzdXJlIGEgcGFydGljdWxhciBi
aXQgaXMgc2V0IGluIHRoZSBQSUlYMwoJICogSVNBIGJyaWRnZSwgc28gd2UgaGF2ZSB0byBnbyBv
dXQgYW5kIGZpbmQgaXQuCgkgKi8KCXdoaWxlICgoZCA9IHBjaV9nZXRfZGV2aWNlKFBDSV9WRU5E
T1JfSURfSU5URUwsIFBDSV9ERVZJQ0VfSURfSU5URUxfODIzNzFTQl8wLCBkKSkpIHsKCQlwY2lf
cmVhZF9jb25maWdfYnl0ZShkLCAweDgyLCAmZGxjKTsKCQlpZiAoIShkbGMgJiAxPDwxKSkgewoJ
CQlwY2lfaW5mbyhkLCAiUElJWDM6IEVuYWJsaW5nIFBhc3NpdmUgUmVsZWFzZVxuIik7CgkJCWRs
YyB8PSAxPDwxOwoJCQlwY2lfd3JpdGVfY29uZmlnX2J5dGUoZCwgMHg4MiwgZGxjKTsKCQl9Cgl9
Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklD
RV9JRF9JTlRFTF84MjQ0MSwJcXVpcmtfcGFzc2l2ZV9yZWxlYXNlKTsKREVDTEFSRV9QQ0lfRklY
VVBfUkVTVU1FKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI0NDEs
CXF1aXJrX3Bhc3NpdmVfcmVsZWFzZSk7CgovKgogKiBUaGUgVklBIFZQMi9WUDMvTVZQMyBzZWVt
IHRvIGhhdmUgc29tZSAnZmVhdHVyZXMnLiBUaGVyZSBtYXkgYmUgYQogKiB3b3JrYXJvdW5kIGJ1
dCBWSUEgZG9uJ3QgYW5zd2VyIHF1ZXJpZXMuIElmIHlvdSBoYXBwZW4gdG8gaGF2ZSBnb29kCiAq
IGNvbnRhY3RzIGF0IFZJQSBhc2sgdGhlbSBmb3IgbWUgcGxlYXNlIC0tIEFsYW4KICoKICogVGhp
cyBhcHBlYXJzIHRvIGJlIEJJT1Mgbm90IHZlcnNpb24gZGVwZW5kZW50LiBTbyBwcmVzdW1hYmx5
IHRoZXJlIGlzIGEKICogY2hpcHNldCBsZXZlbCBmaXguCiAqLwpzdGF0aWMgdm9pZCBxdWlya19p
c2FfZG1hX2hhbmdzKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWlmICghaXNhX2RtYV9icmlkZ2Vf
YnVnZ3kpIHsKCQlpc2FfZG1hX2JyaWRnZV9idWdneSA9IDE7CgkJcGNpX2luZm8oZGV2LCAiQWN0
aXZhdGluZyBJU0EgRE1BIGhhbmcgd29ya2Fyb3VuZHNcbiIpOwoJfQp9Ci8qCiAqIEl0J3Mgbm90
IHRvdGFsbHkgY2xlYXIgd2hpY2ggY2hpcHNldHMgYXJlIHRoZSBwcm9ibGVtYXRpYyBvbmVzLiAg
V2Uga25vdwogKiA4MkM1ODYgYW5kIDgyQzU5NiB2YXJpYW50cyBhcmUgYWZmZWN0ZWQuCiAqLwpE
RUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9W
SUFfODJDNTg2XzAsCXF1aXJrX2lzYV9kbWFfaGFuZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5B
TChQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNTk2LAlxdWlya19pc2Ff
ZG1hX2hhbmdzKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwg
ICAgUENJX0RFVklDRV9JRF9JTlRFTF84MjM3MVNCXzAsICBxdWlya19pc2FfZG1hX2hhbmdzKTsK
REVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BTCwJUENJX0RFVklDRV9JRF9B
TF9NMTUzMywJCXF1aXJrX2lzYV9kbWFfaGFuZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQ
Q0lfVkVORE9SX0lEX05FQywJUENJX0RFVklDRV9JRF9ORUNfQ0JVU18xLAlxdWlya19pc2FfZG1h
X2hhbmdzKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9ORUMsCVBDSV9E
RVZJQ0VfSURfTkVDX0NCVVNfMiwJcXVpcmtfaXNhX2RtYV9oYW5ncyk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfTkVDLAlQQ0lfREVWSUNFX0lEX05FQ19DQlVTXzMsCXF1
aXJrX2lzYV9kbWFfaGFuZ3MpOwoKLyoKICogSW50ZWwgTk0xMCAiVGlnZXJQb2ludCIgTFBDIFBN
MWFfU1RTLkJNX1NUUyBtdXN0IGJlIGNsZWFyCiAqIGZvciBzb21lIEhUIG1hY2hpbmVzIHRvIHVz
ZSBDNCB3L28gaGFuZ2luZy4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3RpZ2VycG9pbnRfYm1fc3Rz
KHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUzMiBwbWJhc2U7Cgl1MTYgcG0xYTsKCglwY2lfcmVh
ZF9jb25maWdfZHdvcmQoZGV2LCAweDQwLCAmcG1iYXNlKTsKCXBtYmFzZSA9IHBtYmFzZSAmIDB4
ZmY4MDsKCXBtMWEgPSBpbncocG1iYXNlKTsKCglpZiAocG0xYSAmIDB4MTApIHsKCQlwY2lfaW5m
byhkZXYsIEZXX0JVRyAiVGlnZXJQb2ludCBMUEMuQk1fU1RTIGNsZWFyZWRcbiIpOwoJCW91dHco
MHgxMCwgcG1iYXNlKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9J
RF9JTlRFTCwgUENJX0RFVklDRV9JRF9JTlRFTF9UR1BfTFBDLCBxdWlya190aWdlcnBvaW50X2Jt
X3N0cyk7CgovKiBDaGlwc2V0cyB3aGVyZSBQQ0ktPlBDSSB0cmFuc2ZlcnMgdmFuaXNoIG9yIGhh
bmcgKi8Kc3RhdGljIHZvaWQgcXVpcmtfbm9wY2lwY2koc3RydWN0IHBjaV9kZXYgKmRldikKewoJ
aWYgKChwY2lfcGNpX3Byb2JsZW1zICYgUENJUENJX0ZBSUwpID09IDApIHsKCQlwY2lfaW5mbyhk
ZXYsICJEaXNhYmxpbmcgZGlyZWN0IFBDSS9QQ0kgdHJhbnNmZXJzXG4iKTsKCQlwY2lfcGNpX3By
b2JsZW1zIHw9IFBDSVBDSV9GQUlMOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lfNTU5NywJCXF1aXJrX25vcGNpcGNpKTsKREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9TSSwJUENJX0RFVklDRV9JRF9TSV80
OTYsCQlxdWlya19ub3BjaXBjaSk7CgpzdGF0aWMgdm9pZCBxdWlya19ub3BjaWFtZChzdHJ1Y3Qg
cGNpX2RldiAqZGV2KQp7Cgl1OCByZXY7CglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4MDgs
ICZyZXYpOwoJaWYgKHJldiA9PSAweDEzKSB7CgkJLyogRXJyYXR1bSAyNCAqLwoJCXBjaV9pbmZv
KGRldiwgIkNoaXBzZXQgZXJyYXR1bTogRGlzYWJsaW5nIGRpcmVjdCBQQ0kvQUdQIHRyYW5zZmVy
c1xuIik7CgkJcGNpX3BjaV9wcm9ibGVtcyB8PSBQQ0lBR1BfRkFJTDsKCX0KfQpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FNRCwJUENJX0RFVklDRV9JRF9BTURfODE1MV8w
LAlxdWlya19ub3BjaWFtZCk7CgovKiBUcml0b24gcmVxdWlyZXMgd29ya2Fyb3VuZHMgdG8gYmUg
dXNlZCBieSB0aGUgZHJpdmVycyAqLwpzdGF0aWMgdm9pZCBxdWlya190cml0b24oc3RydWN0IHBj
aV9kZXYgKmRldikKewoJaWYgKChwY2lfcGNpX3Byb2JsZW1zJlBDSVBDSV9UUklUT04pID09IDAp
IHsKCQlwY2lfaW5mbyhkZXYsICJMaW1pdGluZyBkaXJlY3QgUENJL1BDSSB0cmFuc2ZlcnNcbiIp
OwoJCXBjaV9wY2lfcHJvYmxlbXMgfD0gUENJUENJX1RSSVRPTjsKCX0KfQpERUNMQVJFX1BDSV9G
SVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyNDM3
LAlxdWlya190cml0b24pOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lO
VEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyNDM3VlgsCXF1aXJrX3RyaXRvbik7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxf
ODI0MzksCXF1aXJrX3RyaXRvbik7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI0MzlUWCwJcXVpcmtfdHJpdG9uKTsKCi8q
CiAqIFZJQSBBcG9sbG8gS1QxMzMgbmVlZHMgUENJIGxhdGVuY3kgcGF0Y2gKICogTWFkZSBhY2Nv
cmRpbmcgdG8gYSBXaW5kb3dzIGRyaXZlci1iYXNlZCBwYXRjaCBieSBHZW9yZ2UgRS4gQnJlZXNl
OwogKiBzZWUgUENJIExhdGVuY3kgQWRqdXN0IG9uIGh0dHA6Ly93d3cudmlhaGFyZHdhcmUuY29t
L2Rvd25sb2FkL3ZpYXR3ZWFrLnNodG0KICogQWxzbyBzZWUgaHR0cDovL3d3dy5hdS1qYS5vcmcv
cmV2aWV3LWt0MTMzYS0xLWVuLnBodG1sIGZvciB0aGUgaW5mbyBvbgogKiB3aGljaCBNciBCcmVl
c2UgYmFzZWQgaGlzIHdvcmsuCiAqCiAqIFVwZGF0ZWQgYmFzZWQgb24gZnVydGhlciBpbmZvcm1h
dGlvbiBmcm9tIHRoZSBzaXRlIGFuZCBhbHNvIG9uCiAqIGluZm9ybWF0aW9uIHByb3ZpZGVkIGJ5
IFZJQQogKi8Kc3RhdGljIHZvaWQgcXVpcmtfdmlhbGF0ZW5jeShzdHJ1Y3QgcGNpX2RldiAqZGV2
KQp7CglzdHJ1Y3QgcGNpX2RldiAqcDsKCXU4IGJ1c2FyYjsKCgkvKgoJICogT2ssIHdlIGhhdmUg
YSBwb3RlbnRpYWwgcHJvYmxlbSBjaGlwc2V0IGhlcmUuIE5vdyBzZWUgaWYgd2UgaGF2ZQoJICog
YSBidWdneSBzb3V0aGJyaWRnZS4KCSAqLwoJcCA9IHBjaV9nZXRfZGV2aWNlKFBDSV9WRU5ET1Jf
SURfVklBLCBQQ0lfREVWSUNFX0lEX1ZJQV84MkM2ODYsIE5VTEwpOwoJaWYgKHAgIT0gTlVMTCkg
ewoKCQkvKgoJCSAqIDB4NDAgLSAweDRmID09IDY4NkIsIDB4MTAgLSAweDJmID09IDY4NkE7CgkJ
ICogdGhhbmtzIERhbiBIb2xsaXMuCgkJICogQ2hlY2sgZm9yIGJ1Z2d5IHBhcnQgcmV2aXNpb25z
CgkJICovCgkJaWYgKHAtPnJldmlzaW9uIDwgMHg0MCB8fCBwLT5yZXZpc2lvbiA+IDB4NDIpCgkJ
CWdvdG8gZXhpdDsKCX0gZWxzZSB7CgkJcCA9IHBjaV9nZXRfZGV2aWNlKFBDSV9WRU5ET1JfSURf
VklBLCBQQ0lfREVWSUNFX0lEX1ZJQV84MjMxLCBOVUxMKTsKCQlpZiAocCA9PSBOVUxMKQkvKiBO
byBwcm9ibGVtIHBhcnRzICovCgkJCWdvdG8gZXhpdDsKCgkJLyogQ2hlY2sgZm9yIGJ1Z2d5IHBh
cnQgcmV2aXNpb25zICovCgkJaWYgKHAtPnJldmlzaW9uIDwgMHgxMCB8fCBwLT5yZXZpc2lvbiA+
IDB4MTIpCgkJCWdvdG8gZXhpdDsKCX0KCgkvKgoJICogT2sgd2UgaGF2ZSB0aGUgcHJvYmxlbS4g
Tm93IHNldCB0aGUgUENJIG1hc3RlciBncmFudCB0byBvY2N1cgoJICogZXZlcnkgbWFzdGVyIGdy
YW50LiBUaGUgYXBwYXJlbnQgYnVnIGlzIHRoYXQgdW5kZXIgaGlnaCBQQ0kgbG9hZAoJICogKHF1
aXRlIGNvbW1vbiBpbiBMaW51eCBvZiBjb3Vyc2UpIHlvdSBjYW4gZ2V0IGRhdGEgbG9zcyB3aGVu
IHRoZQoJICogQ1BVIGlzIGhlbGQgb2ZmIHRoZSBidXMgZm9yIDMgYnVzIG1hc3RlciByZXF1ZXN0
cy4gIFRoaXMgaGFwcGVucwoJICogdG8gaW5jbHVkZSB0aGUgSURFIGNvbnRyb2xsZXJzLi4uLgoJ
ICoKCSAqIFZJQSBvbmx5IGFwcGx5IHRoaXMgZml4IHdoZW4gYW4gU0IgTGl2ZSEgaXMgcHJlc2Vu
dCBidXQgdW5kZXIKCSAqIGJvdGggTGludXggYW5kIFdpbmRvd3MgdGhpcyBpc24ndCBlbm91Z2gs
IGFuZCB3ZSBoYXZlIHNlZW4KCSAqIGNvcnJ1cHRpb24gd2l0aG91dCBTQiBMaXZlISBidXQgd2l0
aCB0aGluZ3MgbGlrZSAzIFVETUEgSURFCgkgKiBjb250cm9sbGVycy4gU28gd2UgaWdub3JlIHRo
YXQgYml0IG9mIHRoZSBWSUEgcmVjb21tZW5kYXRpb24uLgoJICovCglwY2lfcmVhZF9jb25maWdf
Ynl0ZShkZXYsIDB4NzYsICZidXNhcmIpOwoKCS8qCgkgKiBTZXQgYml0IDQgYW5kIGJpdCA1IG9m
IGJ5dGUgNzYgdG8gMHgwMQoJICogIk1hc3RlciBwcmlvcml0eSByb3RhdGlvbiBvbiBldmVyeSBQ
Q0kgbWFzdGVyIGdyYW50IgoJICovCglidXNhcmIgJj0gfigxPDw1KTsKCWJ1c2FyYiB8PSAoMTw8
NCk7CglwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCAweDc2LCBidXNhcmIpOwoJcGNpX2luZm8o
ZGV2LCAiQXBwbHlpbmcgVklBIHNvdXRoYnJpZGdlIHdvcmthcm91bmRcbiIpOwpleGl0OgoJcGNp
X2Rldl9wdXQocCk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9WSUEs
CVBDSV9ERVZJQ0VfSURfVklBXzgzNjNfMCwJcXVpcmtfdmlhbGF0ZW5jeSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MzcxXzEs
CXF1aXJrX3ZpYWxhdGVuY3kpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lE
X1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODM2MSwJCXF1aXJrX3ZpYWxhdGVuY3kpOwovKiBNdXN0
IHJlc3RvcmUgdGhpcyBvbiBhIHJlc3VtZSBmcm9tIFJBTSAqLwpERUNMQVJFX1BDSV9GSVhVUF9S
RVNVTUUoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0VfSURfVklBXzgzNjNfMCwJcXVpcmtf
dmlhbGF0ZW5jeSk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX1ZJQSwJ
UENJX0RFVklDRV9JRF9WSUFfODM3MV8xLAlxdWlya192aWFsYXRlbmN5KTsKREVDTEFSRV9QQ0lf
RklYVVBfUkVTVU1FKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MzYxLAkJ
cXVpcmtfdmlhbGF0ZW5jeSk7CgovKiBWSUEgQXBvbGxvIFZQMyBuZWVkcyBFVEJGIG9uIEJUODQ4
Lzg3OCAqLwpzdGF0aWMgdm9pZCBxdWlya192aWFldGJmKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsK
CWlmICgocGNpX3BjaV9wcm9ibGVtcyZQQ0lQQ0lfVklBRVRCRikgPT0gMCkgewoJCXBjaV9pbmZv
KGRldiwgIkxpbWl0aW5nIGRpcmVjdCBQQ0kvUENJIHRyYW5zZmVyc1xuIik7CgkJcGNpX3BjaV9w
cm9ibGVtcyB8PSBQQ0lQQ0lfVklBRVRCRjsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQ
Q0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNTk3XzAsCXF1aXJrX3ZpYWV0
YmYpOwoKc3RhdGljIHZvaWQgcXVpcmtfdnNmeChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAo
KHBjaV9wY2lfcHJvYmxlbXMmUENJUENJX1ZTRlgpID09IDApIHsKCQlwY2lfaW5mbyhkZXYsICJM
aW1pdGluZyBkaXJlY3QgUENJL1BDSSB0cmFuc2ZlcnNcbiIpOwoJCXBjaV9wY2lfcHJvYmxlbXMg
fD0gUENJUENJX1ZTRlg7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9J
RF9WSUEsCVBDSV9ERVZJQ0VfSURfVklBXzgyQzU3NiwJcXVpcmtfdnNmeCk7CgovKgogKiBBTGkg
TWFnaWsgcmVxdWlyZXMgd29ya2Fyb3VuZHMgdG8gYmUgdXNlZCBieSB0aGUgZHJpdmVycyB0aGF0
IERNQSB0byBBR1AKICogc3BhY2UuIExhdGVuY3kgbXVzdCBiZSBzZXQgdG8gMHhBIGFuZCBUcml0
b24gd29ya2Fyb3VuZCBhcHBsaWVkIHRvby4KICogW0luZm8ga2luZGx5IHByb3ZpZGVkIGJ5IEFM
aV0KICovCnN0YXRpYyB2b2lkIHF1aXJrX2FsaW1hZ2lrKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsK
CWlmICgocGNpX3BjaV9wcm9ibGVtcyZQQ0lQQ0lfQUxJTUFHSUspID09IDApIHsKCQlwY2lfaW5m
byhkZXYsICJMaW1pdGluZyBkaXJlY3QgUENJL1BDSSB0cmFuc2ZlcnNcbiIpOwoJCXBjaV9wY2lf
cHJvYmxlbXMgfD0gUENJUENJX0FMSU1BR0lLfFBDSVBDSV9UUklUT047Cgl9Cn0KREVDTEFSRV9Q
Q0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BTCwJUENJX0RFVklDRV9JRF9BTF9NMTY0NywJ
CXF1aXJrX2FsaW1hZ2lrKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9B
TCwJUENJX0RFVklDRV9JRF9BTF9NMTY1MSwJCXF1aXJrX2FsaW1hZ2lrKTsKCi8qIE5hdG9tYSBo
YXMgc29tZSBpbnRlcmVzdGluZyBib3VuZGFyeSBjb25kaXRpb25zIHdpdGggWm9yYW4gc3R1ZmYg
YXQgbGVhc3QgKi8Kc3RhdGljIHZvaWQgcXVpcmtfbmF0b21hKHN0cnVjdCBwY2lfZGV2ICpkZXYp
CnsKCWlmICgocGNpX3BjaV9wcm9ibGVtcyZQQ0lQQ0lfTkFUT01BKSA9PSAwKSB7CgkJcGNpX2lu
Zm8oZGV2LCAiTGltaXRpbmcgZGlyZWN0IFBDSS9QQ0kgdHJhbnNmZXJzXG4iKTsKCQlwY2lfcGNp
X3Byb2JsZW1zIHw9IFBDSVBDSV9OQVRPTUE7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
UENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjQ0MSwJcXVpcmtfbmF0
b21hKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RF
VklDRV9JRF9JTlRFTF84MjQ0M0xYXzAsCXF1aXJrX25hdG9tYSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI0NDNMWF8x
LAlxdWlya19uYXRvbWEpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lO
VEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyNDQzQlhfMCwJcXVpcmtfbmF0b21hKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRF
TF84MjQ0M0JYXzEsCXF1aXJrX25hdG9tYSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI0NDNCWF8yLAlxdWlya19uYXRv
bWEpOwoKLyoKICogVGhpcyBjaGlwIGNhbiBjYXVzZSBQQ0kgcGFyaXR5IGVycm9ycyBpZiBjb25m
aWcgcmVnaXN0ZXIgMHhBMCBpcyByZWFkCiAqIHdoaWxlIERNQXMgYXJlIG9jY3VycmluZy4KICov
CnN0YXRpYyB2b2lkIHF1aXJrX2NpdHJpbmUoc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2LT5j
Zmdfc2l6ZSA9IDB4QTA7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
SUJNLAlQQ0lfREVWSUNFX0lEX0lCTV9DSVRSSU5FLAlxdWlya19jaXRyaW5lKTsKCi8qCiAqIFRo
aXMgY2hpcCBjYW4gY2F1c2UgYnVzIGxvY2t1cHMgaWYgY29uZmlnIGFkZHJlc3NlcyBhYm92ZSAw
eDYwMAogKiBhcmUgcmVhZCBvciB3cml0dGVuLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfbmZwNjAw
MChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPmNmZ19zaXplID0gMHg2MDA7Cn0KREVDTEFS
RV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTkVUUk9OT01FLAlQQ0lfREVWSUNFX0lE
X05FVFJPTk9NRV9ORlA0MDAwLAlxdWlya19uZnA2MDAwKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVB
REVSKFBDSV9WRU5ET1JfSURfTkVUUk9OT01FLAlQQ0lfREVWSUNFX0lEX05FVFJPTk9NRV9ORlA2
MDAwLAlxdWlya19uZnA2MDAwKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1Jf
SURfTkVUUk9OT01FLAlQQ0lfREVWSUNFX0lEX05FVFJPTk9NRV9ORlA1MDAwLAlxdWlya19uZnA2
MDAwKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTkVUUk9OT01FLAlQ
Q0lfREVWSUNFX0lEX05FVFJPTk9NRV9ORlA2MDAwX1ZGLAlxdWlya19uZnA2MDAwKTsKCi8qICBP
biBJQk0gQ3JvY29kaWxlIGlwciBTQVMgYWRhcHRlcnMsIGV4cGFuZCBCQVIgdG8gc3lzdGVtIHBh
Z2Ugc2l6ZSAqLwpzdGF0aWMgdm9pZCBxdWlya19leHRlbmRfYmFyX3RvX3BhZ2Uoc3RydWN0IHBj
aV9kZXYgKmRldikKewoJaW50IGk7CgoJZm9yIChpID0gMDsgaSA8PSBQQ0lfU1REX1JFU09VUkNF
X0VORDsgaSsrKSB7CgkJc3RydWN0IHJlc291cmNlICpyID0gJmRldi0+cmVzb3VyY2VbaV07CgoJ
CWlmIChyLT5mbGFncyAmIElPUkVTT1VSQ0VfTUVNICYmIHJlc291cmNlX3NpemUocikgPCBQQUdF
X1NJWkUpIHsKCQkJci0+ZW5kID0gUEFHRV9TSVpFIC0gMTsKCQkJci0+c3RhcnQgPSAwOwoJCQly
LT5mbGFncyB8PSBJT1JFU09VUkNFX1VOU0VUOwoJCQlwY2lfaW5mbyhkZXYsICJleHBhbmRlZCBC
QVIgJWQgdG8gcGFnZSBzaXplOiAlcFJcbiIsCgkJCQkgaSwgcik7CgkJfQoJfQp9CkRFQ0xBUkVf
UENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lCTSwgMHgwMzRhLCBxdWlya19leHRlbmRf
YmFyX3RvX3BhZ2UpOwoKLyoKICogUzMgODY4IGFuZCA5NjggY2hpcHMgcmVwb3J0IHJlZ2lvbiBz
aXplIGVxdWFsIHRvIDMyTSwgYnV0IHRoZXkgZGVjb2RlIDY0TS4KICogSWYgaXQncyBuZWVkZWQs
IHJlLWFsbG9jYXRlIHRoZSByZWdpb24uCiAqLwpzdGF0aWMgdm9pZCBxdWlya19zM182NE0oc3Ry
dWN0IHBjaV9kZXYgKmRldikKewoJc3RydWN0IHJlc291cmNlICpyID0gJmRldi0+cmVzb3VyY2Vb
MF07CgoJaWYgKChyLT5zdGFydCAmIDB4M2ZmZmZmZikgfHwgci0+ZW5kICE9IHItPnN0YXJ0ICsg
MHgzZmZmZmZmKSB7CgkJci0+ZmxhZ3MgfD0gSU9SRVNPVVJDRV9VTlNFVDsKCQlyLT5zdGFydCA9
IDA7CgkJci0+ZW5kID0gMHgzZmZmZmZmOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX1MzLAlQQ0lfREVWSUNFX0lEX1MzXzg2OCwJCXF1aXJrX3MzXzY0TSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1MzLAlQQ0lfREVWSUNFX0lEX1Mz
Xzk2OCwJCXF1aXJrX3MzXzY0TSk7CgpzdGF0aWMgdm9pZCBxdWlya19pbyhzdHJ1Y3QgcGNpX2Rl
diAqZGV2LCBpbnQgcG9zLCB1bnNpZ25lZCBzaXplLAoJCSAgICAgY29uc3QgY2hhciAqbmFtZSkK
ewoJdTMyIHJlZ2lvbjsKCXN0cnVjdCBwY2lfYnVzX3JlZ2lvbiBidXNfcmVnaW9uOwoJc3RydWN0
IHJlc291cmNlICpyZXMgPSBkZXYtPnJlc291cmNlICsgcG9zOwoKCXBjaV9yZWFkX2NvbmZpZ19k
d29yZChkZXYsIFBDSV9CQVNFX0FERFJFU1NfMCArIChwb3MgPDwgMiksICZyZWdpb24pOwoKCWlm
ICghcmVnaW9uKQoJCXJldHVybjsKCglyZXMtPm5hbWUgPSBwY2lfbmFtZShkZXYpOwoJcmVzLT5m
bGFncyA9IHJlZ2lvbiAmIH5QQ0lfQkFTRV9BRERSRVNTX0lPX01BU0s7CglyZXMtPmZsYWdzIHw9
CgkJKElPUkVTT1VSQ0VfSU8gfCBJT1JFU09VUkNFX1BDSV9GSVhFRCB8IElPUkVTT1VSQ0VfU0la
RUFMSUdOKTsKCXJlZ2lvbiAmPSB+KHNpemUgLSAxKTsKCgkvKiBDb252ZXJ0IGZyb20gUENJIGJ1
cyB0byByZXNvdXJjZSBzcGFjZSAqLwoJYnVzX3JlZ2lvbi5zdGFydCA9IHJlZ2lvbjsKCWJ1c19y
ZWdpb24uZW5kID0gcmVnaW9uICsgc2l6ZSAtIDE7CglwY2liaW9zX2J1c190b19yZXNvdXJjZShk
ZXYtPmJ1cywgcmVzLCAmYnVzX3JlZ2lvbik7CgoJcGNpX2luZm8oZGV2LCBGV19CVUcgIiVzIHF1
aXJrOiByZWcgMHgleDogJXBSXG4iLAoJCSBuYW1lLCBQQ0lfQkFTRV9BRERSRVNTXzAgKyAocG9z
IDw8IDIpLCByZXMpOwp9CgovKgogKiBTb21lIENTNTUzNiBCSU9TZXMgKGZvciBleGFtcGxlLCB0
aGUgU29la3JpcyBORVQ1NTAxIGJvYXJkIHcvIGNvbUJJT1MKICogdmVyLiAxLjMzICAyMDA3MDEw
MykgZG9uJ3Qgc2V0IHRoZSBjb3JyZWN0IElTQSBQQ0kgcmVnaW9uIGhlYWRlciBpbmZvLgogKiBC
QVIwIHNob3VsZCBiZSA4IGJ5dGVzOyBpbnN0ZWFkLCBpdCBtYXkgYmUgc2V0IHRvIHNvbWV0aGlu
ZyBsaWtlIDhrCiAqICh3aGljaCBjb25mbGljdHMgdy8gQkFSMSdzIG1lbW9yeSByYW5nZSkuCiAq
CiAqIENTNTUzeCdzIElTQSBQQ0kgQkFScyBtYXkgYWxzbyBiZSByZWFkLW9ubHkgKHJlZjoKICog
aHR0cHM6Ly9idWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD04NTk5MSAtIENvbW1l
bnQgIzQgZm9yd2FyZCkuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19jczU1MzZfdnNhKHN0cnVjdCBw
Y2lfZGV2ICpkZXYpCnsKCXN0YXRpYyBjaGFyICpuYW1lID0gIkNTNTUzNiBJU0EgYnJpZGdlIjsK
CglpZiAocGNpX3Jlc291cmNlX2xlbihkZXYsIDApICE9IDgpIHsKCQlxdWlya19pbyhkZXYsIDAs
ICAgOCwgbmFtZSk7CS8qIFNNQiAqLwoJCXF1aXJrX2lvKGRldiwgMSwgMjU2LCBuYW1lKTsJLyog
R1BJTyAqLwoJCXF1aXJrX2lvKGRldiwgMiwgIDY0LCBuYW1lKTsJLyogTUZHUFQgKi8KCQlwY2lf
aW5mbyhkZXYsICIlcyBidWcgZGV0ZWN0ZWQgKGluY29ycmVjdCBoZWFkZXIpOyB3b3JrYXJvdW5k
IGFwcGxpZWRcbiIsCgkJCSBuYW1lKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJ
X1ZFTkRPUl9JRF9BTUQsIFBDSV9ERVZJQ0VfSURfQU1EX0NTNTUzNl9JU0EsIHF1aXJrX2NzNTUz
Nl92c2EpOwoKc3RhdGljIHZvaWQgcXVpcmtfaW9fcmVnaW9uKHN0cnVjdCBwY2lfZGV2ICpkZXYs
IGludCBwb3J0LAoJCQkJdW5zaWduZWQgc2l6ZSwgaW50IG5yLCBjb25zdCBjaGFyICpuYW1lKQp7
Cgl1MTYgcmVnaW9uOwoJc3RydWN0IHBjaV9idXNfcmVnaW9uIGJ1c19yZWdpb247CglzdHJ1Y3Qg
cmVzb3VyY2UgKnJlcyA9IGRldi0+cmVzb3VyY2UgKyBucjsKCglwY2lfcmVhZF9jb25maWdfd29y
ZChkZXYsIHBvcnQsICZyZWdpb24pOwoJcmVnaW9uICY9IH4oc2l6ZSAtIDEpOwoKCWlmICghcmVn
aW9uKQoJCXJldHVybjsKCglyZXMtPm5hbWUgPSBwY2lfbmFtZShkZXYpOwoJcmVzLT5mbGFncyA9
IElPUkVTT1VSQ0VfSU87CgoJLyogQ29udmVydCBmcm9tIFBDSSBidXMgdG8gcmVzb3VyY2Ugc3Bh
Y2UgKi8KCWJ1c19yZWdpb24uc3RhcnQgPSByZWdpb247CglidXNfcmVnaW9uLmVuZCA9IHJlZ2lv
biArIHNpemUgLSAxOwoJcGNpYmlvc19idXNfdG9fcmVzb3VyY2UoZGV2LT5idXMsIHJlcywgJmJ1
c19yZWdpb24pOwoKCWlmICghcGNpX2NsYWltX3Jlc291cmNlKGRldiwgbnIpKQoJCXBjaV9pbmZv
KGRldiwgInF1aXJrOiAlcFIgY2xhaW1lZCBieSAlc1xuIiwgcmVzLCBuYW1lKTsKfQoKLyoKICog
QVRJIE5vcnRoYnJpZGdlIHNldHVwcyBNQ0UgdGhlIHByb2Nlc3NvciBpZiB5b3UgZXZlbiByZWFk
IHNvbWV3aGVyZQogKiBiZXR3ZWVuIDB4M2IwLT4weDNiYiBvciByZWFkIDB4M2QzCiAqLwpzdGF0
aWMgdm9pZCBxdWlya19hdGlfZXhwbG9kaW5nX21jZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cglw
Y2lfaW5mbyhkZXYsICJBVEkgTm9ydGhicmlkZ2UsIHJlc2VydmluZyBJL08gcG9ydHMgMHgzYjAg
dG8gMHgzYmJcbiIpOwoJLyogTWFlIHJoYWlkIGkgbmkgYmVpZGlvIGFnIGVkcnljaCBhciB5IGxs
ZW9saWFkaWF1IEkvTyBoeW4gKi8KCXJlcXVlc3RfcmVnaW9uKDB4M2IwLCAweDBDLCAiUmFkZW9u
SUdQIik7CglyZXF1ZXN0X3JlZ2lvbigweDNkMywgMHgwMSwgIlJhZGVvbklHUCIpOwp9CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRJLAlQQ0lfREVWSUNFX0lEX0FUSV9S
UzEwMCwgICBxdWlya19hdGlfZXhwbG9kaW5nX21jZSk7CgovKgogKiBJbiB0aGUgQU1EIE5MIHBs
YXRmb3JtLCB0aGlzIGRldmljZSAoWzEwMjI6NzkxMl0pIGhhcyBhIGNsYXNzIGNvZGUgb2YKICog
UENJX0NMQVNTX1NFUklBTF9VU0JfWEhDSSAoMHgwYzAzMzApLCB3aGljaCBtZWFucyB0aGUgeGhj
aSBkcml2ZXIgd2lsbAogKiBjbGFpbSBpdC4KICoKICogQnV0IHRoZSBkd2MzIGRyaXZlciBpcyBh
IG1vcmUgc3BlY2lmaWMgZHJpdmVyIGZvciB0aGlzIGRldmljZSwgYW5kIHdlJ2QKICogcHJlZmVy
IHRvIHVzZSBpdCBpbnN0ZWFkIG9mIHhoY2kuIFRvIHByZXZlbnQgeGhjaSBmcm9tIGNsYWltaW5n
IHRoZQogKiBkZXZpY2UsIGNoYW5nZSB0aGUgY2xhc3MgY29kZSB0byAweDBjMDNmZSwgd2hpY2gg
dGhlIFBDSSByMy4wIHNwZWMKICogZGVmaW5lcyBhcyAiVVNCIGRldmljZSAobm90IGhvc3QgY29u
dHJvbGxlcikiLiBUaGUgZHdjMyBkcml2ZXIgY2FuIHRoZW4KICogY2xhaW0gaXQgYmFzZWQgb24g
aXRzIFZlbmRvciBhbmQgRGV2aWNlIElELgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfYW1kX25sX2Ns
YXNzKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7Cgl1MzIgY2xhc3MgPSBwZGV2LT5jbGFzczsKCgkv
KiBVc2UgIlVTQiBEZXZpY2UgKG5vdCBob3N0IGNvbnRyb2xsZXIpIiBjbGFzcyAqLwoJcGRldi0+
Y2xhc3MgPSBQQ0lfQ0xBU1NfU0VSSUFMX1VTQl9ERVZJQ0U7CglwY2lfaW5mbyhwZGV2LCAiUENJ
IGNsYXNzIG92ZXJyaWRkZW4gKCUjMDh4IC0+ICUjMDh4KSBzbyBkd2MzIGRyaXZlciBjYW4gY2xh
aW0gdGhpcyBpbnN0ZWFkIG9mIHhoY2lcbiIsCgkJIGNsYXNzLCBwZGV2LT5jbGFzcyk7Cn0KREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfQU1ELCBQQ0lfREVWSUNFX0lEX0FN
RF9OTF9VU0IsCgkJcXVpcmtfYW1kX25sX2NsYXNzKTsKCi8qCiAqIExldCdzIG1ha2UgdGhlIHNv
dXRoYnJpZGdlIGluZm9ybWF0aW9uIGV4cGxpY2l0IGluc3RlYWQgb2YgaGF2aW5nIHRvCiAqIHdv
cnJ5IGFib3V0IHBlb3BsZSBwcm9iaW5nIHRoZSBBQ1BJIGFyZWFzLCBmb3IgZXhhbXBsZS4uIChZ
ZXMsIGl0CiAqIGhhcHBlbnMsIGFuZCBpZiB5b3UgcmVhZCB0aGUgd3JvbmcgQUNQSSByZWdpc3Rl
ciBpdCB3aWxsIHB1dCB0aGUgbWFjaGluZQogKiB0byBzbGVlcCB3aXRoIG5vIHdheSBvZiB3YWtp
bmcgaXQgdXAgYWdhaW4uIEJ1bW1lcikuCiAqCiAqIEFMSSBNNzEwMTogVHdvIElPIHJlZ2lvbnMg
cG9pbnRlZCB0byBieSB3b3JkcyBhdAogKgkweEUwICg2NCBieXRlcyBvZiBBQ1BJIHJlZ2lzdGVy
cykKICoJMHhFMiAoMzIgYnl0ZXMgb2YgU01CIHJlZ2lzdGVycykKICovCnN0YXRpYyB2b2lkIHF1
aXJrX2FsaTcxMDFfYWNwaShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglxdWlya19pb19yZWdpb24o
ZGV2LCAweEUwLCA2NCwgUENJX0JSSURHRV9SRVNPVVJDRVMsICJhbGk3MTAxIEFDUEkiKTsKCXF1
aXJrX2lvX3JlZ2lvbihkZXYsIDB4RTIsIDMyLCBQQ0lfQlJJREdFX1JFU09VUkNFUysxLCAiYWxp
NzEwMSBTTUIiKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BTCwJ
UENJX0RFVklDRV9JRF9BTF9NNzEwMSwJCXF1aXJrX2FsaTcxMDFfYWNwaSk7CgpzdGF0aWMgdm9p
ZCBwaWl4NF9pb19xdWlyayhzdHJ1Y3QgcGNpX2RldiAqZGV2LCBjb25zdCBjaGFyICpuYW1lLCB1
bnNpZ25lZCBpbnQgcG9ydCwgdW5zaWduZWQgaW50IGVuYWJsZSkKewoJdTMyIGRldnJlczsKCXUz
MiBtYXNrLCBzaXplLCBiYXNlOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIHBvcnQsICZk
ZXZyZXMpOwoJaWYgKChkZXZyZXMgJiBlbmFibGUpICE9IGVuYWJsZSkKCQlyZXR1cm47CgltYXNr
ID0gKGRldnJlcyA+PiAxNikgJiAxNTsKCWJhc2UgPSBkZXZyZXMgJiAweGZmZmY7CglzaXplID0g
MTY7Cglmb3IgKDs7KSB7CgkJdW5zaWduZWQgYml0ID0gc2l6ZSA+PiAxOwoJCWlmICgoYml0ICYg
bWFzaykgPT0gYml0KQoJCQlicmVhazsKCQlzaXplID0gYml0OwoJfQoJLyoKCSAqIEZvciBub3cg
d2Ugb25seSBwcmludCBpdCBvdXQuIEV2ZW50dWFsbHkgd2UnbGwgd2FudCB0bwoJICogcmVzZXJ2
ZSBpdCAoYXQgbGVhc3QgaWYgaXQncyBpbiB0aGUgMHgxMDAwKyByYW5nZSksIGJ1dAoJICogbGV0
J3MgZ2V0IGVub3VnaCBjb25maXJtYXRpb24gcmVwb3J0cyBmaXJzdC4KCSAqLwoJYmFzZSAmPSAt
c2l6ZTsKCXBjaV9pbmZvKGRldiwgIiVzIFBJTyBhdCAlMDR4LSUwNHhcbiIsIG5hbWUsIGJhc2Us
IGJhc2UgKyBzaXplIC0gMSk7Cn0KCnN0YXRpYyB2b2lkIHBpaXg0X21lbV9xdWlyayhzdHJ1Y3Qg
cGNpX2RldiAqZGV2LCBjb25zdCBjaGFyICpuYW1lLCB1bnNpZ25lZCBpbnQgcG9ydCwgdW5zaWdu
ZWQgaW50IGVuYWJsZSkKewoJdTMyIGRldnJlczsKCXUzMiBtYXNrLCBzaXplLCBiYXNlOwoKCXBj
aV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIHBvcnQsICZkZXZyZXMpOwoJaWYgKChkZXZyZXMgJiBl
bmFibGUpICE9IGVuYWJsZSkKCQlyZXR1cm47CgliYXNlID0gZGV2cmVzICYgMHhmZmZmMDAwMDsK
CW1hc2sgPSAoZGV2cmVzICYgMHgzZikgPDwgMTY7CglzaXplID0gMTI4IDw8IDE2OwoJZm9yICg7
OykgewoJCXVuc2lnbmVkIGJpdCA9IHNpemUgPj4gMTsKCQlpZiAoKGJpdCAmIG1hc2spID09IGJp
dCkKCQkJYnJlYWs7CgkJc2l6ZSA9IGJpdDsKCX0KCgkvKgoJICogRm9yIG5vdyB3ZSBvbmx5IHBy
aW50IGl0IG91dC4gRXZlbnR1YWxseSB3ZSdsbCB3YW50IHRvCgkgKiByZXNlcnZlIGl0LCBidXQg
bGV0J3MgZ2V0IGVub3VnaCBjb25maXJtYXRpb24gcmVwb3J0cyBmaXJzdC4KCSAqLwoJYmFzZSAm
PSAtc2l6ZTsKCXBjaV9pbmZvKGRldiwgIiVzIE1NSU8gYXQgJTA0eC0lMDR4XG4iLCBuYW1lLCBi
YXNlLCBiYXNlICsgc2l6ZSAtIDEpOwp9CgovKgogKiBQSUlYNCBBQ1BJOiBUd28gSU8gcmVnaW9u
cyBwb2ludGVkIHRvIGJ5IGxvbmd3b3JkcyBhdAogKgkweDQwICg2NCBieXRlcyBvZiBBQ1BJIHJl
Z2lzdGVycykKICoJMHg5MCAoMTYgYnl0ZXMgb2YgU01CIHJlZ2lzdGVycykKICogYW5kIGEgZmV3
IHN0cmFuZ2UgcHJvZ3JhbW1hYmxlIFBJSVg0IGRldmljZSByZXNvdXJjZXMuCiAqLwpzdGF0aWMg
dm9pZCBxdWlya19waWl4NF9hY3BpKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUzMiByZXNfYTsK
CglxdWlya19pb19yZWdpb24oZGV2LCAweDQwLCA2NCwgUENJX0JSSURHRV9SRVNPVVJDRVMsICJQ
SUlYNCBBQ1BJIik7CglxdWlya19pb19yZWdpb24oZGV2LCAweDkwLCAxNiwgUENJX0JSSURHRV9S
RVNPVVJDRVMrMSwgIlBJSVg0IFNNQiIpOwoKCS8qIERldmljZSByZXNvdXJjZSBBIGhhcyBlbmFi
bGVzIGZvciBzb21lIG9mIHRoZSBvdGhlciBvbmVzICovCglwY2lfcmVhZF9jb25maWdfZHdvcmQo
ZGV2LCAweDVjLCAmcmVzX2EpOwoKCXBpaXg0X2lvX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBC
IiwgMHg2MCwgMyA8PCAyMSk7CglwaWl4NF9pb19xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMgQyIs
IDB4NjQsIDMgPDwgMjEpOwoKCS8qIERldmljZSByZXNvdXJjZSBEIGlzIGp1c3QgYml0ZmllbGRz
IGZvciBzdGF0aWMgcmVzb3VyY2VzICovCgoJLyogRGV2aWNlIDEyIGVuYWJsZWQ/ICovCglpZiAo
cmVzX2EgJiAoMSA8PCAyOSkpIHsKCQlwaWl4NF9pb19xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMg
RSIsIDB4NjgsIDEgPDwgMjApOwoJCXBpaXg0X21lbV9xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMg
RiIsIDB4NmMsIDEgPDwgNyk7Cgl9CgkvKiBEZXZpY2UgMTMgZW5hYmxlZD8gKi8KCWlmIChyZXNf
YSAmICgxIDw8IDMwKSkgewoJCXBpaXg0X2lvX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBHIiwg
MHg3MCwgMSA8PCAyMCk7CgkJcGlpeDRfbWVtX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBIIiwg
MHg3NCwgMSA8PCA3KTsKCX0KCXBpaXg0X2lvX3F1aXJrKGRldiwgIlBJSVg0IGRldnJlcyBJIiwg
MHg3OCwgMSA8PCAyMCk7CglwaWl4NF9pb19xdWlyayhkZXYsICJQSUlYNCBkZXZyZXMgSiIsIDB4
N2MsIDEgPDwgMjApOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lO
VEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyMzcxQUJfMywJcXVpcmtfcGlpeDRfYWNwaSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lE
X0lOVEVMXzgyNDQzTVhfMywJcXVpcmtfcGlpeDRfYWNwaSk7CgojZGVmaW5lIElDSF9QTUJBU0UJ
MHg0MAojZGVmaW5lIElDSF9BQ1BJX0NOVEwJMHg0NAojZGVmaW5lICBJQ0g0X0FDUElfRU4JMHgx
MAojZGVmaW5lICBJQ0g2X0FDUElfRU4JMHg4MAojZGVmaW5lIElDSDRfR1BJT0JBU0UJMHg1OAoj
ZGVmaW5lIElDSDRfR1BJT19DTlRMCTB4NWMKI2RlZmluZSAgSUNINF9HUElPX0VOCTB4MTAKI2Rl
ZmluZSBJQ0g2X0dQSU9CQVNFCTB4NDgKI2RlZmluZSBJQ0g2X0dQSU9fQ05UTAkweDRjCiNkZWZp
bmUgIElDSDZfR1BJT19FTgkweDEwCgovKgogKiBJQ0g0LCBJQ0g0LU0sIElDSDUsIElDSDUtTSBB
Q1BJOiBUaHJlZSBJTyByZWdpb25zIHBvaW50ZWQgdG8gYnkgbG9uZ3dvcmRzIGF0CiAqCTB4NDAg
KDEyOCBieXRlcyBvZiBBQ1BJLCBHUElPICYgVENPIHJlZ2lzdGVycykKICoJMHg1OCAoNjQgYnl0
ZXMgb2YgR1BJTyBJL08gc3BhY2UpCiAqLwpzdGF0aWMgdm9pZCBxdWlya19pY2g0X2xwY19hY3Bp
KHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXU4IGVuYWJsZTsKCgkvKgoJICogVGhlIGNoZWNrIGZv
ciBQQ0lCSU9TX01JTl9JTyBpcyB0byBlbnN1cmUgd2Ugd29uJ3QgY3JlYXRlIGEgY29uZmxpY3QK
CSAqIHdpdGggbG93IGxlZ2FjeSAoYW5kIGZpeGVkKSBwb3J0cy4gV2UgZG9uJ3Qga25vdyB0aGUg
ZGVjb2RpbmcKCSAqIHByaW9yaXR5IGFuZCBjYW4ndCB0ZWxsIHdoZXRoZXIgdGhlIGxlZ2FjeSBk
ZXZpY2Ugb3IgdGhlIG9uZSBjcmVhdGVkCgkgKiBoZXJlIGlzIHJlYWxseSBhdCB0aGF0IGFkZHJl
c3MuICBUaGlzIGhhcHBlbnMgb24gYm9hcmRzIHdpdGggYnJva2VuCgkgKiBCSU9TZXMuCgkgKi8K
CXBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgSUNIX0FDUElfQ05UTCwgJmVuYWJsZSk7CglpZiAo
ZW5hYmxlICYgSUNINF9BQ1BJX0VOKQoJCXF1aXJrX2lvX3JlZ2lvbihkZXYsIElDSF9QTUJBU0Us
IDEyOCwgUENJX0JSSURHRV9SRVNPVVJDRVMsCgkJCQkgIklDSDQgQUNQSS9HUElPL1RDTyIpOwoK
CXBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgSUNINF9HUElPX0NOVEwsICZlbmFibGUpOwoJaWYg
KGVuYWJsZSAmIElDSDRfR1BJT19FTikKCQlxdWlya19pb19yZWdpb24oZGV2LCBJQ0g0X0dQSU9C
QVNFLCA2NCwgUENJX0JSSURHRV9SRVNPVVJDRVMrMSwKCQkJCSJJQ0g0IEdQSU8iKTsKfQpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwgICAgUENJX0RFVklDRV9J
RF9JTlRFTF84MjgwMUFBXzAsCQlxdWlya19pY2g0X2xwY19hY3BpKTsKREVDTEFSRV9QQ0lfRklY
VVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsICAgIFBDSV9ERVZJQ0VfSURfSU5URUxfODI4
MDFBQl8wLAkJcXVpcmtfaWNoNF9scGNfYWNwaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAgICBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODAxQkFfMCwJCXF1
aXJrX2ljaDRfbHBjX2FjcGkpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9J
RF9JTlRFTCwgICAgUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUJBXzEwLAlxdWlya19pY2g0X2xw
Y19hY3BpKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsICAg
IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFDQV8wLAkJcXVpcmtfaWNoNF9scGNfYWNwaSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAgICBQQ0lfREVWSUNF
X0lEX0lOVEVMXzgyODAxQ0FfMTIsCXF1aXJrX2ljaDRfbHBjX2FjcGkpOwpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwgICAgUENJX0RFVklDRV9JRF9JTlRFTF84
MjgwMURCXzAsCQlxdWlya19pY2g0X2xwY19hY3BpKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVS
KFBDSV9WRU5ET1JfSURfSU5URUwsICAgIFBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFEQl8xMiwJ
cXVpcmtfaWNoNF9scGNfYWNwaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX0lOVEVMLCAgICBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODAxRUJfMCwJCXF1aXJrX2ljaDRf
bHBjX2FjcGkpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwg
ICAgUENJX0RFVklDRV9JRF9JTlRFTF9FU0JfMSwJCXF1aXJrX2ljaDRfbHBjX2FjcGkpOwoKc3Rh
dGljIHZvaWQgaWNoNl9scGNfYWNwaV9ncGlvKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXU4IGVu
YWJsZTsKCglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIElDSF9BQ1BJX0NOVEwsICZlbmFibGUp
OwoJaWYgKGVuYWJsZSAmIElDSDZfQUNQSV9FTikKCQlxdWlya19pb19yZWdpb24oZGV2LCBJQ0hf
UE1CQVNFLCAxMjgsIFBDSV9CUklER0VfUkVTT1VSQ0VTLAoJCQkJICJJQ0g2IEFDUEkvR1BJTy9U
Q08iKTsKCglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIElDSDZfR1BJT19DTlRMLCAmZW5hYmxl
KTsKCWlmIChlbmFibGUgJiBJQ0g2X0dQSU9fRU4pCgkJcXVpcmtfaW9fcmVnaW9uKGRldiwgSUNI
Nl9HUElPQkFTRSwgNjQsIFBDSV9CUklER0VfUkVTT1VSQ0VTKzEsCgkJCQkiSUNINiBHUElPIik7
Cn0KCnN0YXRpYyB2b2lkIGljaDZfbHBjX2dlbmVyaWNfZGVjb2RlKHN0cnVjdCBwY2lfZGV2ICpk
ZXYsIHVuc2lnbmVkIHJlZywKCQkJCSAgICBjb25zdCBjaGFyICpuYW1lLCBpbnQgZHluc2l6ZSkK
ewoJdTMyIHZhbDsKCXUzMiBzaXplLCBiYXNlOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYs
IHJlZywgJnZhbCk7CgoJLyogRW5hYmxlZD8gKi8KCWlmICghKHZhbCAmIDEpKQoJCXJldHVybjsK
CWJhc2UgPSB2YWwgJiAweGZmZmM7CglpZiAoZHluc2l6ZSkgewoJCS8qCgkJICogVGhpcyBpcyBu
b3QgY29ycmVjdC4gSXQgaXMgMTYsIDMyIG9yIDY0IGJ5dGVzIGRlcGVuZGluZyBvbgoJCSAqIHJl
Z2lzdGVyIEQzMTpGMDpBRGggYml0cyA1OjQuCgkJICoKCQkgKiBCdXQgdGhpcyBnZXRzIHVzIGF0
IGxlYXN0IF9wYXJ0XyBvZiBpdC4KCQkgKi8KCQlzaXplID0gMTY7Cgl9IGVsc2UgewoJCXNpemUg
PSAxMjg7Cgl9CgliYXNlICY9IH4oc2l6ZS0xKTsKCgkvKgoJICogSnVzdCBwcmludCBpdCBvdXQg
Zm9yIG5vdy4gV2Ugc2hvdWxkIHJlc2VydmUgaXQgYWZ0ZXIgbW9yZQoJICogZGVidWdnaW5nLgoJ
ICovCglwY2lfaW5mbyhkZXYsICIlcyBQSU8gYXQgJTA0eC0lMDR4XG4iLCBuYW1lLCBiYXNlLCBi
YXNlK3NpemUtMSk7Cn0KCnN0YXRpYyB2b2lkIHF1aXJrX2ljaDZfbHBjKHN0cnVjdCBwY2lfZGV2
ICpkZXYpCnsKCS8qIFNoYXJlZCBBQ1BJL0dQSU8gZGVjb2RlIHdpdGggYWxsIElDSDYrICovCglp
Y2g2X2xwY19hY3BpX2dwaW8oZGV2KTsKCgkvKiBJQ0g2LXNwZWNpZmljIGdlbmVyaWMgSU8gZGVj
b2RlICovCglpY2g2X2xwY19nZW5lcmljX2RlY29kZShkZXYsIDB4ODQsICJMUEMgR2VuZXJpYyBJ
TyBkZWNvZGUgMSIsIDApOwoJaWNoNl9scGNfZ2VuZXJpY19kZWNvZGUoZGV2LCAweDg4LCAiTFBD
IEdlbmVyaWMgSU8gZGVjb2RlIDIiLCAxKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJ
X1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g2XzAsIHF1aXJrX2ljaDZf
bHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9E
RVZJQ0VfSURfSU5URUxfSUNINl8xLCBxdWlya19pY2g2X2xwYyk7CgpzdGF0aWMgdm9pZCBpY2g3
X2xwY19nZW5lcmljX2RlY29kZShzdHJ1Y3QgcGNpX2RldiAqZGV2LCB1bnNpZ25lZCByZWcsCgkJ
CQkgICAgY29uc3QgY2hhciAqbmFtZSkKewoJdTMyIHZhbDsKCXUzMiBtYXNrLCBiYXNlOwoKCXBj
aV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIHJlZywgJnZhbCk7CgoJLyogRW5hYmxlZD8gKi8KCWlm
ICghKHZhbCAmIDEpKQoJCXJldHVybjsKCgkvKiBJTyBiYXNlIGluIGJpdHMgMTU6MiwgbWFzayBp
biBiaXRzIDIzOjE4LCBib3RoIGFyZSBkd29yZC1iYXNlZCAqLwoJYmFzZSA9IHZhbCAmIDB4ZmZm
YzsKCW1hc2sgPSAodmFsID4+IDE2KSAmIDB4ZmM7CgltYXNrIHw9IDM7CgoJLyoKCSAqIEp1c3Qg
cHJpbnQgaXQgb3V0IGZvciBub3cuIFdlIHNob3VsZCByZXNlcnZlIGl0IGFmdGVyIG1vcmUKCSAq
IGRlYnVnZ2luZy4KCSAqLwoJcGNpX2luZm8oZGV2LCAiJXMgUElPIGF0ICUwNHggKG1hc2sgJTA0
eClcbiIsIG5hbWUsIGJhc2UsIG1hc2spOwp9CgovKiBJQ0g3LTEwIGhhcyB0aGUgc2FtZSBjb21t
b24gTFBDIGdlbmVyaWMgSU8gZGVjb2RlIHJlZ2lzdGVycyAqLwpzdGF0aWMgdm9pZCBxdWlya19p
Y2g3X2xwYyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CgkvKiBXZSBzaGFyZSB0aGUgY29tbW9uIEFD
UEkvR1BJTyBkZWNvZGUgd2l0aCBJQ0g2ICovCglpY2g2X2xwY19hY3BpX2dwaW8oZGV2KTsKCgkv
KiBBbmQgaGF2ZSA0IElDSDcrIGdlbmVyaWMgZGVjb2RlcyAqLwoJaWNoN19scGNfZ2VuZXJpY19k
ZWNvZGUoZGV2LCAweDg0LCAiSUNINyBMUEMgR2VuZXJpYyBJTyBkZWNvZGUgMSIpOwoJaWNoN19s
cGNfZ2VuZXJpY19kZWNvZGUoZGV2LCAweDg4LCAiSUNINyBMUEMgR2VuZXJpYyBJTyBkZWNvZGUg
MiIpOwoJaWNoN19scGNfZ2VuZXJpY19kZWNvZGUoZGV2LCAweDhjLCAiSUNINyBMUEMgR2VuZXJp
YyBJTyBkZWNvZGUgMyIpOwoJaWNoN19scGNfZ2VuZXJpY19kZWNvZGUoZGV2LCAweDkwLCAiSUNI
NyBMUEMgR2VuZXJpYyBJTyBkZWNvZGUgNCIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDdfMCwgcXVpcmtfaWNo
N19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJ
X0RFVklDRV9JRF9JTlRFTF9JQ0g3XzEsIHF1aXJrX2ljaDdfbHBjKTsKREVDTEFSRV9QQ0lfRklY
VVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfSUNIN18z
MSwgcXVpcmtfaWNoN19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9J
RF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g4XzAsIHF1aXJrX2ljaDdfbHBjKTsKREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURf
SU5URUxfSUNIOF8yLCBxdWlya19pY2g3X2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDhfMywgcXVpcmtfaWNo
N19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJ
X0RFVklDRV9JRF9JTlRFTF9JQ0g4XzEsIHF1aXJrX2ljaDdfbHBjKTsKREVDTEFSRV9QQ0lfRklY
VVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfSUNIOF80
LCBxdWlya19pY2g3X2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDlfMiwgcXVpcmtfaWNoN19scGMpOwpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9J
TlRFTF9JQ0g5XzQsIHF1aXJrX2ljaDdfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBD
SV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfSUNIOV83LCBxdWlya19pY2g3
X2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lf
REVWSUNFX0lEX0lOVEVMX0lDSDlfOCwgcXVpcmtfaWNoN19scGMpOwpERUNMQVJFX1BDSV9GSVhV
UF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwgICBQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDEw
XzEsIHF1aXJrX2ljaDdfbHBjKTsKCi8qCiAqIFZJQSBBQ1BJOiBPbmUgSU8gcmVnaW9uIHBvaW50
ZWQgdG8gYnkgbG9uZ3dvcmQgYXQKICoJMHg0OCBvciAweDIwICgyNTYgYnl0ZXMgb2YgQUNQSSBy
ZWdpc3RlcnMpCiAqLwpzdGF0aWMgdm9pZCBxdWlya192dDgyYzU4Nl9hY3BpKHN0cnVjdCBwY2lf
ZGV2ICpkZXYpCnsKCWlmIChkZXYtPnJldmlzaW9uICYgMHgxMCkKCQlxdWlya19pb19yZWdpb24o
ZGV2LCAweDQ4LCAyNTYsIFBDSV9CUklER0VfUkVTT1VSQ0VTLAoJCQkJInZ0ODJjNTg2IEFDUEki
KTsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJ
Q0VfSURfVklBXzgyQzU4Nl8zLAlxdWlya192dDgyYzU4Nl9hY3BpKTsKCi8qCiAqIFZJQSBWVDgy
QzY4NiBBQ1BJOiBUaHJlZSBJTyByZWdpb24gcG9pbnRlZCB0byBieSAobG9uZyl3b3JkcyBhdAog
KgkweDQ4ICgyNTYgYnl0ZXMgb2YgQUNQSSByZWdpc3RlcnMpCiAqCTB4NzAgKDEyOCBieXRlcyBv
ZiBoYXJkd2FyZSBtb25pdG9yaW5nIHJlZ2lzdGVyKQogKgkweDkwICgxNiBieXRlcyBvZiBTTUIg
cmVnaXN0ZXJzKQogKi8Kc3RhdGljIHZvaWQgcXVpcmtfdnQ4MmM2ODZfYWNwaShzdHJ1Y3QgcGNp
X2RldiAqZGV2KQp7CglxdWlya192dDgyYzU4Nl9hY3BpKGRldik7CgoJcXVpcmtfaW9fcmVnaW9u
KGRldiwgMHg3MCwgMTI4LCBQQ0lfQlJJREdFX1JFU09VUkNFUysxLAoJCQkJICJ2dDgyYzY4NiBI
Vy1tb24iKTsKCglxdWlya19pb19yZWdpb24oZGV2LCAweDkwLCAxNiwgUENJX0JSSURHRV9SRVNP
VVJDRVMrMiwgInZ0ODJjNjg2IFNNQiIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lf
VkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNjg2XzQsCXF1aXJrX3Z0ODJjNjg2
X2FjcGkpOwoKLyoKICogVklBIFZUODIzNSBJU0EgQnJpZGdlOiBUd28gSU8gcmVnaW9ucyBwb2lu
dGVkIHRvIGJ5IHdvcmRzIGF0CiAqCTB4ODggKDEyOCBieXRlcyBvZiBwb3dlciBtYW5hZ2VtZW50
IHJlZ2lzdGVycykKICoJMHhkMCAoMTYgYnl0ZXMgb2YgU01CIHJlZ2lzdGVycykKICovCnN0YXRp
YyB2b2lkIHF1aXJrX3Z0ODIzNV9hY3BpKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXF1aXJrX2lv
X3JlZ2lvbihkZXYsIDB4ODgsIDEyOCwgUENJX0JSSURHRV9SRVNPVVJDRVMsICJ2dDgyMzUgUE0i
KTsKCXF1aXJrX2lvX3JlZ2lvbihkZXYsIDB4ZDAsIDE2LCBQQ0lfQlJJREdFX1JFU09VUkNFUysx
LCAidnQ4MjM1IFNNQiIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODIzNSwJcXVpcmtfdnQ4MjM1X2FjcGkpOwoKLyoKICog
VEkgWElPMjAwMGEgUENJZS1QQ0kgQnJpZGdlIGVycm9uZW91c2x5IHJlcG9ydHMgaXQgc3VwcG9y
dHMgZmFzdAogKiBiYWNrLXRvLWJhY2s6IERpc2FibGUgZmFzdCBiYWNrLXRvLWJhY2sgb24gdGhl
IHNlY29uZGFyeSBidXMgc2VnbWVudAogKi8Kc3RhdGljIHZvaWQgcXVpcmtfeGlvMjAwMGEoc3Ry
dWN0IHBjaV9kZXYgKmRldikKewoJc3RydWN0IHBjaV9kZXYgKnBkZXY7Cgl1MTYgY29tbWFuZDsK
CglwY2lfd2FybihkZXYsICJUSSBYSU8yMDAwYSBxdWlyayBkZXRlY3RlZDsgc2Vjb25kYXJ5IGJ1
cyBmYXN0IGJhY2stdG8tYmFjayB0cmFuc2ZlcnMgZGlzYWJsZWRcbiIpOwoJbGlzdF9mb3JfZWFj
aF9lbnRyeShwZGV2LCAmZGV2LT5zdWJvcmRpbmF0ZS0+ZGV2aWNlcywgYnVzX2xpc3QpIHsKCQlw
Y2lfcmVhZF9jb25maWdfd29yZChwZGV2LCBQQ0lfQ09NTUFORCwgJmNvbW1hbmQpOwoJCWlmIChj
b21tYW5kICYgUENJX0NPTU1BTkRfRkFTVF9CQUNLKQoJCQlwY2lfd3JpdGVfY29uZmlnX3dvcmQo
cGRldiwgUENJX0NPTU1BTkQsIGNvbW1hbmQgJiB+UENJX0NPTU1BTkRfRkFTVF9CQUNLKTsKCX0K
fQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1RJLCBQQ0lfREVWSUNFX0lE
X1RJX1hJTzIwMDBBLAoJCQlxdWlya194aW8yMDAwYSk7CgojaWZkZWYgQ09ORklHX1g4Nl9JT19B
UElDCgojaW5jbHVkZSA8YXNtL2lvX2FwaWMuaD4KCi8qCiAqIFZJQSA2ODZBL0I6IElmIGFuIElP
LUFQSUMgaXMgYWN0aXZlLCB3ZSBuZWVkIHRvIHJvdXRlIGFsbCBvbi1jaGlwCiAqIGRldmljZXMg
dG8gdGhlIGV4dGVybmFsIEFQSUMuCiAqCiAqIFRPRE86IFdoZW4gd2UgaGF2ZSBkZXZpY2Utc3Bl
Y2lmaWMgaW50ZXJydXB0IHJvdXRlcnMsIHRoaXMgY29kZSB3aWxsIGdvCiAqIGF3YXkgZnJvbSBx
dWlya3MuCiAqLwpzdGF0aWMgdm9pZCBxdWlya192aWFfaW9hcGljKHN0cnVjdCBwY2lfZGV2ICpk
ZXYpCnsKCXU4IHRtcDsKCglpZiAobnJfaW9hcGljcyA8IDEpCgkJdG1wID0gMDsgICAgLyogbm90
aGluZyByb3V0ZWQgdG8gZXh0ZXJuYWwgQVBJQyAqLwoJZWxzZQoJCXRtcCA9IDB4MWY7IC8qIGFs
bCBrbm93biBiaXRzICg0LTApIHJvdXRlZCB0byBleHRlcm5hbCBBUElDICovCgoJcGNpX2luZm8o
ZGV2LCAiJXNibGluZyBWSUEgZXh0ZXJuYWwgQVBJQyByb3V0aW5nXG4iLAoJICAgICAgIHRtcCA9
PSAwID8gIkRpc2EiIDogIkVuYSIpOwoKCS8qIE9mZnNldCAweDU4OiBFeHRlcm5hbCBBUElDIElS
USBvdXRwdXQgY29udHJvbCAqLwoJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHg1OCwgdG1w
KTsKfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklD
RV9JRF9WSUFfODJDNjg2LAlxdWlya192aWFfaW9hcGljKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVT
VU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MkM2ODYsCXF1
aXJrX3ZpYV9pb2FwaWMpOwoKLyoKICogVklBIDgyMzc6IFNvbWUgQklPU2VzIGRvbid0IHNldCB0
aGUgJ0J5cGFzcyBBUElDIERlLUFzc2VydCBNZXNzYWdlJyBCaXQuCiAqIFRoaXMgbGVhZHMgdG8g
ZG91YmxlZCBsZXZlbCBpbnRlcnJ1cHQgcmF0ZXMuCiAqIFNldCB0aGlzIGJpdCB0byBnZXQgcmlk
IG9mIGN5Y2xlIHdhc3RhZ2UuCiAqIE90aGVyd2lzZSB1bmNyaXRpY2FsLgogKi8Kc3RhdGljIHZv
aWQgcXVpcmtfdmlhX3Z0ODIzN19ieXBhc3NfYXBpY19kZWFzc2VydChzdHJ1Y3QgcGNpX2RldiAq
ZGV2KQp7Cgl1OCBtaXNjX2NvbnRyb2wyOwojZGVmaW5lIEJZUEFTU19BUElDX0RFQVNTRVJUIDgK
CglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4NUIsICZtaXNjX2NvbnRyb2wyKTsKCWlmICgh
KG1pc2NfY29udHJvbDIgJiBCWVBBU1NfQVBJQ19ERUFTU0VSVCkpIHsKCQlwY2lfaW5mbyhkZXYs
ICJCeXBhc3NpbmcgVklBIDgyMzcgQVBJQyBEZS1Bc3NlcnQgTWVzc2FnZVxuIik7CgkJcGNpX3dy
aXRlX2NvbmZpZ19ieXRlKGRldiwgMHg1QiwgbWlzY19jb250cm9sMnxCWVBBU1NfQVBJQ19ERUFT
U0VSVCk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9WSUEsCVBD
SV9ERVZJQ0VfSURfVklBXzgyMzcsCQlxdWlya192aWFfdnQ4MjM3X2J5cGFzc19hcGljX2RlYXNz
ZXJ0KTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfVklBLAlQ
Q0lfREVWSUNFX0lEX1ZJQV84MjM3LAkJcXVpcmtfdmlhX3Z0ODIzN19ieXBhc3NfYXBpY19kZWFz
c2VydCk7CgovKgogKiBUaGUgQU1EIElPLUFQSUMgY2FuIGhhbmcgdGhlIGJveCB3aGVuIGFuIEFQ
SUMgSVJRIGlzIG1hc2tlZC4KICogV2UgY2hlY2sgYWxsIHJldnMgPj0gQjAgKHlldCBub3QgaW4g
dGhlIHByZSBwcm9kdWN0aW9uISkgYXMgdGhlIGJ1ZwogKiBpcyBjdXJyZW50bHkgbWFya2VkIE5v
Rml4CiAqCiAqIFdlIGhhdmUgbXVsdGlwbGUgcmVwb3J0cyBvZiBoYW5ncyB3aXRoIHRoaXMgY2hp
cHNldCB0aGF0IHdlbnQgYXdheSB3aXRoCiAqIG5vYXBpYyBzcGVjaWZpZWQuIEZvciB0aGUgbW9t
ZW50IHdlIGFzc3VtZSBpdCdzIHRoZSBlcnJhdHVtLiBXZSBtYXkgYmUgd3JvbmcKICogb2YgY291
cnNlLiBIb3dldmVyIHRoZSBhZHZpY2UgaXMgZGVtb25zdHJhYmx5IGdvb2QgZXZlbiBpZiBzby4K
ICovCnN0YXRpYyB2b2lkIHF1aXJrX2FtZF9pb2FwaWMoc3RydWN0IHBjaV9kZXYgKmRldikKewoJ
aWYgKGRldi0+cmV2aXNpb24gPj0gMHgwMikgewoJCXBjaV93YXJuKGRldiwgIkkvTyBBUElDOiBB
TUQgRXJyYXR1bSAjMjIgbWF5IGJlIHByZXNlbnQuIEluIHRoZSBldmVudCBvZiBpbnN0YWJpbGl0
eSB0cnlcbiIpOwoJCXBjaV93YXJuKGRldiwgIiAgICAgICAgOiBib290aW5nIHdpdGggdGhlIFwi
bm9hcGljXCIgb3B0aW9uXG4iKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0FNRCwJUENJX0RFVklDRV9JRF9BTURfVklQRVJfNzQxMCwJcXVpcmtfYW1kX2lvYXBp
Yyk7CiNlbmRpZiAvKiBDT05GSUdfWDg2X0lPX0FQSUMgKi8KCiNpZiBkZWZpbmVkKENPTkZJR19B
Uk02NCkgJiYgZGVmaW5lZChDT05GSUdfUENJX0FUUykKCnN0YXRpYyB2b2lkIHF1aXJrX2Nhdml1
bV9zcmlvdl9ybm1fbGluayhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CgkvKiBGaXggZm9yIGltcHJv
cGVyIFNSLUlPViBjb25maWd1cmF0aW9uIG9uIENhdml1bSBjbjg4eHggUk5NIGRldmljZSAqLwoJ
aWYgKGRldi0+c3Vic3lzdGVtX2RldmljZSA9PSAweGExMTgpCgkJZGV2LT5zcmlvdi0+bGluayA9
IGRldi0+ZGV2Zm47Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9DQVZJ
VU0sIDB4YTAxOCwgcXVpcmtfY2F2aXVtX3NyaW92X3JubV9saW5rKTsKI2VuZGlmCgovKgogKiBT
b21lIHNldHRpbmdzIG9mIE1NUkJDIGNhbiBsZWFkIHRvIGRhdGEgY29ycnVwdGlvbiBzbyBibG9j
ayBjaGFuZ2VzLgogKiBTZWUgQU1EIDgxMzEgSHlwZXJUcmFuc3BvcnQgUENJLVggVHVubmVsIFJl
dmlzaW9uIEd1aWRlCiAqLwpzdGF0aWMgdm9pZCBxdWlya19hbWRfODEzMV9tbXJiYyhzdHJ1Y3Qg
cGNpX2RldiAqZGV2KQp7CglpZiAoZGV2LT5zdWJvcmRpbmF0ZSAmJiBkZXYtPnJldmlzaW9uIDw9
IDB4MTIpIHsKCQlwY2lfaW5mbyhkZXYsICJBTUQ4MTMxIHJldiAleCBkZXRlY3RlZDsgZGlzYWJs
aW5nIFBDSS1YIE1NUkJDXG4iLAoJCQkgZGV2LT5yZXZpc2lvbik7CgkJZGV2LT5zdWJvcmRpbmF0
ZS0+YnVzX2ZsYWdzIHw9IFBDSV9CVVNfRkxBR1NfTk9fTU1SQkM7Cgl9Cn0KREVDTEFSRV9QQ0lf
RklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BTUQsIFBDSV9ERVZJQ0VfSURfQU1EXzgxMzFfQlJJ
REdFLCBxdWlya19hbWRfODEzMV9tbXJiYyk7CgovKgogKiBGSVhNRTogaXQgaXMgcXVlc3Rpb25h
YmxlIHRoYXQgcXVpcmtfdmlhX2FjcGkoKSBpcyBuZWVkZWQuICBJdCBzaG93cyB1cAogKiBhcyBh
biBJU0EgYnJpZGdlLCBhbmQgZG9lcyBub3Qgc3VwcG9ydCB0aGUgUENJX0lOVEVSUlVQVF9MSU5F
IHJlZ2lzdGVyCiAqIGF0IGFsbC4gIFRoZXJlZm9yZSBpdCBzZWVtcyBsaWtlIHNldHRpbmcgdGhl
IHBjaV9kZXYncyBJUlEgdG8gdGhlIHZhbHVlCiAqIG9mIHRoZSBBQ1BJIFNDSSBpbnRlcnJ1cHQg
aXMgb25seSBkb25lIGZvciBjb252ZW5pZW5jZS4KICoJLWpnYXJ6aWsKICovCnN0YXRpYyB2b2lk
IHF1aXJrX3ZpYV9hY3BpKHN0cnVjdCBwY2lfZGV2ICpkKQp7Cgl1OCBpcnE7CgoJLyogVklBIEFD
UEkgZGV2aWNlOiBTQ0kgSVJRIGxpbmUgaW4gUENJIGNvbmZpZyBieXRlIDB4NDIgKi8KCXBjaV9y
ZWFkX2NvbmZpZ19ieXRlKGQsIDB4NDIsICZpcnEpOwoJaXJxICY9IDB4ZjsKCWlmIChpcnEgJiYg
KGlycSAhPSAyKSkKCQlkLT5pcnEgPSBpcnE7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBD
SV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84MkM1ODZfMywJcXVpcmtfdmlhX2Fj
cGkpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJ
Q0VfSURfVklBXzgyQzY4Nl80LAlxdWlya192aWFfYWNwaSk7CgovKiBWSUEgYnJpZGdlcyB3aGlj
aCBoYXZlIFZMaW5rICovCnN0YXRpYyBpbnQgdmlhX3ZsaW5rX2Rldl9sbyA9IC0xLCB2aWFfdmxp
bmtfZGV2X2hpID0gMTg7CgpzdGF0aWMgdm9pZCBxdWlya192aWFfYnJpZGdlKHN0cnVjdCBwY2lf
ZGV2ICpkZXYpCnsKCS8qIFNlZSB3aGF0IGJyaWRnZSB3ZSBoYXZlIGFuZCBmaW5kIHRoZSBkZXZp
Y2UgcmFuZ2VzICovCglzd2l0Y2ggKGRldi0+ZGV2aWNlKSB7CgljYXNlIFBDSV9ERVZJQ0VfSURf
VklBXzgyQzY4NjoKCQkvKgoJCSAqIFRoZSBWVDgyQzY4NiBpcyBzcGVjaWFsOyBpdCBhdHRhY2hl
cyB0byBQQ0kgYW5kIGNhbiBoYXZlCgkJICogYW55IGRldmljZSBudW1iZXIuIEFsbCBpdHMgc3Vi
ZGV2aWNlcyBhcmUgZnVuY3Rpb25zIG9mCgkJICogdGhhdCBzaW5nbGUgZGV2aWNlLgoJCSAqLwoJ
CXZpYV92bGlua19kZXZfbG8gPSBQQ0lfU0xPVChkZXYtPmRldmZuKTsKCQl2aWFfdmxpbmtfZGV2
X2hpID0gUENJX1NMT1QoZGV2LT5kZXZmbik7CgkJYnJlYWs7CgljYXNlIFBDSV9ERVZJQ0VfSURf
VklBXzgyMzc6CgljYXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyMzdBOgoJCXZpYV92bGlua19kZXZf
bG8gPSAxNTsKCQlicmVhazsKCWNhc2UgUENJX0RFVklDRV9JRF9WSUFfODIzNToKCQl2aWFfdmxp
bmtfZGV2X2xvID0gMTY7CgkJYnJlYWs7CgljYXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyMzE6Cglj
YXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyMzNfMDoKCWNhc2UgUENJX0RFVklDRV9JRF9WSUFfODIz
M0E6CgljYXNlIFBDSV9ERVZJQ0VfSURfVklBXzgyMzNDXzA6CgkJdmlhX3ZsaW5rX2Rldl9sbyA9
IDE3OwoJCWJyZWFrOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNjg2LAlxdWlya192aWFfYnJpZGdlKTsKREVDTEFS
RV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lEX1ZJQV84
MjMxLAkJcXVpcmtfdmlhX2JyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVO
RE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODIzM18wLAlxdWlya192aWFfYnJpZGdlKTsK
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfVklBLAlQQ0lfREVWSUNFX0lE
X1ZJQV84MjMzQSwJcXVpcmtfdmlhX2JyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQ
Q0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODIzM0NfMCwJcXVpcmtfdmlhX2Jy
aWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RF
VklDRV9JRF9WSUFfODIzNSwJCXF1aXJrX3ZpYV9icmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9I
RUFERVIoUENJX1ZFTkRPUl9JRF9WSUEsCVBDSV9ERVZJQ0VfSURfVklBXzgyMzcsCQlxdWlya192
aWFfYnJpZGdlKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfVklBLAlQ
Q0lfREVWSUNFX0lEX1ZJQV84MjM3QSwJcXVpcmtfdmlhX2JyaWRnZSk7CgovKgogKiBxdWlya192
aWFfdmxpbmsJCS0JVklBIFZMaW5rIElSUSBudW1iZXIgdXBkYXRlCiAqIEBkZXY6IFBDSSBkZXZp
Y2UKICoKICogSWYgdGhlIGRldmljZSB3ZSBhcmUgZGVhbGluZyB3aXRoIGlzIG9uIGEgUElDIElS
USB3ZSBuZWVkIHRvIGVuc3VyZSB0aGF0CiAqIHRoZSBJUlEgbGluZSByZWdpc3RlciB3aGljaCB1
c3VhbGx5IGlzIG5vdCByZWxldmFudCBmb3IgUENJIGNhcmRzLCBpcwogKiBhY3R1YWxseSB3cml0
dGVuIHNvIHRoYXQgaW50ZXJydXB0cyBnZXQgc2VudCB0byB0aGUgcmlnaHQgcGxhY2UuCiAqCiAq
IFdlIG9ubHkgZG8gdGhpcyBvbiBzeXN0ZW1zIHdoZXJlIGEgVklBIHNvdXRoIGJyaWRnZSB3YXMg
ZGV0ZWN0ZWQsIGFuZAogKiBvbmx5IGZvciBWSUEgZGV2aWNlcyBvbiB0aGUgbW90aGVyYm9hcmQg
KHNlZSBxdWlya192aWFfYnJpZGdlIGFib3ZlKS4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3ZpYV92
bGluayhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1OCBpcnEsIG5ld19pcnE7CgoJLyogQ2hlY2sg
aWYgd2UgaGF2ZSBWTGluayBhdCBhbGwgKi8KCWlmICh2aWFfdmxpbmtfZGV2X2xvID09IC0xKQoJ
CXJldHVybjsKCgluZXdfaXJxID0gZGV2LT5pcnE7CgoJLyogRG9uJ3QgcXVpcmsgaW50ZXJydXB0
cyBvdXRzaWRlIHRoZSBsZWdhY3kgSVJRIHJhbmdlICovCglpZiAoIW5ld19pcnEgfHwgbmV3X2ly
cSA+IDE1KQoJCXJldHVybjsKCgkvKiBJbnRlcm5hbCBkZXZpY2UgPyAqLwoJaWYgKGRldi0+YnVz
LT5udW1iZXIgIT0gMCB8fCBQQ0lfU0xPVChkZXYtPmRldmZuKSA+IHZpYV92bGlua19kZXZfaGkg
fHwKCSAgICBQQ0lfU0xPVChkZXYtPmRldmZuKSA8IHZpYV92bGlua19kZXZfbG8pCgkJcmV0dXJu
OwoKCS8qCgkgKiBUaGlzIGlzIGFuIGludGVybmFsIFZMaW5rIGRldmljZSBvbiBhIFBJQyBpbnRl
cnJ1cHQuIFRoZSBCSU9TCgkgKiBvdWdodCB0byBoYXZlIHNldCB0aGlzIGJ1dCBtYXkgbm90IGhh
dmUsIHNvIHdlIHJlZG8gaXQuCgkgKi8KCXBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgUENJX0lO
VEVSUlVQVF9MSU5FLCAmaXJxKTsKCWlmIChuZXdfaXJxICE9IGlycSkgewoJCXBjaV9pbmZvKGRl
diwgIlZJQSBWTGluayBJUlEgZml4dXAsIGZyb20gJWQgdG8gJWRcbiIsCgkJCWlycSwgbmV3X2ly
cSk7CgkJdWRlbGF5KDE1KTsJLyogdW5rbm93biBpZiBkZWxheSByZWFsbHkgbmVlZGVkICovCgkJ
cGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgUENJX0lOVEVSUlVQVF9MSU5FLCBuZXdfaXJxKTsK
CX0KfQpERUNMQVJFX1BDSV9GSVhVUF9FTkFCTEUoUENJX1ZFTkRPUl9JRF9WSUEsIFBDSV9BTllf
SUQsIHF1aXJrX3ZpYV92bGluayk7CgovKgogKiBWSUEgVlQ4MkM1OTggaGFzIGl0cyBkZXZpY2Ug
SUQgc2V0dGFibGUgYW5kIG1hbnkgQklPU2VzIHNldCBpdCB0byB0aGUgSUQKICogb2YgVlQ4MkM1
OTcgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkuICBXZSBuZWVkIHRvIHN3aXRjaCBpdCBvZmYg
dG8gYmUKICogYWJsZSB0byByZWNvZ25pemUgdGhlIHJlYWwgdHlwZSBvZiB0aGUgY2hpcC4KICov
CnN0YXRpYyB2b2lkIHF1aXJrX3Z0ODJjNTk4X2lkKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXBj
aV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4ZmMsIDApOwoJcGNpX3JlYWRfY29uZmlnX3dvcmQo
ZGV2LCBQQ0lfREVWSUNFX0lELCAmZGV2LT5kZXZpY2UpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODJDNTk3XzAsCXF1aXJr
X3Z0ODJjNTk4X2lkKTsKCi8qCiAqIENhcmRCdXMgY29udHJvbGxlcnMgaGF2ZSBhIGxlZ2FjeSBi
YXNlIGFkZHJlc3MgdGhhdCBlbmFibGVzIHRoZW0gdG8KICogcmVzcG9uZCBhcyBpODIzNjUgcGNt
Y2lhIGNvbnRyb2xsZXJzLiAgV2UgZG9uJ3Qgd2FudCB0aGVtIHRvIGRvIHRoaXMKICogZXZlbiBp
ZiB0aGUgTGludXggQ2FyZEJ1cyBkcml2ZXIgaXMgbm90IGxvYWRlZCwgYmVjYXVzZSB0aGUgTGlu
dXggaTgyMzY1CiAqIGRyaXZlciBkb2VzIG5vdCAoYW5kIHNob3VsZCBub3QpIGhhbmRsZSBDYXJk
QnVzLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfY2FyZGJ1c19sZWdhY3koc3RydWN0IHBjaV9kZXYg
KmRldikKewoJcGNpX3dyaXRlX2NvbmZpZ19kd29yZChkZXYsIFBDSV9DQl9MRUdBQ1lfTU9ERV9C
QVNFLCAwKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19GSU5BTChQQ0lfQU5ZX0lELCBQQ0lf
QU5ZX0lELAoJCQlQQ0lfQ0xBU1NfQlJJREdFX0NBUkRCVVMsIDgsIHF1aXJrX2NhcmRidXNfbGVn
YWN5KTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfUkVTVU1FX0VBUkxZKFBDSV9BTllfSUQsIFBD
SV9BTllfSUQsCgkJCVBDSV9DTEFTU19CUklER0VfQ0FSREJVUywgOCwgcXVpcmtfY2FyZGJ1c19s
ZWdhY3kpOwoKLyoKICogRm9sbG93aW5nIHRoZSBQQ0kgb3JkZXJpbmcgcnVsZXMgaXMgb3B0aW9u
YWwgb24gdGhlIEFNRDc2Mi4gSSdtIG5vdCBzdXJlCiAqIHdoYXQgdGhlIGRlc2lnbmVycyB3ZXJl
IHNtb2tpbmcgYnV0IGxldCdzIG5vdCBpbmhhbGUuLi4KICoKICogVG8gYmUgZmFpciB0byBBTUQs
IGl0IGZvbGxvd3MgdGhlIHNwZWMgYnkgZGVmYXVsdCwgaXQncyBCSU9TIHBlb3BsZSB3aG8KICog
dHVybiBpdCBvZmYhCiAqLwpzdGF0aWMgdm9pZCBxdWlya19hbWRfb3JkZXJpbmcoc3RydWN0IHBj
aV9kZXYgKmRldikKewoJdTMyIHBjaWM7CglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCAweDRD
LCAmcGNpYyk7CglpZiAoKHBjaWMgJiA2KSAhPSA2KSB7CgkJcGNpYyB8PSA2OwoJCXBjaV93YXJu
KGRldiwgIkJJT1MgZmFpbGVkIHRvIGVuYWJsZSBQQ0kgc3RhbmRhcmRzIGNvbXBsaWFuY2U7IGZp
eGluZyB0aGlzIGVycm9yXG4iKTsKCQlwY2lfd3JpdGVfY29uZmlnX2R3b3JkKGRldiwgMHg0Qywg
cGNpYyk7CgkJcGNpX3JlYWRfY29uZmlnX2R3b3JkKGRldiwgMHg4NCwgJnBjaWMpOwoJCXBjaWMg
fD0gKDEgPDwgMjMpOwkvKiBSZXF1aXJlZCBpbiB0aGlzIG1vZGUgKi8KCQlwY2lfd3JpdGVfY29u
ZmlnX2R3b3JkKGRldiwgMHg4NCwgcGNpYyk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
UENJX1ZFTkRPUl9JRF9BTUQsCVBDSV9ERVZJQ0VfSURfQU1EX0ZFX0dBVEVfNzAwQywgcXVpcmtf
YW1kX29yZGVyaW5nKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1Jf
SURfQU1ELAlQQ0lfREVWSUNFX0lEX0FNRF9GRV9HQVRFXzcwMEMsIHF1aXJrX2FtZF9vcmRlcmlu
Zyk7CgovKgogKiBEcmVhbVdvcmtzLXByb3ZpZGVkIHdvcmthcm91bmQgZm9yIER1bm9yZCBJLTMw
MDAgcHJvYmxlbQogKgogKiBUaGlzIGNhcmQgZGVjb2RlcyBhbmQgcmVzcG9uZHMgdG8gYWRkcmVz
c2VzIG5vdCBhcHBhcmVudGx5IGFzc2lnbmVkIHRvCiAqIGl0LiAgV2UgZm9yY2UgYSBsYXJnZXIg
YWxsb2NhdGlvbiB0byBlbnN1cmUgdGhhdCBub3RoaW5nIGdldHMgcHV0IHRvbwogKiBjbG9zZSB0
byBpdC4KICovCnN0YXRpYyB2b2lkIHF1aXJrX2R1bm9yZChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7
CglzdHJ1Y3QgcmVzb3VyY2UgKnIgPSAmZGV2LT5yZXNvdXJjZVsxXTsKCglyLT5mbGFncyB8PSBJ
T1JFU09VUkNFX1VOU0VUOwoJci0+c3RhcnQgPSAwOwoJci0+ZW5kID0gMHhmZmZmZmY7Cn0KREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfRFVOT1JELAlQQ0lfREVWSUNFX0lE
X0RVTk9SRF9JMzAwMCwJcXVpcmtfZHVub3JkKTsKCi8qCiAqIGk4MjM4MEZCIG1vYmlsZSBkb2Nr
aW5nIGNvbnRyb2xsZXI6IGl0cyBQQ0ktdG8tUENJIGJyaWRnZSBpcyBzdWJ0cmFjdGl2ZQogKiBk
ZWNvZGluZyAodHJhbnNwYXJlbnQpLCBhbmQgZG9lcyBpbmRpY2F0ZSB0aGlzIGluIHRoZSBQcm9n
SWYuCiAqIFVuZm9ydHVuYXRlbHksIHRoZSBQcm9nSWYgdmFsdWUgaXMgd3JvbmcgLSAweDgwIGlu
c3RlYWQgb2YgMHgwMS4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3RyYW5zcGFyZW50X2JyaWRnZShz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPnRyYW5zcGFyZW50ID0gMTsKfQpERUNMQVJFX1BD
SV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84
MjM4MEZCLAlxdWlya190cmFuc3BhcmVudF9icmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFE
RVIoUENJX1ZFTkRPUl9JRF9UT1NISUJBLAkweDYwNSwJcXVpcmtfdHJhbnNwYXJlbnRfYnJpZGdl
KTsKCi8qCiAqIENvbW1vbiBtaXNjb25maWd1cmF0aW9uIG9mIHRoZSBNZWRpYUdYL0dlb2RlIFBD
SSBtYXN0ZXIgdGhhdCB3aWxsIHJlZHVjZQogKiBQQ0kgYmFuZHdpZHRoIGZyb20gNzBNQi9zIHRv
IDI1TUIvcy4gIFNlZSB0aGUgR1hNL0dYTFYvR1gxIGRhdGFzaGVldHMKICogZm91bmQgYXQgaHR0
cDovL3d3dy5uYXRpb25hbC5jb20vYW5hbG9nIGZvciBpbmZvIG9uIHdoYXQgdGhlc2UgYml0cyBk
by4KICogPGNocmlzdGVyQHdlaW5pZ2VsLnNlPgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfbWVkaWFn
eF9tYXN0ZXIoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTggcmVnOwoKCXBjaV9yZWFkX2NvbmZp
Z19ieXRlKGRldiwgMHg0MSwgJnJlZyk7CglpZiAocmVnICYgMikgewoJCXJlZyAmPSB+MjsKCQlw
Y2lfaW5mbyhkZXYsICJGaXh1cCBmb3IgTWVkaWFHWC9HZW9kZSBTbGF2ZSBEaXNjb25uZWN0IEJv
dW5kYXJ5ICgweDQxPTB4JTAyeClcbiIsCgkJCSByZWcpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0
ZShkZXYsIDB4NDEsIHJlZyk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRP
Ul9JRF9DWVJJWCwJUENJX0RFVklDRV9JRF9DWVJJWF9QQ0lfTUFTVEVSLCBxdWlya19tZWRpYWd4
X21hc3Rlcik7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0NZUklYLAlQ
Q0lfREVWSUNFX0lEX0NZUklYX1BDSV9NQVNURVIsIHF1aXJrX21lZGlhZ3hfbWFzdGVyKTsKCi8q
CiAqIEVuc3VyZSBDMCByZXYgcmVzdHJlYW1pbmcgaXMgb2ZmLiBUaGlzIGlzIG5vcm1hbGx5IGRv
bmUgYnkgdGhlIEJJT1MgYnV0CiAqIGluIHRoZSBvZGQgY2FzZSBpdCBpcyBub3QgdGhlIHJlc3Vs
dHMgYXJlIGNvcnJ1cHRpb24gaGVuY2UgdGhlIHByZXNlbmNlCiAqIG9mIGEgTGludXggY2hlY2su
CiAqLwpzdGF0aWMgdm9pZCBxdWlya19kaXNhYmxlX3B4YihzdHJ1Y3QgcGNpX2RldiAqcGRldikK
ewoJdTE2IGNvbmZpZzsKCglpZiAocGRldi0+cmV2aXNpb24gIT0gMHgwNCkJCS8qIE9ubHkgQzAg
cmVxdWlyZXMgdGhpcyAqLwoJCXJldHVybjsKCXBjaV9yZWFkX2NvbmZpZ193b3JkKHBkZXYsIDB4
NDAsICZjb25maWcpOwoJaWYgKGNvbmZpZyAmICgxPDw2KSkgewoJCWNvbmZpZyAmPSB+KDE8PDYp
OwoJCXBjaV93cml0ZV9jb25maWdfd29yZChwZGV2LCAweDQwLCBjb25maWcpOwoJCXBjaV9pbmZv
KHBkZXYsICJDMCByZXZpc2lvbiA0NTBOWC4gRGlzYWJsaW5nIFBDSSByZXN0cmVhbWluZ1xuIik7
Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RF
VklDRV9JRF9JTlRFTF84MjQ1NE5YLAlxdWlya19kaXNhYmxlX3B4Yik7CkRFQ0xBUkVfUENJX0ZJ
WFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVM
XzgyNDU0TlgsCXF1aXJrX2Rpc2FibGVfcHhiKTsKCnN0YXRpYyB2b2lkIHF1aXJrX2FtZF9pZGVf
bW9kZShzdHJ1Y3QgcGNpX2RldiAqcGRldikKewoJLyogc2V0IFNCWDAwL0h1ZHNvbi0yIFNBVEEg
aW4gSURFIG1vZGUgdG8gQUhDSSBtb2RlICovCgl1OCB0bXA7CgoJcGNpX3JlYWRfY29uZmlnX2J5
dGUocGRldiwgUENJX0NMQVNTX0RFVklDRSwgJnRtcCk7CglpZiAodG1wID09IDB4MDEpIHsKCQlw
Y2lfcmVhZF9jb25maWdfYnl0ZShwZGV2LCAweDQwLCAmdG1wKTsKCQlwY2lfd3JpdGVfY29uZmln
X2J5dGUocGRldiwgMHg0MCwgdG1wfDEpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShwZGV2LCAw
eDksIDEpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShwZGV2LCAweGEsIDYpOwoJCXBjaV93cml0
ZV9jb25maWdfYnl0ZShwZGV2LCAweDQwLCB0bXApOwoKCQlwZGV2LT5jbGFzcyA9IFBDSV9DTEFT
U19TVE9SQUdFX1NBVEFfQUhDSTsKCQlwY2lfaW5mbyhwZGV2LCAic2V0IFNBVEEgdG8gQUhDSSBt
b2RlXG4iKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BVEks
IFBDSV9ERVZJQ0VfSURfQVRJX0lYUDYwMF9TQVRBLCBxdWlya19hbWRfaWRlX21vZGUpOwpERUNM
QVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0Vf
SURfQVRJX0lYUDYwMF9TQVRBLCBxdWlya19hbWRfaWRlX21vZGUpOwpERUNMQVJFX1BDSV9GSVhV
UF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX0lYUDcwMF9TQVRB
LCBxdWlya19hbWRfaWRlX21vZGUpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX0lYUDcwMF9TQVRBLCBxdWlya19hbWRf
aWRlX21vZGUpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BTUQsIFBD
SV9ERVZJQ0VfSURfQU1EX0hVRFNPTjJfU0FUQV9JREUsIHF1aXJrX2FtZF9pZGVfbW9kZSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0FNRCwgUENJX0RFVklD
RV9JRF9BTURfSFVEU09OMl9TQVRBX0lERSwgcXVpcmtfYW1kX2lkZV9tb2RlKTsKREVDTEFSRV9Q
Q0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfQU1ELCAweDc5MDAsIHF1aXJrX2FtZF9pZGVf
bW9kZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0FNRCwg
MHg3OTAwLCBxdWlya19hbWRfaWRlX21vZGUpOwoKLyogU2VydmVyd29ya3MgQ1NCNSBJREUgZG9l
cyBub3QgZnVsbHkgc3VwcG9ydCBuYXRpdmUgbW9kZSAqLwpzdGF0aWMgdm9pZCBxdWlya19zdndr
c19jc2I1aWRlKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7Cgl1OCBwcm9nOwoJcGNpX3JlYWRfY29u
ZmlnX2J5dGUocGRldiwgUENJX0NMQVNTX1BST0csICZwcm9nKTsKCWlmIChwcm9nICYgNSkgewoJ
CXByb2cgJj0gfjU7CgkJcGRldi0+Y2xhc3MgJj0gfjU7CgkJcGNpX3dyaXRlX2NvbmZpZ19ieXRl
KHBkZXYsIFBDSV9DTEFTU19QUk9HLCBwcm9nKTsKCQkvKiBQQ0kgbGF5ZXIgd2lsbCBzb3J0IG91
dCByZXNvdXJjZXMgKi8KCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lE
X1NFUlZFUldPUktTLCBQQ0lfREVWSUNFX0lEX1NFUlZFUldPUktTX0NTQjVJREUsIHF1aXJrX3N2
d2tzX2NzYjVpZGUpOwoKLyogSW50ZWwgODI4MDFDQU0gSUNIMy1NIGRhdGFzaGVldCBzYXlzIElE
RSBtb2RlcyBtdXN0IGJlIHRoZSBzYW1lICovCnN0YXRpYyB2b2lkIHF1aXJrX2lkZV9zYW1lbW9k
ZShzdHJ1Y3QgcGNpX2RldiAqcGRldikKewoJdTggcHJvZzsKCglwY2lfcmVhZF9jb25maWdfYnl0
ZShwZGV2LCBQQ0lfQ0xBU1NfUFJPRywgJnByb2cpOwoKCWlmICgoKHByb2cgJiAxKSAmJiAhKHBy
b2cgJiA0KSkgfHwgKChwcm9nICYgNCkgJiYgIShwcm9nICYgMSkpKSB7CgkJcGNpX2luZm8ocGRl
diwgIklERSBtb2RlIG1pc21hdGNoOyBmb3JjaW5nIGxlZ2FjeSBtb2RlXG4iKTsKCQlwcm9nICY9
IH41OwoJCXBkZXYtPmNsYXNzICY9IH41OwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShwZGV2LCBQ
Q0lfQ0xBU1NfUFJPRywgcHJvZyk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZF
TkRPUl9JRF9JTlRFTCwgUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUNBXzEwLCBxdWlya19pZGVf
c2FtZW1vZGUpOwoKLyogU29tZSBBVEEgZGV2aWNlcyBicmVhayBpZiBwdXQgaW50byBEMyAqLwpz
dGF0aWMgdm9pZCBxdWlya19ub19hdGFfZDMoc3RydWN0IHBjaV9kZXYgKnBkZXYpCnsKCXBkZXYt
PmRldl9mbGFncyB8PSBQQ0lfREVWX0ZMQUdTX05PX0QzOwp9Ci8qIFF1aXJrIHRoZSBsZWdhY3kg
QVRBIGRldmljZXMgb25seS4gVGhlIEFIQ0kgb25lcyBhcmUgb2sgKi8KREVDTEFSRV9QQ0lfRklY
VVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgUENJX0FOWV9JRCwKCQkJ
CVBDSV9DTEFTU19TVE9SQUdFX0lERSwgOCwgcXVpcmtfbm9fYXRhX2QzKTsKREVDTEFSRV9QQ0lf
RklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9BTllfSUQsCgkJCQlQQ0lf
Q0xBU1NfU1RPUkFHRV9JREUsIDgsIHF1aXJrX25vX2F0YV9kMyk7Ci8qIEFMaSBsb3NlcyBzb21l
IHJlZ2lzdGVyIHNldHRpbmdzIHRoYXQgd2UgY2Fubm90IHRoZW4gcmVzdG9yZSAqLwpERUNMQVJF
X1BDSV9GSVhVUF9DTEFTU19FQVJMWShQQ0lfVkVORE9SX0lEX0FMLCBQQ0lfQU5ZX0lELAoJCQkJ
UENJX0NMQVNTX1NUT1JBR0VfSURFLCA4LCBxdWlya19ub19hdGFfZDMpOwovKiBWSUEgY29tZXMg
YmFjayBmaW5lIGJ1dCB3ZSBuZWVkIHRvIGtlZXAgaXQgYWxpdmUgb3IgQUNQSSBHVE0gZmFpbHVy
ZXMKICAgb2NjdXIgd2hlbiBtb2RlIGRldGVjdGluZyAqLwpERUNMQVJFX1BDSV9GSVhVUF9DTEFT
U19FQVJMWShQQ0lfVkVORE9SX0lEX1ZJQSwgUENJX0FOWV9JRCwKCQkJCVBDSV9DTEFTU19TVE9S
QUdFX0lERSwgOCwgcXVpcmtfbm9fYXRhX2QzKTsKCi8qCiAqIFRoaXMgd2FzIG9yaWdpbmFsbHkg
YW4gQWxwaGEtc3BlY2lmaWMgdGhpbmcsIGJ1dCBpdCByZWFsbHkgZml0cyBoZXJlLgogKiBUaGUg
aTgyMzc1IFBDSS9FSVNBIGJyaWRnZSBhcHBlYXJzIGFzIG5vbi1jbGFzc2lmaWVkLiBGaXggdGhh
dC4KICovCnN0YXRpYyB2b2lkIHF1aXJrX2Vpc2FfYnJpZGdlKHN0cnVjdCBwY2lfZGV2ICpkZXYp
CnsKCWRldi0+Y2xhc3MgPSBQQ0lfQ0xBU1NfQlJJREdFX0VJU0EgPDwgODsKfQpERUNMQVJFX1BD
SV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84
MjM3NSwJcXVpcmtfZWlzYV9icmlkZ2UpOwoKLyoKICogT24gQVNVUyBQNEIgYm9hcmRzLCB0aGUg
U01CdXMgUENJIERldmljZSB3aXRoaW4gdGhlIElDSDIvNCBzb3V0aGJyaWRnZQogKiBpcyBub3Qg
YWN0aXZhdGVkLiBUaGUgbXl0aCBpcyB0aGF0IEFzdXMgc2FpZCB0aGF0IHRoZXkgZG8gbm90IHdh
bnQgdGhlCiAqIHVzZXJzIHRvIGJlIGlycml0YXRlZCBieSBqdXN0IGFub3RoZXIgUENJIERldmlj
ZSBpbiB0aGUgV2luOTggZGV2aWNlCiAqIG1hbmFnZXIuIChzZWUgdGhlIGZpbGUgcHJvZy9ob3Rw
bHVnL1JFQURNRS5wNGIgaW4gdGhlIGxtX3NlbnNvcnMKICogcGFja2FnZSAyLjcuMCBmb3IgZGV0
YWlscykKICoKICogVGhlIFNNQnVzIFBDSSBEZXZpY2UgY2FuIGJlIGFjdGl2YXRlZCBieSBzZXR0
aW5nIGEgYml0IGluIHRoZSBJQ0ggTFBDCiAqIGJyaWRnZS4gVW5mb3J0dW5hdGVseSwgdGhpcyBk
ZXZpY2UgaGFzIG5vIHN1YnZlbmRvci9zdWJkZXZpY2UgSUQuIFNvIGl0CiAqIGJlY29tZXMgbmVj
ZXNzYXJ5IHRvIGRvIHRoaXMgdHdlYWsgaW4gdHdvIHN0ZXBzIC0tIHRoZSBjaG9zZW4gdHJpZ2dl
cgogKiBpcyBlaXRoZXIgdGhlIEhvc3QgYnJpZGdlIChwcmVmZXJyZWQpIG9yIG9uLWJvYXJkIFZH
QSBjb250cm9sbGVyLgogKgogKiBOb3RlIHRoYXQgd2UgdXNlZCB0byB1bmhpZGUgdGhlIFNNQnVz
IHRoYXQgd2F5IG9uIFRvc2hpYmEgbGFwdG9wcwogKiAoU2F0ZWxsaXRlIEE0MCBhbmQgVGVjcmEg
TTIpIGJ1dCB0aGVuIGZvdW5kIHRoYXQgdGhlIHRoZXJtYWwgbWFuYWdlbWVudAogKiB3YXMgZG9u
ZSBieSBTTU0gY29kZSwgd2hpY2ggY291bGQgY2F1c2UgdW5zeW5jaHJvbml6ZWQgY29uY3VycmVu
dAogKiBhY2Nlc3NlcyB0byB0aGUgU01CdXMgcmVnaXN0ZXJzLCB3aXRoIHBvdGVudGlhbGx5IGJh
ZCBlZmZlY3RzLiBUaHVzIHlvdQogKiBzaG91bGQgYmUgdmVyeSBjYXJlZnVsIHdoZW4gYWRkaW5n
IG5ldyBlbnRyaWVzOiBpZiBTTU0gaXMgYWNjZXNzaW5nIHRoZQogKiBJbnRlbCBTTUJ1cywgdGhp
cyBpcyBhIHZlcnkgZ29vZCByZWFzb24gdG8gbGVhdmUgaXQgaGlkZGVuLgogKgogKiBMaWtld2lz
ZSwgbWFueSByZWNlbnQgbGFwdG9wcyB1c2UgQUNQSSBmb3IgdGhlcm1hbCBtYW5hZ2VtZW50LiBJ
ZiB0aGUKICogQUNQSSBEU0RUIGNvZGUgYWNjZXNzZXMgdGhlIFNNQnVzLCB0aGVuIExpbnV4IHNo
b3VsZCBub3QgYWNjZXNzIGl0CiAqIG5hdGl2ZWx5LCBhbmQga2VlcGluZyB0aGUgU01CdXMgaGlk
ZGVuIGlzIHRoZSByaWdodCB0aGluZyB0byBkby4gSWYgeW91CiAqIGFyZSBhYm91dCB0byBhZGQg
YW4gZW50cnkgaW4gdGhlIHRhYmxlIGJlbG93LCBwbGVhc2UgZmlyc3QgZGlzYXNzZW1ibGUKICog
dGhlIERTRFQgYW5kIGRvdWJsZS1jaGVjayB0aGF0IHRoZXJlIGlzIG5vIGNvZGUgYWNjZXNzaW5n
IHRoZSBTTUJ1cy4KICovCnN0YXRpYyBpbnQgYXN1c19oaWRlc19zbWJ1czsKCnN0YXRpYyB2b2lk
IGFzdXNfaGlkZXNfc21idXNfaG9zdGJyaWRnZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAo
dW5saWtlbHkoZGV2LT5zdWJzeXN0ZW1fdmVuZG9yID09IFBDSV9WRU5ET1JfSURfQVNVU1RFSykp
IHsKCQlpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84Mjg0NV9IQikKCQkJ
c3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDgwMjU6IC8qIFA0Qi1M
WCAqLwoJCQljYXNlIDB4ODA3MDogLyogUDRCICovCgkJCWNhc2UgMHg4MDg4OiAvKiBQNEI1MzMg
Ki8KCQkJY2FzZSAweDE2MjY6IC8qIEwzQyBub3RlYm9vayAqLwoJCQkJYXN1c19oaWRlc19zbWJ1
cyA9IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX0lOVEVM
XzgyODQ1R19IQikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAw
eDgwYjE6IC8qIFA0R0UtViAqLwoJCQljYXNlIDB4ODBiMjogLyogUDRQRSAqLwoJCQljYXNlIDB4
ODA5MzogLyogUDRCNTMzLVYgKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAxOwoJCQl9CgkJZWxz
ZSBpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84Mjg1MF9IQikKCQkJc3dp
dGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDgwMzA6IC8qIFA0VDUzMyAq
LwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9
PSBQQ0lfREVWSUNFX0lEX0lOVEVMXzcyMDVfMCkKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9k
ZXZpY2UpIHsKCQkJY2FzZSAweDgwNzA6IC8qIFA0RzhYIERlbHV4ZSAqLwoJCQkJYXN1c19oaWRl
c19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lE
X0lOVEVMX0U3NTAxX01DSCkKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJ
Y2FzZSAweDgwYzk6IC8qIFBVLURMUyAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJCX0K
CQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODU1R01fSEIp
CgkJCXN3aXRjaCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHgxNzUxOiAvKiBN
Mk4gbm90ZWJvb2sgKi8KCQkJY2FzZSAweDE4MjE6IC8qIE01TiBub3RlYm9vayAqLwoJCQljYXNl
IDB4MTg5NzogLyogQTZMIG5vdGVib29rICovCgkJCQlhc3VzX2hpZGVzX3NtYnVzID0gMTsKCQkJ
fQoJCWVsc2UgaWYgKGRldi0+ZGV2aWNlID09IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4NTVQTV9I
QikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDE4NGI6IC8q
IFcxTiBub3RlYm9vayAqLwoJCQljYXNlIDB4MTg2YTogLyogTTZOZSBub3RlYm9vayAqLwoJCQkJ
YXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlmIChkZXYtPmRldmljZSA9PSBQQ0lf
REVWSUNFX0lEX0lOVEVMXzgyODY1X0hCKQoJCQlzd2l0Y2ggKGRldi0+c3Vic3lzdGVtX2Rldmlj
ZSkgewoJCQljYXNlIDB4ODBmMjogLyogUDRQODAwLVggKi8KCQkJCWFzdXNfaGlkZXNfc21idXMg
PSAxOwoJCQl9CgkJZWxzZSBpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84
MjkxNUdNX0hCKQoJCQlzd2l0Y2ggKGRldi0+c3Vic3lzdGVtX2RldmljZSkgewoJCQljYXNlIDB4
MTg4MjogLyogTTZWIG5vdGVib29rICovCgkJCWNhc2UgMHgxOTc3OiAvKiBBNlZBIG5vdGVib29r
ICovCgkJCQlhc3VzX2hpZGVzX3NtYnVzID0gMTsKCQkJfQoJfSBlbHNlIGlmICh1bmxpa2VseShk
ZXYtPnN1YnN5c3RlbV92ZW5kb3IgPT0gUENJX1ZFTkRPUl9JRF9IUCkpIHsKCQlpZiAoZGV2LT5k
ZXZpY2UgPT0gIFBDSV9ERVZJQ0VfSURfSU5URUxfODI4NTVQTV9IQikKCQkJc3dpdGNoIChkZXYt
PnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDA4OEM6IC8qIEhQIENvbXBhcSBuYzgwMDAg
Ki8KCQkJY2FzZSAweDA4OTA6IC8qIEhQIENvbXBhcSBuYzYwMDAgKi8KCQkJCWFzdXNfaGlkZXNf
c21idXMgPSAxOwoJCQl9CgkJZWxzZSBpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9J
TlRFTF84Mjg2NV9IQikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2Fz
ZSAweDEyYmM6IC8qIEhQIEQzMzBMICovCgkJCWNhc2UgMHgxMmJkOiAvKiBIUCBENTMwICovCgkJ
CWNhc2UgMHgwMDZhOiAvKiBIUCBDb21wYXEgbng5NTAwICovCgkJCQlhc3VzX2hpZGVzX3NtYnVz
ID0gMTsKCQkJfQoJCWVsc2UgaWYgKGRldi0+ZGV2aWNlID09IFBDSV9ERVZJQ0VfSURfSU5URUxf
ODI4NzVfSEIpCgkJCXN3aXRjaCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHgx
MmJmOiAvKiBIUCB4dzQxMDAgKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAxOwoJCQl9Cgl9IGVs
c2UgaWYgKHVubGlrZWx5KGRldi0+c3Vic3lzdGVtX3ZlbmRvciA9PSBQQ0lfVkVORE9SX0lEX1NB
TVNVTkcpKSB7CgkJaWYgKGRldi0+ZGV2aWNlID09ICBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODU1
UE1fSEIpCgkJCXN3aXRjaCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHhDMDBD
OiAvKiBTYW1zdW5nIFAzNSBub3RlYm9vayAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJ
fQoJfSBlbHNlIGlmICh1bmxpa2VseShkZXYtPnN1YnN5c3RlbV92ZW5kb3IgPT0gUENJX1ZFTkRP
Ul9JRF9DT01QQVEpKSB7CgkJaWYgKGRldi0+ZGV2aWNlID09IFBDSV9ERVZJQ0VfSURfSU5URUxf
ODI4NTVQTV9IQikKCQkJc3dpdGNoIChkZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAw
eDAwNTg6IC8qIENvbXBhcSBFdm8gTjYyMGMgKi8KCQkJCWFzdXNfaGlkZXNfc21idXMgPSAxOwoJ
CQl9CgkJZWxzZSBpZiAoZGV2LT5kZXZpY2UgPT0gUENJX0RFVklDRV9JRF9JTlRFTF84MjgxMF9J
RzMpCgkJCXN3aXRjaCAoZGV2LT5zdWJzeXN0ZW1fZGV2aWNlKSB7CgkJCWNhc2UgMHhCMTZDOiAv
KiBDb21wYXEgRGVza3BybyBFUCA0MDE5NjMtMDAxIChQQ0EjIDAxMDE3NCkgKi8KCQkJCS8qIE1v
dGhlcmJvYXJkIGRvZXNuJ3QgaGF2ZSBIb3N0IGJyaWRnZQoJCQkJICogc3VidmVuZG9yL3N1YmRl
dmljZSBJRHMsIHRoZXJlZm9yZSBjaGVja2luZwoJCQkJICogaXRzIG9uLWJvYXJkIFZHQSBjb250
cm9sbGVyICovCgkJCQlhc3VzX2hpZGVzX3NtYnVzID0gMTsKCQkJfQoJCWVsc2UgaWYgKGRldi0+
ZGV2aWNlID09IFBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFEQl8yKQoJCQlzd2l0Y2ggKGRldi0+
c3Vic3lzdGVtX2RldmljZSkgewoJCQljYXNlIDB4MDBiODogLyogQ29tcGFxIEV2byBENTEwIENN
VCAqLwoJCQljYXNlIDB4MDBiOTogLyogQ29tcGFxIEV2byBENTEwIFNGRiAqLwoJCQljYXNlIDB4
MDBiYTogLyogQ29tcGFxIEV2byBENTEwIFVTRFQgKi8KCQkJCS8qIE1vdGhlcmJvYXJkIGRvZXNu
J3QgaGF2ZSBIb3N0IGJyaWRnZQoJCQkJICogc3VidmVuZG9yL3N1YmRldmljZSBJRHMgYW5kIG9u
LWJvYXJkIFZHQQoJCQkJICogY29udHJvbGxlciBpcyBkaXNhYmxlZCBpZiBhbiBBR1AgY2FyZCBp
cwoJCQkJICogaW5zZXJ0ZWQsIHRoZXJlZm9yZSBjaGVja2luZyBVU0IgVUhDSQoJCQkJICogQ29u
dHJvbGxlciAjMSAqLwoJCQkJYXN1c19oaWRlc19zbWJ1cyA9IDE7CgkJCX0KCQllbHNlIGlmIChk
ZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODE1X0NHQykKCQkJc3dpdGNoIChk
ZXYtPnN1YnN5c3RlbV9kZXZpY2UpIHsKCQkJY2FzZSAweDAwMUE6IC8qIENvbXBhcSBEZXNrcHJv
IEVOIFNTRiBQNjY3IDgxNUUgKi8KCQkJCS8qIE1vdGhlcmJvYXJkIGRvZXNuJ3QgaGF2ZSBob3N0
IGJyaWRnZQoJCQkJICogc3VidmVuZG9yL3N1YmRldmljZSBJRHMsIHRoZXJlZm9yZSBjaGVja2lu
ZwoJCQkJICogaXRzIG9uLWJvYXJkIFZHQSBjb250cm9sbGVyICovCgkJCQlhc3VzX2hpZGVzX3Nt
YnVzID0gMTsKCQkJfQoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODQ1X0hCLAlhc3VzX2hpZGVzX3NtYnVzX2hv
c3RicmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJ
UENJX0RFVklDRV9JRF9JTlRFTF84Mjg0NUdfSEIsCWFzdXNfaGlkZXNfc21idXNfaG9zdGJyaWRn
ZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVW
SUNFX0lEX0lOVEVMXzgyODUwX0hCLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2UpOwpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9J
TlRFTF84Mjg2NV9IQiwJYXN1c19oaWRlc19zbWJ1c19ob3N0YnJpZGdlKTsKREVDTEFSRV9QQ0lf
RklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI4
NzVfSEIsCWFzdXNfaGlkZXNfc21idXNfaG9zdGJyaWRnZSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzcyMDVfMCwJYXN1
c19oaWRlc19zbWJ1c19ob3N0YnJpZGdlKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9W
RU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfRTc1MDFfTUNILAlhc3VzX2hpZGVz
X3NtYnVzX2hvc3RicmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9J
RF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84Mjg1NVBNX0hCLAlhc3VzX2hpZGVzX3NtYnVz
X2hvc3RicmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRF
TCwJUENJX0RFVklDRV9JRF9JTlRFTF84Mjg1NUdNX0hCLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3Ri
cmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJ
X0RFVklDRV9JRF9JTlRFTF84MjkxNUdNX0hCLCBhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2Up
OwoKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJ
Q0VfSURfSU5URUxfODI4MTBfSUczLAlhc3VzX2hpZGVzX3NtYnVzX2hvc3RicmlkZ2UpOwpERUNM
QVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9J
TlRFTF84MjgwMURCXzIsCWFzdXNfaGlkZXNfc21idXNfaG9zdGJyaWRnZSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgy
ODE1X0NHQywJYXN1c19oaWRlc19zbWJ1c19ob3N0YnJpZGdlKTsKCnN0YXRpYyB2b2lkIGFzdXNf
aGlkZXNfc21idXNfbHBjKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUxNiB2YWw7CgoJaWYgKGxp
a2VseSghYXN1c19oaWRlc19zbWJ1cykpCgkJcmV0dXJuOwoKCXBjaV9yZWFkX2NvbmZpZ193b3Jk
KGRldiwgMHhGMiwgJnZhbCk7CglpZiAodmFsICYgMHg4KSB7CgkJcGNpX3dyaXRlX2NvbmZpZ193
b3JkKGRldiwgMHhGMiwgdmFsICYgKH4weDgpKTsKCQlwY2lfcmVhZF9jb25maWdfd29yZChkZXYs
IDB4RjIsICZ2YWwpOwoJCWlmICh2YWwgJiAweDgpCgkJCXBjaV9pbmZvKGRldiwgImk4MDEgU01C
dXMgZGV2aWNlIGNvbnRpbnVlcyB0byBwbGF5ICdoaWRlIGFuZCBzZWVrJyEgMHgleFxuIiwKCQkJ
CSB2YWwpOwoJCWVsc2UKCQkJcGNpX2luZm8oZGV2LCAiRW5hYmxlZCBpODAxIFNNQnVzIGRldmlj
ZVxuIik7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUws
CVBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFBQV8wLAlhc3VzX2hpZGVzX3NtYnVzX2xwYyk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lE
X0lOVEVMXzgyODAxREJfMCwJYXN1c19oaWRlc19zbWJ1c19scGMpOwpERUNMQVJFX1BDSV9GSVhV
UF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUJB
XzAsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9W
RU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFDQV8wLAlhc3VzX2hpZGVz
X3NtYnVzX2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0lOVEVM
LAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODAxQ0FfMTIsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsK
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0Vf
SURfSU5URUxfODI4MDFEQl8xMiwJYXN1c19oaWRlc19zbWJ1c19scGMpOwpERUNMQVJFX1BDSV9G
SVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84Mjgw
MUVCXzAsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VB
UkxZKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFBQV8wLAlh
c3VzX2hpZGVzX3NtYnVzX2xwYyk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lf
VkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMXzgyODAxREJfMCwJYXN1c19oaWRl
c19zbWJ1c19scGMpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9J
RF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84MjgwMUJBXzAsCWFzdXNfaGlkZXNfc21idXNf
bHBjKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUws
CVBDSV9ERVZJQ0VfSURfSU5URUxfODI4MDFDQV8wLAlhc3VzX2hpZGVzX3NtYnVzX2xwYyk7CkRF
Q0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVW
SUNFX0lEX0lOVEVMXzgyODAxQ0FfMTIsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsKREVDTEFSRV9Q
Q0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0VfSURf
SU5URUxfODI4MDFEQl8xMiwJYXN1c19oaWRlc19zbWJ1c19scGMpOwpERUNMQVJFX1BDSV9GSVhV
UF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF84
MjgwMUVCXzAsCWFzdXNfaGlkZXNfc21idXNfbHBjKTsKCi8qIEl0IGFwcGVhcnMgd2UganVzdCBo
YXZlIG9uZSBzdWNoIGRldmljZS4gSWYgbm90LCB3ZSBoYXZlIGEgd2FybmluZyAqLwpzdGF0aWMg
dm9pZCBfX2lvbWVtICphc3VzX3JjYmFfYmFzZTsKc3RhdGljIHZvaWQgYXN1c19oaWRlc19zbWJ1
c19scGNfaWNoNl9zdXNwZW5kKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUzMiByY2JhOwoKCWlm
IChsaWtlbHkoIWFzdXNfaGlkZXNfc21idXMpKQoJCXJldHVybjsKCVdBUk5fT04oYXN1c19yY2Jh
X2Jhc2UpOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIDB4RjAsICZyY2JhKTsKCS8qIHVz
ZSBiaXRzIDMxOjE0LCAxNiBrQiBhbGlnbmVkICovCglhc3VzX3JjYmFfYmFzZSA9IGlvcmVtYXBf
bm9jYWNoZShyY2JhICYgMHhGRkZGQzAwMCwgMHg0MDAwKTsKCWlmIChhc3VzX3JjYmFfYmFzZSA9
PSBOVUxMKQoJCXJldHVybjsKfQoKc3RhdGljIHZvaWQgYXN1c19oaWRlc19zbWJ1c19scGNfaWNo
Nl9yZXN1bWVfZWFybHkoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTMyIHZhbDsKCglpZiAobGlr
ZWx5KCFhc3VzX2hpZGVzX3NtYnVzIHx8ICFhc3VzX3JjYmFfYmFzZSkpCgkJcmV0dXJuOwoKCS8q
IHJlYWQgdGhlIEZ1bmN0aW9uIERpc2FibGUgcmVnaXN0ZXIsIGR3b3JkIG1vZGUgb25seSAqLwoJ
dmFsID0gcmVhZGwoYXN1c19yY2JhX2Jhc2UgKyAweDM0MTgpOwoKCS8qIGVuYWJsZSB0aGUgU01C
dXMgZGV2aWNlICovCgl3cml0ZWwodmFsICYgMHhGRkZGRkZGNywgYXN1c19yY2JhX2Jhc2UgKyAw
eDM0MTgpOwp9CgpzdGF0aWMgdm9pZCBhc3VzX2hpZGVzX3NtYnVzX2xwY19pY2g2X3Jlc3VtZShz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAobGlrZWx5KCFhc3VzX2hpZGVzX3NtYnVzIHx8ICFh
c3VzX3JjYmFfYmFzZSkpCgkJcmV0dXJuOwoKCWlvdW5tYXAoYXN1c19yY2JhX2Jhc2UpOwoJYXN1
c19yY2JhX2Jhc2UgPSBOVUxMOwoJcGNpX2luZm8oZGV2LCAiRW5hYmxlZCBJQ0g2L2k4MDEgU01C
dXMgZGV2aWNlXG4iKTsKfQoKc3RhdGljIHZvaWQgYXN1c19oaWRlc19zbWJ1c19scGNfaWNoNihz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cglhc3VzX2hpZGVzX3NtYnVzX2xwY19pY2g2X3N1c3BlbmQo
ZGV2KTsKCWFzdXNfaGlkZXNfc21idXNfbHBjX2ljaDZfcmVzdW1lX2Vhcmx5KGRldik7Cglhc3Vz
X2hpZGVzX3NtYnVzX2xwY19pY2g2X3Jlc3VtZShkZXYpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDZfMSwJYXN1
c19oaWRlc19zbWJ1c19scGNfaWNoNik7CkRFQ0xBUkVfUENJX0ZJWFVQX1NVU1BFTkQoUENJX1ZF
TkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g2XzEsCWFzdXNfaGlkZXNfc21i
dXNfbHBjX2ljaDZfc3VzcGVuZCk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9S
X0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0lDSDZfMSwJYXN1c19oaWRlc19zbWJ1c19s
cGNfaWNoNl9yZXN1bWUpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRP
Ul9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9JQ0g2XzEsCWFzdXNfaGlkZXNfc21idXNf
bHBjX2ljaDZfcmVzdW1lX2Vhcmx5KTsKCi8qIFNpUyA5Nnggc291dGggYnJpZGdlOiBCSU9TIHR5
cGljYWxseSBoaWRlcyBTTUJ1cyBkZXZpY2UuLi4gICovCnN0YXRpYyB2b2lkIHF1aXJrX3Npc185
Nnhfc21idXMoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTggdmFsID0gMDsKCXBjaV9yZWFkX2Nv
bmZpZ19ieXRlKGRldiwgMHg3NywgJnZhbCk7CglpZiAodmFsICYgMHgxMCkgewoJCXBjaV9pbmZv
KGRldiwgIkVuYWJsaW5nIFNpUyA5NnggU01CdXNcbiIpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0
ZShkZXYsIDB4NzcsIHZhbCAmIH4weDEwKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIo
UENJX1ZFTkRPUl9JRF9TSSwJUENJX0RFVklDRV9JRF9TSV85NjEsCQlxdWlya19zaXNfOTZ4X3Nt
YnVzKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJ
Q0VfSURfU0lfOTYyLAkJcXVpcmtfc2lzXzk2eF9zbWJ1cyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX1NJLAlQQ0lfREVWSUNFX0lEX1NJXzk2MywJCXF1aXJrX3Npc185
Nnhfc21idXMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9TSSwJUENJ
X0RFVklDRV9JRF9TSV9MUEMsCQlxdWlya19zaXNfOTZ4X3NtYnVzKTsKREVDTEFSRV9QQ0lfRklY
VVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lfOTYxLAkJ
cXVpcmtfc2lzXzk2eF9zbWJ1cyk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lf
VkVORE9SX0lEX1NJLAlQQ0lfREVWSUNFX0lEX1NJXzk2MiwJCXF1aXJrX3Npc185Nnhfc21idXMp
OwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9TSSwJUENJX0RF
VklDRV9JRF9TSV85NjMsCQlxdWlya19zaXNfOTZ4X3NtYnVzKTsKREVDTEFSRV9QQ0lfRklYVVBf
UkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lfTFBDLAkJcXVp
cmtfc2lzXzk2eF9zbWJ1cyk7CgovKgogKiAuLi4gVGhpcyBpcyBmdXJ0aGVyIGNvbXBsaWNhdGVk
IGJ5IHRoZSBmYWN0IHRoYXQgc29tZSBTaVM5Nnggc291dGgKICogYnJpZGdlcyBwcmV0ZW5kIHRv
IGJlIDg1QzUwMy81NTEzIGluc3RlYWQuICBJbiB0aGF0IGNhc2Ugc2VlIGlmIHdlCiAqIHNwb3R0
ZWQgYSBjb21wYXRpYmxlIG5vcnRoIGJyaWRnZSB0byBtYWtlIHN1cmUuCiAqIChwY2lfZmluZF9k
ZXZpY2UoKSBkb2Vzbid0IHdvcmsgeWV0KQogKgogKiBXZSBjYW4gYWxzbyBlbmFibGUgdGhlIHNp
czk2eCBiaXQgaW4gdGhlIGRpc2NvdmVyeSByZWdpc3Rlci4uCiAqLwojZGVmaW5lIFNJU19ERVRF
Q1RfUkVHSVNURVIgMHg0MAoKc3RhdGljIHZvaWQgcXVpcmtfc2lzXzUwMyhzdHJ1Y3QgcGNpX2Rl
diAqZGV2KQp7Cgl1OCByZWc7Cgl1MTYgZGV2aWQ7CgoJcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2
LCBTSVNfREVURUNUX1JFR0lTVEVSLCAmcmVnKTsKCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYs
IFNJU19ERVRFQ1RfUkVHSVNURVIsIHJlZyB8ICgxIDw8IDYpKTsKCXBjaV9yZWFkX2NvbmZpZ193
b3JkKGRldiwgUENJX0RFVklDRV9JRCwgJmRldmlkKTsKCWlmICgoKGRldmlkICYgMHhmZmYwKSAh
PSAweDA5NjApICYmIChkZXZpZCAhPSAweDAwMTgpKSB7CgkJcGNpX3dyaXRlX2NvbmZpZ19ieXRl
KGRldiwgU0lTX0RFVEVDVF9SRUdJU1RFUiwgcmVnKTsKCQlyZXR1cm47Cgl9CgoJLyoKCSAqIE9r
LCBpdCBub3cgc2hvd3MgdXAgYXMgYSA5NnguICBSdW4gdGhlIDk2eCBxdWlyayBieSBoYW5kIGlu
IGNhc2UKCSAqIGl0IGhhcyBhbHJlYWR5IGJlZW4gcHJvY2Vzc2VkLiAgKERlcGVuZHMgb24gbGlu
ayBvcmRlciwgd2hpY2ggaXMKCSAqIGFwcGFyZW50bHkgbm90IGd1YXJhbnRlZWQpCgkgKi8KCWRl
di0+ZGV2aWNlID0gZGV2aWQ7CglxdWlya19zaXNfOTZ4X3NtYnVzKGRldik7Cn0KREVDTEFSRV9Q
Q0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfU0ksCVBDSV9ERVZJQ0VfSURfU0lfNTAzLAkJ
cXVpcmtfc2lzXzUwMyk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9S
X0lEX1NJLAlQQ0lfREVWSUNFX0lEX1NJXzUwMywJCXF1aXJrX3Npc181MDMpOwoKLyoKICogT24g
QVNVUyBBOFYgYW5kIEE4ViBEZWx1eGUgYm9hcmRzLCB0aGUgb25ib2FyZCBBQzk3IGF1ZGlvIGNv
bnRyb2xsZXIKICogYW5kIE1DOTcgbW9kZW0gY29udHJvbGxlciBhcmUgZGlzYWJsZWQgd2hlbiBh
IHNlY29uZCBQQ0kgc291bmRjYXJkIGlzCiAqIHByZXNlbnQuIFRoaXMgcGF0Y2gsIHR3ZWFraW5n
IHRoZSBWVDgyMzcgSVNBIGJyaWRnZSwgZW5hYmxlcyB0aGVtLgogKiAtLSBiamQKICovCnN0YXRp
YyB2b2lkIGFzdXNfaGlkZXNfYWM5N19scGMoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTggdmFs
OwoJaW50IGFzdXNfaGlkZXNfYWM5NyA9IDA7CgoJaWYgKGxpa2VseShkZXYtPnN1YnN5c3RlbV92
ZW5kb3IgPT0gUENJX1ZFTkRPUl9JRF9BU1VTVEVLKSkgewoJCWlmIChkZXYtPmRldmljZSA9PSBQ
Q0lfREVWSUNFX0lEX1ZJQV84MjM3KQoJCQlhc3VzX2hpZGVzX2FjOTcgPSAxOwoJfQoKCWlmICgh
YXN1c19oaWRlc19hYzk3KQoJCXJldHVybjsKCglwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4
NTAsICZ2YWwpOwoJaWYgKHZhbCAmIDB4YzApIHsKCQlwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2
LCAweDUwLCB2YWwgJiAofjB4YzApKTsKCQlwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIDB4NTAs
ICZ2YWwpOwoJCWlmICh2YWwgJiAweGMwKQoJCQlwY2lfaW5mbyhkZXYsICJPbmJvYXJkIEFDOTcv
TUM5NyBkZXZpY2VzIGNvbnRpbnVlIHRvIHBsYXkgJ2hpZGUgYW5kIHNlZWsnISAweCV4XG4iLAoJ
CQkJIHZhbCk7CgkJZWxzZQoJCQlwY2lfaW5mbyhkZXYsICJFbmFibGVkIG9uYm9hcmQgQUM5Ny9N
Qzk3IGRldmljZXNcbiIpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX1ZJQSwJUENJX0RFVklDRV9JRF9WSUFfODIzNywgYXN1c19oaWRlc19hYzk3X2xwYyk7CkRF
Q0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX1ZJQSwJUENJX0RFVklD
RV9JRF9WSUFfODIzNywgYXN1c19oaWRlc19hYzk3X2xwYyk7CgojaWYgZGVmaW5lZChDT05GSUdf
QVRBKSB8fCBkZWZpbmVkKENPTkZJR19BVEFfTU9EVUxFKQoKLyoKICogSWYgd2UgYXJlIHVzaW5n
IGxpYmF0YSB3ZSBjYW4gZHJpdmUgdGhpcyBjaGlwIHByb3Blcmx5IGJ1dCBtdXN0IGRvIHRoaXMK
ICogZWFybHkgb24gdG8gbWFrZSB0aGUgYWRkaXRpb25hbCBkZXZpY2UgYXBwZWFyIGR1cmluZyB0
aGUgUENJIHNjYW5uaW5nLgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfam1pY3Jvbl9hdGEoc3RydWN0
IHBjaV9kZXYgKnBkZXYpCnsKCXUzMiBjb25mMSwgY29uZjUsIGNsYXNzOwoJdTggaGRyOwoKCS8q
IE9ubHkgcG9rZSBmbiAwICovCglpZiAoUENJX0ZVTkMocGRldi0+ZGV2Zm4pKQoJCXJldHVybjsK
CglwY2lfcmVhZF9jb25maWdfZHdvcmQocGRldiwgMHg0MCwgJmNvbmYxKTsKCXBjaV9yZWFkX2Nv
bmZpZ19kd29yZChwZGV2LCAweDgwLCAmY29uZjUpOwoKCWNvbmYxICY9IH4weDAwQ0ZGMzAyOyAv
KiBDbGVhciBiaXQgMSwgOCwgOSwgMTItMTksIDIyLCAyMyAqLwoJY29uZjUgJj0gfigxIDw8IDI0
KTsgIC8qIENsZWFyIGJpdCAyNCAqLwoKCXN3aXRjaCAocGRldi0+ZGV2aWNlKSB7CgljYXNlIFBD
SV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjA6IC8qIFNBVEEgc2luZ2xlIHBvcnQgKi8KCWNhc2Ug
UENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2MjogLyogU0FUQSBkdWFsIHBvcnRzICovCgljYXNl
IFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjQ6IC8qIFNBVEEgZHVhbCBwb3J0cyAqLwoJCS8q
IFRoZSBjb250cm9sbGVyIHNob3VsZCBiZSBpbiBzaW5nbGUgZnVuY3Rpb24gYWhjaSBtb2RlICov
CgkJY29uZjEgfD0gMHgwMDAyQTEwMDsgLyogU2V0IDgsIDEzLCAxNSwgMTcgKi8KCQlicmVhazsK
CgljYXNlIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjU6CgljYXNlIFBDSV9ERVZJQ0VfSURf
Sk1JQ1JPTl9KTUIzNjY6CgkJLyogUmVkaXJlY3QgSURFIHNlY29uZCBQQVRBIHBvcnQgdG8gdGhl
IHJpZ2h0IHNwb3QgKi8KCQljb25mNSB8PSAoMSA8PCAyNCk7CgkJLyogRmFsbCB0aHJvdWdoICov
CgljYXNlIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjE6CgljYXNlIFBDSV9ERVZJQ0VfSURf
Sk1JQ1JPTl9KTUIzNjM6CgljYXNlIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjk6CgkJLyog
RW5hYmxlIGR1YWwgZnVuY3Rpb24gbW9kZSwgQUhDSSBvbiBmbiAwLCBJREUgZm4xICovCgkJLyog
U2V0IHRoZSBjbGFzcyBjb2RlcyBjb3JyZWN0bHkgYW5kIHRoZW4gZGlyZWN0IElERSAwICovCgkJ
Y29uZjEgfD0gMHgwMEMyQTFCMzsgLyogU2V0IDAsIDEsIDQsIDUsIDcsIDgsIDEzLCAxNSwgMTcs
IDIyLCAyMyAqLwoJCWJyZWFrOwoKCWNhc2UgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2ODoK
CQkvKiBUaGUgY29udHJvbGxlciBzaG91bGQgYmUgaW4gc2luZ2xlIGZ1bmN0aW9uIElERSBtb2Rl
ICovCgkJY29uZjEgfD0gMHgwMEMwMDAwMDsgLyogU2V0IDIyLCAyMyAqLwoJCWJyZWFrOwoJfQoK
CXBjaV93cml0ZV9jb25maWdfZHdvcmQocGRldiwgMHg0MCwgY29uZjEpOwoJcGNpX3dyaXRlX2Nv
bmZpZ19kd29yZChwZGV2LCAweDgwLCBjb25mNSk7CgoJLyogVXBkYXRlIHBkZXYgYWNjb3JkaW5n
bHkgKi8KCXBjaV9yZWFkX2NvbmZpZ19ieXRlKHBkZXYsIFBDSV9IRUFERVJfVFlQRSwgJmhkcik7
CglwZGV2LT5oZHJfdHlwZSA9IGhkciAmIDB4N2Y7CglwZGV2LT5tdWx0aWZ1bmN0aW9uID0gISEo
aGRyICYgMHg4MCk7CgoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKHBkZXYsIFBDSV9DTEFTU19SRVZJ
U0lPTiwgJmNsYXNzKTsKCXBkZXYtPmNsYXNzID0gY2xhc3MgPj4gODsKfQpERUNMQVJFX1BDSV9G
SVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9K
TUIzNjAsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZF
TkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzYxLCBxdWlya19qbWlj
cm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwg
UENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2MiwgcXVpcmtfam1pY3Jvbl9hdGEpOwpERUNMQVJF
X1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1J
Q1JPTl9KTUIzNjMsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFko
UENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzY0LCBxdWly
a19qbWljcm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1J
Q1JPTiwgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2NSwgcXVpcmtfam1pY3Jvbl9hdGEpOwpE
RUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0Vf
SURfSk1JQ1JPTl9KTUIzNjYsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBf
RUFSTFkoUENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzY4
LCBxdWlya19qbWljcm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1Jf
SURfSk1JQ1JPTiwgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2OSwgcXVpcmtfam1pY3Jvbl9h
dGEpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9KTUlDUk9O
LCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzYwLCBxdWlya19qbWljcm9uX2F0YSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJ
Q0VfSURfSk1JQ1JPTl9KTUIzNjEsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklY
VVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgUENJX0RFVklDRV9JRF9KTUlD
Uk9OX0pNQjM2MiwgcXVpcmtfam1pY3Jvbl9hdGEpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVf
RUFSTFkoUENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzYz
LCBxdWlya19qbWljcm9uX2F0YSk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lf
VkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0VfSURfSk1JQ1JPTl9KTUIzNjQsIHF1aXJrX2pt
aWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURf
Sk1JQ1JPTiwgUENJX0RFVklDRV9JRF9KTUlDUk9OX0pNQjM2NSwgcXVpcmtfam1pY3Jvbl9hdGEp
OwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQ
Q0lfREVWSUNFX0lEX0pNSUNST05fSk1CMzY2LCBxdWlya19qbWljcm9uX2F0YSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9ERVZJQ0Vf
SURfSk1JQ1JPTl9KTUIzNjgsIHF1aXJrX2ptaWNyb25fYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBf
UkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgUENJX0RFVklDRV9JRF9KTUlDUk9O
X0pNQjM2OSwgcXVpcmtfam1pY3Jvbl9hdGEpOwoKI2VuZGlmCgpzdGF0aWMgdm9pZCBxdWlya19q
bWljcm9uX2FzeW5jX3N1c3BlbmQoc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKGRldi0+bXVs
dGlmdW5jdGlvbikgewoJCWRldmljZV9kaXNhYmxlX2FzeW5jX3N1c3BlbmQoJmRldi0+ZGV2KTsK
CQlwY2lfaW5mbyhkZXYsICJhc3luYyBzdXNwZW5kIGRpc2FibGVkIHRvIGF2b2lkIG11bHRpLWZ1
bmN0aW9uIHBvd2VyLW9uIG9yZGVyaW5nIGlzc3VlXG4iKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhV
UF9DTEFTU19GSU5BTChQQ0lfVkVORE9SX0lEX0pNSUNST04sIFBDSV9BTllfSUQsIFBDSV9DTEFT
U19TVE9SQUdFX0lERSwgOCwgcXVpcmtfam1pY3Jvbl9hc3luY19zdXNwZW5kKTsKREVDTEFSRV9Q
Q0lfRklYVVBfQ0xBU1NfRklOQUwoUENJX1ZFTkRPUl9JRF9KTUlDUk9OLCBQQ0lfQU5ZX0lELCBQ
Q0lfQ0xBU1NfU1RPUkFHRV9TQVRBX0FIQ0ksIDAsIHF1aXJrX2ptaWNyb25fYXN5bmNfc3VzcGVu
ZCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwgMHgyMzYy
LCBxdWlya19qbWljcm9uX2FzeW5jX3N1c3BlbmQpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQ
Q0lfVkVORE9SX0lEX0pNSUNST04sIDB4MjM2ZiwgcXVpcmtfam1pY3Jvbl9hc3luY19zdXNwZW5k
KTsKCiNpZmRlZiBDT05GSUdfWDg2X0lPX0FQSUMKc3RhdGljIHZvaWQgcXVpcmtfYWxkZXJfaW9h
cGljKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7CglpbnQgaTsKCglpZiAoKHBkZXYtPmNsYXNzID4+
IDgpICE9IDB4ZmYwMCkKCQlyZXR1cm47CgoJLyoKCSAqIFRoZSBmaXJzdCBCQVIgaXMgdGhlIGxv
Y2F0aW9uIG9mIHRoZSBJTy1BUElDLi4uIHdlIG11c3QKCSAqIG5vdCB0b3VjaCB0aGlzIChhbmQg
aXQncyBhbHJlYWR5IGNvdmVyZWQgYnkgdGhlIGZpeG1hcCksIHNvCgkgKiBmb3JjaWJseSBpbnNl
cnQgaXQgaW50byB0aGUgcmVzb3VyY2UgdHJlZS4KCSAqLwoJaWYgKHBjaV9yZXNvdXJjZV9zdGFy
dChwZGV2LCAwKSAmJiBwY2lfcmVzb3VyY2VfbGVuKHBkZXYsIDApKQoJCWluc2VydF9yZXNvdXJj
ZSgmaW9tZW1fcmVzb3VyY2UsICZwZGV2LT5yZXNvdXJjZVswXSk7CgoJLyoKCSAqIFRoZSBuZXh0
IGZpdmUgQkFScyBhbGwgc2VlbSB0byBiZSBydWJiaXNoLCBzbyBqdXN0IGNsZWFuCgkgKiB0aGVt
IG91dC4KCSAqLwoJZm9yIChpID0gMTsgaSA8IDY7IGkrKykKCQltZW1zZXQoJnBkZXYtPnJlc291
cmNlW2ldLCAwLCBzaXplb2YocGRldi0+cmVzb3VyY2VbaV0pKTsKfQpERUNMQVJFX1BDSV9GSVhV
UF9IRUFERVIoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9FRVNTQywJ
cXVpcmtfYWxkZXJfaW9hcGljKTsKI2VuZGlmCgpzdGF0aWMgdm9pZCBxdWlya19wY2llX21jaChz
dHJ1Y3QgcGNpX2RldiAqcGRldikKewoJcGRldi0+bm9fbXNpID0gMTsKfQpERUNMQVJFX1BDSV9G
SVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0U3NTIw
X01DSCwJcXVpcmtfcGNpZV9tY2gpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9S
X0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX0U3MzIwX01DSCwJcXVpcmtfcGNpZV9tY2gp
OwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNF
X0lEX0lOVEVMX0U3NTI1X01DSCwJcXVpcmtfcGNpZV9tY2gpOwoKREVDTEFSRV9QQ0lfRklYVVBf
Q0xBU1NfRklOQUwoUENJX1ZFTkRPUl9JRF9IVUFXRUksIDB4MTYxMCwgUENJX0NMQVNTX0JSSURH
RV9QQ0ksIDgsIHF1aXJrX3BjaWVfbWNoKTsKCi8qCiAqIEl0J3MgcG9zc2libGUgZm9yIHRoZSBN
U0kgdG8gZ2V0IGNvcnJ1cHRlZCBpZiBTSFBDIGFuZCBBQ1BJIGFyZSB1c2VkCiAqIHRvZ2V0aGVy
IG9uIGNlcnRhaW4gUFhILWJhc2VkIHN5c3RlbXMuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19wY2ll
X3B4aChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPm5vX21zaSA9IDE7CglwY2lfd2Fybihk
ZXYsICJQWEggcXVpcmsgZGV0ZWN0ZWQ7IFNIUEMgZGV2aWNlIE1TSSBkaXNhYmxlZFxuIik7Cn0K
REVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9J
RF9JTlRFTF9QWEhEXzAsCXF1aXJrX3BjaWVfcHhoKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFko
UENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklDRV9JRF9JTlRFTF9QWEhEXzEsCXF1aXJrX3Bj
aWVfcHhoKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJ
X0RFVklDRV9JRF9JTlRFTF9QWEhfMCwJcXVpcmtfcGNpZV9weGgpOwpERUNMQVJFX1BDSV9GSVhV
UF9FQVJMWShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNFX0lEX0lOVEVMX1BYSF8xLAlx
dWlya19wY2llX3B4aCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5U
RUwsCVBDSV9ERVZJQ0VfSURfSU5URUxfUFhIViwJcXVpcmtfcGNpZV9weGgpOwoKLyoKICogU29t
ZSBJbnRlbCBQQ0kgRXhwcmVzcyBjaGlwc2V0cyBoYXZlIHRyb3VibGUgd2l0aCBkb3duc3RyZWFt
IGRldmljZQogKiBwb3dlciBtYW5hZ2VtZW50LgogKi8Kc3RhdGljIHZvaWQgcXVpcmtfaW50ZWxf
cGNpZV9wbShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglwY2lfcG1fZDNfZGVsYXkgPSAxMjA7Cglk
ZXYtPm5vX2QxZDIgPSAxOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURf
SU5URUwsCTB4MjVlMiwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVlMywgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVlNCwgcXVpcmtf
aW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5U
RUwsCTB4MjVlNSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVlNiwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVlNywgcXVpcmtfaW50
ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUws
CTB4MjVmNywgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsCTB4MjVmOCwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjVmOSwgcXVpcmtfaW50ZWxf
cGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4
MjVmYSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfSU5URUwsCTB4MjYwMSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwMiwgcXVpcmtfaW50ZWxfcGNp
ZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYw
MywgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5E
T1JfSURfSU5URUwsCTB4MjYwNCwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwNSwgcXVpcmtfaW50ZWxfcGNpZV9w
bSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwNiwg
cXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsCTB4MjYwNywgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwOCwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwOSwgcXVp
cmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURf
SU5URUwsCTB4MjYwYSwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCTB4MjYwYiwgcXVpcmtfaW50ZWxfcGNpZV9wbSk7Cgpz
dGF0aWMgdm9pZCBxdWlya19yYWRlb25fcG0oc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKGRl
di0+c3Vic3lzdGVtX3ZlbmRvciA9PSBQQ0lfVkVORE9SX0lEX0FQUExFICYmCgkgICAgZGV2LT5z
dWJzeXN0ZW1fZGV2aWNlID09IDB4MDBlMikgewoJCWlmIChkZXYtPmQzX2RlbGF5IDwgMjApIHsK
CQkJZGV2LT5kM19kZWxheSA9IDIwOwoJCQlwY2lfaW5mbyhkZXYsICJleHRlbmRpbmcgZGVsYXkg
YWZ0ZXIgcG93ZXItb24gZnJvbSBEMyB0byAlZCBtc2VjXG4iLAoJCQkJIGRldi0+ZDNfZGVsYXkp
OwoJCX0KCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUSSwgMHg2
NzQxLCBxdWlya19yYWRlb25fcG0pOwoKI2lmZGVmIENPTkZJR19YODZfSU9fQVBJQwpzdGF0aWMg
aW50IGRtaV9kaXNhYmxlX2lvYXBpY3Jlcm91dGUoY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1faWQg
KmQpCnsKCW5vaW9hcGljcmVyb3V0ZSA9IDE7Cglwcl9pbmZvKCIlcyBkZXRlY3RlZDogZGlzYWJs
ZSBib290IGludGVycnVwdCByZXJvdXRlXG4iLCBkLT5pZGVudCk7CgoJcmV0dXJuIDA7Cn0KCnN0
YXRpYyBjb25zdCBzdHJ1Y3QgZG1pX3N5c3RlbV9pZCBib290X2ludGVycnVwdF9kbWlfdGFibGVb
XSA9IHsKCS8qCgkgKiBTeXN0ZW1zIHRvIGV4Y2x1ZGUgZnJvbSBib290IGludGVycnVwdCByZXJv
dXRlIHF1aXJrcwoJICovCgl7CgkJLmNhbGxiYWNrID0gZG1pX2Rpc2FibGVfaW9hcGljcmVyb3V0
ZSwKCQkuaWRlbnQgPSAiQVNVU1RlayBDb21wdXRlciBJTkMuIE0yTi1MUiIsCgkJLm1hdGNoZXMg
PSB7CgkJCURNSV9NQVRDSChETUlfU1lTX1ZFTkRPUiwgIkFTVVNUZWsgQ29tcHV0ZXIgSU5DLiIp
LAoJCQlETUlfTUFUQ0goRE1JX1BST0RVQ1RfTkFNRSwgIk0yTi1MUiIpLAoJCX0sCgl9LAoJe30K
fTsKCi8qCiAqIEJvb3QgaW50ZXJydXB0cyBvbiBzb21lIGNoaXBzZXRzIGNhbm5vdCBiZSB0dXJu
ZWQgb2ZmLiBGb3IgdGhlc2UgY2hpcHNldHMsCiAqIHJlbWFwIHRoZSBvcmlnaW5hbCBpbnRlcnJ1
cHQgaW4gdGhlIExpbnV4IGtlcm5lbCB0byB0aGUgYm9vdCBpbnRlcnJ1cHQsIHNvCiAqIHRoYXQg
YSBQQ0kgZGV2aWNlJ3MgaW50ZXJydXB0IGhhbmRsZXIgaXMgaW5zdGFsbGVkIG9uIHRoZSBib290
IGludGVycnVwdAogKiBsaW5lIGluc3RlYWQuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19yZXJvdXRl
X3RvX2Jvb3RfaW50ZXJydXB0c19pbnRlbChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkbWlfY2hl
Y2tfc3lzdGVtKGJvb3RfaW50ZXJydXB0X2RtaV90YWJsZSk7CglpZiAobm9pb2FwaWNxdWlyayB8
fCBub2lvYXBpY3Jlcm91dGUpCgkJcmV0dXJuOwoKCWRldi0+aXJxX3Jlcm91dGVfdmFyaWFudCA9
IElOVEVMX0lSUV9SRVJPVVRFX1ZBUklBTlQ7CglwY2lfaW5mbyhkZXYsICJyZXJvdXRpbmcgaW50
ZXJydXB0cyBmb3IgWyUwNHg6JTA0eF1cbiIsCgkJIGRldi0+dmVuZG9yLCBkZXYtPmRldmljZSk7
Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklD
RV9JRF9JTlRFTF84MDMzM18wLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRl
bCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJ
Q0VfSURfSU5URUxfODAzMzNfMSwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50
ZWwpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVW
SUNFX0lEX0lOVEVMX0VTQjJfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50
ZWwpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVW
SUNFX0lEX0lOVEVMX1BYSF8wLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRl
bCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJ
Q0VfSURfSU5URUxfUFhIXzEsCXF1aXJrX3Jlcm91dGVfdG9fYm9vdF9pbnRlcnJ1cHRzX2ludGVs
KTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RFVklD
RV9JRF9JTlRFTF9QWEhWLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19pbnRlbCk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJQ0Vf
SURfSU5URUxfODAzMzJfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50ZWwp
OwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lfREVWSUNF
X0lEX0lOVEVMXzgwMzMyXzEsCXF1aXJrX3Jlcm91dGVfdG9fYm9vdF9pbnRlcnJ1cHRzX2ludGVs
KTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9WRU5ET1JfSURfSU5URUwsCVBDSV9ERVZJ
Q0VfSURfSU5URUxfODAzMzNfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNfaW50
ZWwpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJX0RF
VklDRV9JRF9JTlRFTF84MDMzM18xLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19p
bnRlbCk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lf
REVWSUNFX0lEX0lOVEVMX0VTQjJfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNf
aW50ZWwpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJ
X0RFVklDRV9JRF9JTlRFTF9QWEhfMCwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNf
aW50ZWwpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJ
X0RFVklDRV9JRF9JTlRFTF9QWEhfMSwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVwdHNf
aW50ZWwpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9JTlRFTCwJUENJ
X0RFVklDRV9JRF9JTlRFTF9QWEhWLAlxdWlya19yZXJvdXRlX3RvX2Jvb3RfaW50ZXJydXB0c19p
bnRlbCk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9SX0lEX0lOVEVMLAlQQ0lf
REVWSUNFX0lEX0lOVEVMXzgwMzMyXzAsCXF1aXJrX3Jlcm91dGVfdG9fYm9vdF9pbnRlcnJ1cHRz
X2ludGVsKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9WRU5ET1JfSURfSU5URUwsCVBD
SV9ERVZJQ0VfSURfSU5URUxfODAzMzJfMSwJcXVpcmtfcmVyb3V0ZV90b19ib290X2ludGVycnVw
dHNfaW50ZWwpOwoKLyoKICogT24gc29tZSBjaGlwc2V0cyB3ZSBjYW4gZGlzYWJsZSB0aGUgZ2Vu
ZXJhdGlvbiBvZiBsZWdhY3kgSU5UeCBib290CiAqIGludGVycnVwdHMuCiAqLwoKLyoKICogSU8t
QVBJQzEgb24gNjMwMEVTQiBnZW5lcmF0ZXMgYm9vdCBpbnRlcnJ1cHRzLCBzZWUgSW50ZWwgb3Jk
ZXIgbm8KICogMzAwNjQxLTAwNFVTLCBzZWN0aW9uIDUuNy4zLgogKi8KI2RlZmluZSBJTlRFTF82
MzAwX0lPQVBJQ19BQkFSCQkweDQwCiNkZWZpbmUgSU5URUxfNjMwMF9ESVNBQkxFX0JPT1RfSVJR
CSgxPDwxNCkKCnN0YXRpYyB2b2lkIHF1aXJrX2Rpc2FibGVfaW50ZWxfYm9vdF9pbnRlcnJ1cHQo
c3RydWN0IHBjaV9kZXYgKmRldikKewoJdTE2IHBjaV9jb25maWdfd29yZDsKCglpZiAobm9pb2Fw
aWNxdWlyaykKCQlyZXR1cm47CgoJcGNpX3JlYWRfY29uZmlnX3dvcmQoZGV2LCBJTlRFTF82MzAw
X0lPQVBJQ19BQkFSLCAmcGNpX2NvbmZpZ193b3JkKTsKCXBjaV9jb25maWdfd29yZCB8PSBJTlRF
TF82MzAwX0RJU0FCTEVfQk9PVF9JUlE7CglwY2lfd3JpdGVfY29uZmlnX3dvcmQoZGV2LCBJTlRF
TF82MzAwX0lPQVBJQ19BQkFSLCBwY2lfY29uZmlnX3dvcmQpOwoKCXBjaV9pbmZvKGRldiwgImRp
c2FibGVkIGJvb3QgaW50ZXJydXB0cyBvbiBkZXZpY2UgWyUwNHg6JTA0eF1cbiIsCgkJIGRldi0+
dmVuZG9yLCBkZXYtPmRldmljZSk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgICBQQ0lfREVWSUNFX0lEX0lOVEVMX0VTQl8xMCwJcXVpcmtfZGlzYWJsZV9p
bnRlbF9ib290X2ludGVycnVwdCk7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRShQQ0lfVkVORE9S
X0lEX0lOVEVMLCAgIFBDSV9ERVZJQ0VfSURfSU5URUxfRVNCXzEwLAlxdWlya19kaXNhYmxlX2lu
dGVsX2Jvb3RfaW50ZXJydXB0KTsKCi8qIERpc2FibGUgYm9vdCBpbnRlcnJ1cHRzIG9uIEhULTEw
MDAgKi8KI2RlZmluZSBCQ19IVDEwMDBfRkVBVFVSRV9SRUcJCTB4NjQKI2RlZmluZSBCQ19IVDEw
MDBfUElDX1JFR1NfRU5BQkxFCSgxPDwwKQojZGVmaW5lIEJDX0hUMTAwMF9NQVBfSURYCQkweEMw
MAojZGVmaW5lIEJDX0hUMTAwMF9NQVBfREFUQQkJMHhDMDEKCnN0YXRpYyB2b2lkIHF1aXJrX2Rp
c2FibGVfYnJvYWRjb21fYm9vdF9pbnRlcnJ1cHQoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTMy
IHBjaV9jb25maWdfZHdvcmQ7Cgl1OCBpcnE7CgoJaWYgKG5vaW9hcGljcXVpcmspCgkJcmV0dXJu
OwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIEJDX0hUMTAwMF9GRUFUVVJFX1JFRywgJnBj
aV9jb25maWdfZHdvcmQpOwoJcGNpX3dyaXRlX2NvbmZpZ19kd29yZChkZXYsIEJDX0hUMTAwMF9G
RUFUVVJFX1JFRywgcGNpX2NvbmZpZ19kd29yZCB8CgkJCUJDX0hUMTAwMF9QSUNfUkVHU19FTkFC
TEUpOwoKCWZvciAoaXJxID0gMHgxMDsgaXJxIDwgMHgxMCArIDMyOyBpcnErKykgewoJCW91dGIo
aXJxLCBCQ19IVDEwMDBfTUFQX0lEWCk7CgkJb3V0YigweDAwLCBCQ19IVDEwMDBfTUFQX0RBVEEp
OwoJfQoKCXBjaV93cml0ZV9jb25maWdfZHdvcmQoZGV2LCBCQ19IVDEwMDBfRkVBVFVSRV9SRUcs
IHBjaV9jb25maWdfZHdvcmQpOwoKCXBjaV9pbmZvKGRldiwgImRpc2FibGVkIGJvb3QgaW50ZXJy
dXB0cyBvbiBkZXZpY2UgWyUwNHg6JTA0eF1cbiIsCgkJIGRldi0+dmVuZG9yLCBkZXYtPmRldmlj
ZSk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywg
ICBQQ0lfREVWSUNFX0lEX1NFUlZFUldPUktTX0hUMTAwMFNCLAlxdWlya19kaXNhYmxlX2Jyb2Fk
Y29tX2Jvb3RfaW50ZXJydXB0KTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FKFBDSV9WRU5ET1Jf
SURfU0VSVkVSV09SS1MsICAgUENJX0RFVklDRV9JRF9TRVJWRVJXT1JLU19IVDEwMDBTQiwJcXVp
cmtfZGlzYWJsZV9icm9hZGNvbV9ib290X2ludGVycnVwdCk7CgovKiBEaXNhYmxlIGJvb3QgaW50
ZXJydXB0cyBvbiBBTUQgYW5kIEFUSSBjaGlwc2V0cyAqLwoKLyoKICogTk9JT0FNT0RFIG5lZWRz
IHRvIGJlIGRpc2FibGVkIHRvIGRpc2FibGUgImJvb3QgaW50ZXJydXB0cyIuIEZvciBBTUQgODEz
MQogKiByZXYuIEEwIGFuZCBCMCwgTk9JT0FNT0RFIG5lZWRzIHRvIGJlIGRpc2FibGVkIGFueXdh
eSB0byBmaXggSU8tQVBJQyBtb2RlCiAqIChkdWUgdG8gYW4gZXJyYXR1bSkuCiAqLwojZGVmaW5l
IEFNRF84MTNYX01JU0MJCQkweDQwCiNkZWZpbmUgQU1EXzgxM1hfTk9JT0FNT0RFCQkoMTw8MCkK
I2RlZmluZSBBTURfODEzWF9SRVZfQjEJCQkweDEyCiNkZWZpbmUgQU1EXzgxM1hfUkVWX0IyCQkJ
MHgxMwoKc3RhdGljIHZvaWQgcXVpcmtfZGlzYWJsZV9hbWRfODEzeF9ib290X2ludGVycnVwdChz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1MzIgcGNpX2NvbmZpZ19kd29yZDsKCglpZiAobm9pb2Fw
aWNxdWlyaykKCQlyZXR1cm47CglpZiAoKGRldi0+cmV2aXNpb24gPT0gQU1EXzgxM1hfUkVWX0Ix
KSB8fAoJICAgIChkZXYtPnJldmlzaW9uID09IEFNRF84MTNYX1JFVl9CMikpCgkJcmV0dXJuOwoK
CXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIEFNRF84MTNYX01JU0MsICZwY2lfY29uZmlnX2R3
b3JkKTsKCXBjaV9jb25maWdfZHdvcmQgJj0gfkFNRF84MTNYX05PSU9BTU9ERTsKCXBjaV93cml0
ZV9jb25maWdfZHdvcmQoZGV2LCBBTURfODEzWF9NSVNDLCBwY2lfY29uZmlnX2R3b3JkKTsKCglw
Y2lfaW5mbyhkZXYsICJkaXNhYmxlZCBib290IGludGVycnVwdHMgb24gZGV2aWNlIFslMDR4OiUw
NHhdXG4iLAoJCSBkZXYtPnZlbmRvciwgZGV2LT5kZXZpY2UpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1ELAlQQ0lfREVWSUNFX0lEX0FNRF84MTMxX0JSSURHRSwJ
cXVpcmtfZGlzYWJsZV9hbWRfODEzeF9ib290X2ludGVycnVwdCk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X1JFU1VNRShQQ0lfVkVORE9SX0lEX0FNRCwJUENJX0RFVklDRV9JRF9BTURfODEzMV9CUklER0Us
CXF1aXJrX2Rpc2FibGVfYW1kXzgxM3hfYm9vdF9pbnRlcnJ1cHQpOwpERUNMQVJFX1BDSV9GSVhV
UF9GSU5BTChQQ0lfVkVORE9SX0lEX0FNRCwJUENJX0RFVklDRV9JRF9BTURfODEzMl9CUklER0Us
CXF1aXJrX2Rpc2FibGVfYW1kXzgxM3hfYm9vdF9pbnRlcnJ1cHQpOwpERUNMQVJFX1BDSV9GSVhV
UF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9BTUQsCVBDSV9ERVZJQ0VfSURfQU1EXzgxMzJfQlJJREdF
LAlxdWlya19kaXNhYmxlX2FtZF84MTN4X2Jvb3RfaW50ZXJydXB0KTsKCiNkZWZpbmUgQU1EXzgx
MTFfUENJX0lSUV9ST1VUSU5HCTB4NTYKCnN0YXRpYyB2b2lkIHF1aXJrX2Rpc2FibGVfYW1kXzgx
MTFfYm9vdF9pbnRlcnJ1cHQoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdTE2IHBjaV9jb25maWdf
d29yZDsKCglpZiAobm9pb2FwaWNxdWlyaykKCQlyZXR1cm47CgoJcGNpX3JlYWRfY29uZmlnX3dv
cmQoZGV2LCBBTURfODExMV9QQ0lfSVJRX1JPVVRJTkcsICZwY2lfY29uZmlnX3dvcmQpOwoJaWYg
KCFwY2lfY29uZmlnX3dvcmQpIHsKCQlwY2lfaW5mbyhkZXYsICJib290IGludGVycnVwdHMgb24g
ZGV2aWNlIFslMDR4OiUwNHhdIGFscmVhZHkgZGlzYWJsZWRcbiIsCgkJCSBkZXYtPnZlbmRvciwg
ZGV2LT5kZXZpY2UpOwoJCXJldHVybjsKCX0KCXBjaV93cml0ZV9jb25maWdfd29yZChkZXYsIEFN
RF84MTExX1BDSV9JUlFfUk9VVElORywgMCk7CglwY2lfaW5mbyhkZXYsICJkaXNhYmxlZCBib290
IGludGVycnVwdHMgb24gZGV2aWNlIFslMDR4OiUwNHhdXG4iLAoJCSBkZXYtPnZlbmRvciwgZGV2
LT5kZXZpY2UpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1ELCAg
IFBDSV9ERVZJQ0VfSURfQU1EXzgxMTFfU01CVVMsCXF1aXJrX2Rpc2FibGVfYW1kXzgxMTFfYm9v
dF9pbnRlcnJ1cHQpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUUoUENJX1ZFTkRPUl9JRF9BTUQs
ICAgUENJX0RFVklDRV9JRF9BTURfODExMV9TTUJVUywJcXVpcmtfZGlzYWJsZV9hbWRfODExMV9i
b290X2ludGVycnVwdCk7CiNlbmRpZiAvKiBDT05GSUdfWDg2X0lPX0FQSUMgKi8KCi8qCiAqIFRv
c2hpYmEgVEM4NkMwMDEgSURFIGNvbnRyb2xsZXIgcmVwb3J0cyB0aGUgc3RhbmRhcmQgOC1ieXRl
IEJBUjAgc2l6ZQogKiBidXQgdGhlIFBJTyB0cmFuc2ZlcnMgd29uJ3Qgd29yayBpZiBCQVIwIGZh
bGxzIGF0IHRoZSBvZGQgOCBieXRlcy4KICogUmUtYWxsb2NhdGUgdGhlIHJlZ2lvbiBpZiBuZWVk
ZWQuLi4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3RjODZjMDAxX2lkZShzdHJ1Y3QgcGNpX2RldiAq
ZGV2KQp7CglzdHJ1Y3QgcmVzb3VyY2UgKnIgPSAmZGV2LT5yZXNvdXJjZVswXTsKCglpZiAoci0+
c3RhcnQgJiAweDgpIHsKCQlyLT5mbGFncyB8PSBJT1JFU09VUkNFX1VOU0VUOwoJCXItPnN0YXJ0
ID0gMDsKCQlyLT5lbmQgPSAweGY7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9W
RU5ET1JfSURfVE9TSElCQV8yLAoJCQkgUENJX0RFVklDRV9JRF9UT1NISUJBX1RDODZDMDAxX0lE
RSwKCQkJIHF1aXJrX3RjODZjMDAxX2lkZSk7CgovKgogKiBQTFggUENJIDkwNTAgUENJIFRhcmdl
dCBicmlkZ2UgY29udHJvbGxlciBoYXMgYW4gZXJyYXR1bSB0aGF0IHByZXZlbnRzIHRoZQogKiBs
b2NhbCBjb25maWd1cmF0aW9uIHJlZ2lzdGVycyBhY2Nlc3NpYmxlIHZpYSBCQVIwIChtZW1vcnkp
IG9yIEJBUjEgKGkvbykKICogYmVpbmcgcmVhZCBjb3JyZWN0bHkgaWYgYml0IDcgb2YgdGhlIGJh
c2UgYWRkcmVzcyBpcyBzZXQuCiAqIFRoZSBCQVIwIG9yIEJBUjEgcmVnaW9uIG1heSBiZSBkaXNh
YmxlZCAoc2l6ZSAwKSBvciBlbmFibGVkIChzaXplIDEyOCkuCiAqIFJlLWFsbG9jYXRlIHRoZSBy
ZWdpb25zIHRvIGEgMjU2LWJ5dGUgYm91bmRhcnkgaWYgbmVjZXNzYXJ5LgogKi8Kc3RhdGljIHZv
aWQgcXVpcmtfcGx4X3BjaTkwNTAoc3RydWN0IHBjaV9kZXYgKmRldikKewoJdW5zaWduZWQgaW50
IGJhcjsKCgkvKiBGaXhlZCBpbiByZXZpc2lvbiAyIChQQ0kgOTA1MikuICovCglpZiAoZGV2LT5y
ZXZpc2lvbiA+PSAyKQoJCXJldHVybjsKCWZvciAoYmFyID0gMDsgYmFyIDw9IDE7IGJhcisrKQoJ
CWlmIChwY2lfcmVzb3VyY2VfbGVuKGRldiwgYmFyKSA9PSAweDgwICYmCgkJICAgIChwY2lfcmVz
b3VyY2Vfc3RhcnQoZGV2LCBiYXIpICYgMHg4MCkpIHsKCQkJc3RydWN0IHJlc291cmNlICpyID0g
JmRldi0+cmVzb3VyY2VbYmFyXTsKCQkJcGNpX2luZm8oZGV2LCAiUmUtYWxsb2NhdGluZyBQTFgg
UENJIDkwNTAgQkFSICV1IHRvIGxlbmd0aCAyNTYgdG8gYXZvaWQgYml0IDcgYnVnXG4iLAoJCQkJ
IGJhcik7CgkJCXItPmZsYWdzIHw9IElPUkVTT1VSQ0VfVU5TRVQ7CgkJCXItPnN0YXJ0ID0gMDsK
CQkJci0+ZW5kID0gMHhmZjsKCQl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5E
T1JfSURfUExYLCBQQ0lfREVWSUNFX0lEX1BMWF85MDUwLAoJCQkgcXVpcmtfcGx4X3BjaTkwNTAp
OwovKgogKiBUaGUgZm9sbG93aW5nIE1laWxoYXVzICh2ZW5kb3IgSUQgMHgxNDAyKSBkZXZpY2Ug
SURzIChhbW9uZ3N0IG90aGVycykKICogbWF5IGJlIHVzaW5nIHRoZSBQTFggUENJIDkwNTA6IDB4
MDYzMCwgMHgwOTQwLCAweDA5NTAsIDB4MDk2MCwgMHgxMDBiLAogKiAweDE0MDAsIDB4MTQwYSwg
MHgxNDBiLCAweDE0ZTAsIDB4MTRlYSwgMHgxNGViLCAweDE2MDQsIDB4MTYwOCwgMHgxNjBjLAog
KiAweDE2OGYsIDB4MjAwMCwgMHgyNjAwLCAweDMwMDAsIDB4ODEwYSwgMHg4MTBiLgogKgogKiBD
dXJyZW50bHksIGRldmljZSBJRHMgMHgyMDAwIGFuZCAweDI2MDAgYXJlIHVzZWQgYnkgdGhlIENv
bWVkaSAibWVfZGFxIgogKiBkcml2ZXIuCiAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoMHgx
NDAyLCAweDIwMDAsIHF1aXJrX3BseF9wY2k5MDUwKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVS
KDB4MTQwMiwgMHgyNjAwLCBxdWlya19wbHhfcGNpOTA1MCk7CgpzdGF0aWMgdm9pZCBxdWlya19u
ZXRtb3Moc3RydWN0IHBjaV9kZXYgKmRldikKewoJdW5zaWduZWQgaW50IG51bV9wYXJhbGxlbCA9
IChkZXYtPnN1YnN5c3RlbV9kZXZpY2UgJiAweGYwKSA+PiA0OwoJdW5zaWduZWQgaW50IG51bV9z
ZXJpYWwgPSBkZXYtPnN1YnN5c3RlbV9kZXZpY2UgJiAweGY7CgoJLyoKCSAqIFRoZXNlIE5ldG1v
cyBwYXJ0cyBhcmUgbXVsdGlwb3J0IHNlcmlhbCBkZXZpY2VzIHdpdGggb3B0aW9uYWwKCSAqIHBh
cmFsbGVsIHBvcnRzLiAgRXZlbiB3aGVuIHBhcmFsbGVsIHBvcnRzIGFyZSBwcmVzZW50LCB0aGV5
CgkgKiBhcmUgaWRlbnRpZmllZCBhcyBjbGFzcyBTRVJJQUwsIHdoaWNoIG1lYW5zIHRoZSBzZXJp
YWwgZHJpdmVyCgkgKiB3aWxsIGNsYWltIHRoZW0uICBUbyBwcmV2ZW50IHRoaXMsIG1hcmsgdGhl
bSBhcyBjbGFzcyBPVEhFUi4KCSAqIFRoZXNlIGNvbWJvIGRldmljZXMgc2hvdWxkIGJlIGNsYWlt
ZWQgYnkgcGFycG9ydF9zZXJpYWwuCgkgKgoJICogVGhlIHN1YmRldmljZSBJRCBpcyBvZiB0aGUg
Zm9ybSAweDAwUFMsIHdoZXJlIDxQPiBpcyB0aGUgbnVtYmVyCgkgKiBvZiBwYXJhbGxlbCBwb3J0
cyBhbmQgPFM+IGlzIHRoZSBudW1iZXIgb2Ygc2VyaWFsIHBvcnRzLgoJICovCglzd2l0Y2ggKGRl
di0+ZGV2aWNlKSB7CgljYXNlIFBDSV9ERVZJQ0VfSURfTkVUTU9TXzk4MzU6CgkJLyogV2VsbCwg
dGhpcyBydWxlIGRvZXNuJ3QgaG9sZCBmb3IgdGhlIGZvbGxvd2luZyA5ODM1IGRldmljZSAqLwoJ
CWlmIChkZXYtPnN1YnN5c3RlbV92ZW5kb3IgPT0gUENJX1ZFTkRPUl9JRF9JQk0gJiYKCQkJCWRl
di0+c3Vic3lzdGVtX2RldmljZSA9PSAweDAyOTkpCgkJCXJldHVybjsKCQkvKiBlbHNlOiBmYWxs
IHRocm91Z2ggKi8KCWNhc2UgUENJX0RFVklDRV9JRF9ORVRNT1NfOTczNToKCWNhc2UgUENJX0RF
VklDRV9JRF9ORVRNT1NfOTc0NToKCWNhc2UgUENJX0RFVklDRV9JRF9ORVRNT1NfOTg0NToKCWNh
c2UgUENJX0RFVklDRV9JRF9ORVRNT1NfOTg1NToKCQlpZiAobnVtX3BhcmFsbGVsKSB7CgkJCXBj
aV9pbmZvKGRldiwgIk5ldG1vcyAlMDR4ICgldSBwYXJhbGxlbCwgJXUgc2VyaWFsKTsgY2hhbmdp
bmcgY2xhc3MgU0VSSUFMIHRvIE9USEVSICh1c2UgcGFycG9ydF9zZXJpYWwpXG4iLAoJCQkJZGV2
LT5kZXZpY2UsIG51bV9wYXJhbGxlbCwgbnVtX3NlcmlhbCk7CgkJCWRldi0+Y2xhc3MgPSAoUENJ
X0NMQVNTX0NPTU1VTklDQVRJT05fT1RIRVIgPDwgOCkgfAoJCQkgICAgKGRldi0+Y2xhc3MgJiAw
eGZmKTsKCQl9Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfSEVBREVSKFBDSV9WRU5ET1Jf
SURfTkVUTU9TLCBQQ0lfQU5ZX0lELAoJCQkgUENJX0NMQVNTX0NPTU1VTklDQVRJT05fU0VSSUFM
LCA4LCBxdWlya19uZXRtb3MpOwoKc3RhdGljIHZvaWQgcXVpcmtfZTEwMF9pbnRlcnJ1cHQoc3Ry
dWN0IHBjaV9kZXYgKmRldikKewoJdTE2IGNvbW1hbmQsIHBtY3NyOwoJdTggX19pb21lbSAqY3Ny
OwoJdTggY21kX2hpOwoKCXN3aXRjaCAoZGV2LT5kZXZpY2UpIHsKCS8qIFBDSSBJRHMgdGFrZW4g
ZnJvbSBkcml2ZXJzL25ldC9lMTAwLmMgKi8KCWNhc2UgMHgxMDI5OgoJY2FzZSAweDEwMzAgLi4u
IDB4MTAzNDoKCWNhc2UgMHgxMDM4IC4uLiAweDEwM0U6CgljYXNlIDB4MTA1MCAuLi4gMHgxMDU3
OgoJY2FzZSAweDEwNTk6CgljYXNlIDB4MTA2NCAuLi4gMHgxMDZCOgoJY2FzZSAweDEwOTEgLi4u
IDB4MTA5NToKCWNhc2UgMHgxMjA5OgoJY2FzZSAweDEyMjk6CgljYXNlIDB4MjQ0OToKCWNhc2Ug
MHgyNDU5OgoJY2FzZSAweDI0NUQ6CgljYXNlIDB4MjdEQzoKCQlicmVhazsKCWRlZmF1bHQ6CgkJ
cmV0dXJuOwoJfQoKCS8qCgkgKiBTb21lIGZpcm13YXJlIGhhbmRzIG9mZiB0aGUgZTEwMCB3aXRo
IGludGVycnVwdHMgZW5hYmxlZCwKCSAqIHdoaWNoIGNhbiBjYXVzZSBhIGZsb29kIG9mIGludGVy
cnVwdHMgaWYgcGFja2V0cyBhcmUKCSAqIHJlY2VpdmVkIGJlZm9yZSB0aGUgZHJpdmVyIGF0dGFj
aGVzIHRvIHRoZSBkZXZpY2UuICBTbwoJICogZGlzYWJsZSBhbGwgZTEwMCBpbnRlcnJ1cHRzIGhl
cmUuICBUaGUgZHJpdmVyIHdpbGwKCSAqIHJlLWVuYWJsZSB0aGVtIHdoZW4gaXQncyByZWFkeS4K
CSAqLwoJcGNpX3JlYWRfY29uZmlnX3dvcmQoZGV2LCBQQ0lfQ09NTUFORCwgJmNvbW1hbmQpOwoK
CWlmICghKGNvbW1hbmQgJiBQQ0lfQ09NTUFORF9NRU1PUlkpIHx8ICFwY2lfcmVzb3VyY2Vfc3Rh
cnQoZGV2LCAwKSkKCQlyZXR1cm47CgoJLyoKCSAqIENoZWNrIHRoYXQgdGhlIGRldmljZSBpcyBp
biB0aGUgRDAgcG93ZXIgc3RhdGUuIElmIGl0J3Mgbm90LAoJICogdGhlcmUgaXMgbm8gcG9pbnQg
dG8gbG9vayBhbnkgZnVydGhlci4KCSAqLwoJaWYgKGRldi0+cG1fY2FwKSB7CgkJcGNpX3JlYWRf
Y29uZmlnX3dvcmQoZGV2LCBkZXYtPnBtX2NhcCArIFBDSV9QTV9DVFJMLCAmcG1jc3IpOwoJCWlm
ICgocG1jc3IgJiBQQ0lfUE1fQ1RSTF9TVEFURV9NQVNLKSAhPSBQQ0lfRDApCgkJCXJldHVybjsK
CX0KCgkvKiBDb252ZXJ0IGZyb20gUENJIGJ1cyB0byByZXNvdXJjZSBzcGFjZS4gICovCgljc3Ig
PSBpb3JlbWFwKHBjaV9yZXNvdXJjZV9zdGFydChkZXYsIDApLCA4KTsKCWlmICghY3NyKSB7CgkJ
cGNpX3dhcm4oZGV2LCAiQ2FuJ3QgbWFwIGUxMDAgcmVnaXN0ZXJzXG4iKTsKCQlyZXR1cm47Cgl9
CgoJY21kX2hpID0gcmVhZGIoY3NyICsgMyk7CglpZiAoY21kX2hpID09IDApIHsKCQlwY2lfd2Fy
bihkZXYsICJGaXJtd2FyZSBsZWZ0IGUxMDAgaW50ZXJydXB0cyBlbmFibGVkOyBkaXNhYmxpbmdc
biIpOwoJCXdyaXRlYigxLCBjc3IgKyAzKTsKCX0KCglpb3VubWFwKGNzcik7Cn0KREVDTEFSRV9Q
Q0lfRklYVVBfQ0xBU1NfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0FOWV9JRCwKCQkJ
UENJX0NMQVNTX05FVFdPUktfRVRIRVJORVQsIDgsIHF1aXJrX2UxMDBfaW50ZXJydXB0KTsKCi8q
CiAqIFRoZSA4MjU3NSBhbmQgODI1OTggbWF5IGV4cGVyaWVuY2UgZGF0YSBjb3JydXB0aW9uIGlz
c3VlcyB3aGVuIHRyYW5zaXRpb25pbmcKICogb3V0IG9mIEwwUy4gIFRvIHByZXZlbnQgdGhpcyB3
ZSBuZWVkIHRvIGRpc2FibGUgTDBTIG9uIHRoZSBQQ0llIGxpbmsuCiAqLwpzdGF0aWMgdm9pZCBx
dWlya19kaXNhYmxlX2FzcG1fbDBzKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXBjaV9pbmZvKGRl
diwgIkRpc2FibGluZyBMMHNcbiIpOwoJcGNpX2Rpc2FibGVfbGlua19zdGF0ZShkZXYsIFBDSUVf
TElOS19TVEFURV9MMFMpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURf
SU5URUwsIDB4MTBhNywgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBhOSwgcXVpcmtfZGlzYWJsZV9hc3BtX2ww
cyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBiNiwg
cXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5E
T1JfSURfSU5URUwsIDB4MTBjNiwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBjNywgcXVpcmtfZGlzYWJsZV9h
c3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MTBjOCwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4MTBkNiwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBkYiwgcXVpcmtfZGlz
YWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTBkZCwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBlMSwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBlYywgcXVp
cmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4MTBmMSwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBmNCwgcXVpcmtfZGlzYWJsZV9hc3Bt
X2wwcyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUw
OCwgcXVpcmtfZGlzYWJsZV9hc3BtX2wwcyk7CgovKgogKiBTb21lIFBlcmljb20gUENJZS10by1Q
Q0kgYnJpZGdlcyBpbiByZXZlcnNlIG1vZGUgbmVlZCB0aGUgUENJZSBSZXRyYWluCiAqIExpbmsg
Yml0IGNsZWFyZWQgYWZ0ZXIgc3RhcnRpbmcgdGhlIGxpbmsgcmV0cmFpbiBwcm9jZXNzIHRvIGFs
bG93IHRoaXMKICogcHJvY2VzcyB0byBmaW5pc2guCiAqCiAqIEFmZmVjdGVkIGRldmljZXM6IFBJ
N0M5WDExMCwgUEk3QzlYMTExU0wsIFBJN0M5WDEzMC4gIFNlZSBhbHNvIHRoZQogKiBQZXJpY29t
IEVycmF0YSBTaGVldCBQSTdDOVgxMTFTTEJfZXJyYXRhX3JldjEuMl8xMDI3MTEucGRmLgogKi8K
c3RhdGljIHZvaWQgcXVpcmtfZW5hYmxlX2NsZWFyX3JldHJhaW5fbGluayhzdHJ1Y3QgcGNpX2Rl
diAqZGV2KQp7CglkZXYtPmNsZWFyX3JldHJhaW5fbGluayA9IDE7CglwY2lfaW5mbyhkZXYsICJF
bmFibGUgUENJZSBSZXRyYWluIExpbmsgcXVpcmtcbiIpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUigweDEyZDgsIDB4ZTExMCwgcXVpcmtfZW5hYmxlX2NsZWFyX3JldHJhaW5fbGluayk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUigweDEyZDgsIDB4ZTExMSwgcXVpcmtfZW5hYmxlX2NsZWFy
X3JldHJhaW5fbGluayk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUigweDEyZDgsIDB4ZTEzMCwg
cXVpcmtfZW5hYmxlX2NsZWFyX3JldHJhaW5fbGluayk7CgpzdGF0aWMgdm9pZCBmaXh1cF9yZXYx
XzUzYzgxMChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1MzIgY2xhc3MgPSBkZXYtPmNsYXNzOwoK
CS8qCgkgKiByZXYgMSBuY3I1M2M4MTAgY2hpcHMgZG9uJ3Qgc2V0IHRoZSBjbGFzcyBhdCBhbGwg
d2hpY2ggbWVhbnMKCSAqIHRoZXkgZG9uJ3QgZ2V0IHRoZWlyIHJlc291cmNlcyByZW1hcHBlZC4g
Rml4IHRoYXQgaGVyZS4KCSAqLwoJaWYgKGNsYXNzKQoJCXJldHVybjsKCglkZXYtPmNsYXNzID0g
UENJX0NMQVNTX1NUT1JBR0VfU0NTSSA8PCA4OwoJcGNpX2luZm8oZGV2LCAiTkNSIDUzYzgxMCBy
ZXYgMSBQQ0kgY2xhc3Mgb3ZlcnJpZGRlbiAoJSMwOHggLT4gJSMwOHgpXG4iLAoJCSBjbGFzcywg
ZGV2LT5jbGFzcyk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTkNS
LCBQQ0lfREVWSUNFX0lEX05DUl81M0M4MTAsIGZpeHVwX3JldjFfNTNjODEwKTsKCi8qIEVuYWJs
ZSAxayBJL08gc3BhY2UgZ3JhbnVsYXJpdHkgb24gdGhlIEludGVsIFA2NEgyICovCnN0YXRpYyB2
b2lkIHF1aXJrX3A2NGgyXzFrX2lvKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUxNiBlbjFrOwoK
CXBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwgMHg0MCwgJmVuMWspOwoKCWlmIChlbjFrICYgMHgy
MDApIHsKCQlwY2lfaW5mbyhkZXYsICJFbmFibGUgSS9PIFNwYWNlIHRvIDFLQiBncmFudWxhcml0
eVxuIik7CgkJZGV2LT5pb193aW5kb3dfMWsgPSAxOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE0NjAsIHF1aXJrX3A2NGgyXzFrX2lvKTsKCi8q
CiAqIFVuZGVyIHNvbWUgY2lyY3Vtc3RhbmNlcywgQUVSIGlzIG5vdCBsaW5rZWQgd2l0aCBleHRl
bmRlZCBjYXBhYmlsaXRpZXMuCiAqIEZvcmNlIGl0IHRvIGJlIGxpbmtlZCBieSBzZXR0aW5nIHRo
ZSBjb3JyZXNwb25kaW5nIGNvbnRyb2wgYml0IGluIHRoZQogKiBjb25maWcgc3BhY2UuCiAqLwpz
dGF0aWMgdm9pZCBxdWlya19udmlkaWFfY2s4MDRfcGNpZV9hZXJfZXh0X2NhcChzdHJ1Y3QgcGNp
X2RldiAqZGV2KQp7Cgl1aW50OF90IGI7CgoJaWYgKHBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwg
MHhmNDEsICZiKSA9PSAwKSB7CgkJaWYgKCEoYiAmIDB4MjApKSB7CgkJCXBjaV93cml0ZV9jb25m
aWdfYnl0ZShkZXYsIDB4ZjQxLCBiIHwgMHgyMCk7CgkJCXBjaV9pbmZvKGRldiwgIkxpbmtpbmcg
QUVSIGV4dGVuZGVkIGNhcGFiaWxpdHlcbiIpOwoJCX0KCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9G
SU5BTChQQ0lfVkVORE9SX0lEX05WSURJQSwgIFBDSV9ERVZJQ0VfSURfTlZJRElBX0NLODA0X1BD
SUUsCgkJCXF1aXJrX252aWRpYV9jazgwNF9wY2llX2Flcl9leHRfY2FwKTsKREVDTEFSRV9QQ0lf
RklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfTlZJRElBLCAgUENJX0RFVklDRV9JRF9O
VklESUFfQ0s4MDRfUENJRSwKCQkJcXVpcmtfbnZpZGlhX2NrODA0X3BjaWVfYWVyX2V4dF9jYXAp
OwoKc3RhdGljIHZvaWQgcXVpcmtfdmlhX2N4NzAwX3BjaV9wYXJraW5nX2NhY2hpbmcoc3RydWN0
IHBjaV9kZXYgKmRldikKewoJLyoKCSAqIERpc2FibGUgUENJIEJ1cyBQYXJraW5nIGFuZCBQQ0kg
TWFzdGVyIHJlYWQgY2FjaGluZyBvbiBDWDcwMAoJICogd2hpY2ggY2F1c2VzIHVuc3BlY2lmaWVk
IHRpbWluZyBlcnJvcnMgd2l0aCBhIFZUNjIxMkwgb24gdGhlIFBDSQoJICogYnVzIGxlYWRpbmcg
dG8gVVNCMi4wIHBhY2tldCBsb3NzLgoJICoKCSAqIFRoaXMgcXVpcmsgaXMgb25seSBlbmFibGVk
IGlmIGEgc2Vjb25kIChvbiB0aGUgZXh0ZXJuYWwgUENJIGJ1cykKCSAqIFZUNjIxMkwgaXMgZm91
bmQgLS0gdGhlIENYNzAwIGNvcmUgaXRzZWxmIGFsc28gY29udGFpbnMgYSBVU0IKCSAqIGhvc3Qg
Y29udHJvbGxlciB3aXRoIHRoZSBzYW1lIFBDSSBJRCBhcyB0aGUgVlQ2MjEyTC4KCSAqLwoKCS8q
IENvdW50IFZUNjIxMkwgaW5zdGFuY2VzICovCglzdHJ1Y3QgcGNpX2RldiAqcCA9IHBjaV9nZXRf
ZGV2aWNlKFBDSV9WRU5ET1JfSURfVklBLAoJCVBDSV9ERVZJQ0VfSURfVklBXzgyMzVfVVNCXzIs
IE5VTEwpOwoJdWludDhfdCBiOwoKCS8qCgkgKiBwIHNob3VsZCBjb250YWluIHRoZSBmaXJzdCAo
aW50ZXJuYWwpIFZUNjIxMkwgLS0gc2VlIGlmIHdlIGhhdmUKCSAqIGFuIGV4dGVybmFsIG9uZSBi
eSBzZWFyY2hpbmcgYWdhaW4uCgkgKi8KCXAgPSBwY2lfZ2V0X2RldmljZShQQ0lfVkVORE9SX0lE
X1ZJQSwgUENJX0RFVklDRV9JRF9WSUFfODIzNV9VU0JfMiwgcCk7CglpZiAoIXApCgkJcmV0dXJu
OwoJcGNpX2Rldl9wdXQocCk7CgoJaWYgKHBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgMHg3Niwg
JmIpID09IDApIHsKCQlpZiAoYiAmIDB4NDApIHsKCQkJLyogVHVybiBvZmYgUENJIEJ1cyBQYXJr
aW5nICovCgkJCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4NzYsIGIgXiAweDQwKTsKCgkJ
CXBjaV9pbmZvKGRldiwgIkRpc2FibGluZyBWSUEgQ1g3MDAgUENJIHBhcmtpbmdcbiIpOwoJCX0K
CX0KCglpZiAocGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCAweDcyLCAmYikgPT0gMCkgewoJCWlm
IChiICE9IDApIHsKCQkJLyogVHVybiBvZmYgUENJIE1hc3RlciByZWFkIGNhY2hpbmcgKi8KCQkJ
cGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHg3MiwgMHgwKTsKCgkJCS8qIFNldCBQQ0kgTWFz
dGVyIEJ1cyB0aW1lLW91dCB0byAiMXgxNiBQQ0xLIiAqLwoJCQlwY2lfd3JpdGVfY29uZmlnX2J5
dGUoZGV2LCAweDc1LCAweDEpOwoKCQkJLyogRGlzYWJsZSAiUmVhZCBGSUZPIFRpbWVyIiAqLwoJ
CQlwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCAweDc3LCAweDApOwoKCQkJcGNpX2luZm8oZGV2
LCAiRGlzYWJsaW5nIFZJQSBDWDcwMCBQQ0kgY2FjaGluZ1xuIik7CgkJfQoJfQp9CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfVklBLCAweDMyNGUsIHF1aXJrX3ZpYV9jeDcw
MF9wY2lfcGFya2luZ19jYWNoaW5nKTsKCnN0YXRpYyB2b2lkIHF1aXJrX2JyY21fNTcxOV9saW1p
dF9tcnJzKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXUzMiByZXY7CgoJcGNpX3JlYWRfY29uZmln
X2R3b3JkKGRldiwgMHhmNCwgJnJldik7CgoJLyogT25seSBDQVAgdGhlIE1SUlMgaWYgdGhlIGRl
dmljZSBpcyBhIDU3MTkgQTAgKi8KCWlmIChyZXYgPT0gMHgwNTcxOTAwMCkgewoJCWludCByZWFk
cnEgPSBwY2llX2dldF9yZWFkcnEoZGV2KTsKCQlpZiAocmVhZHJxID4gMjA0OCkKCQkJcGNpZV9z
ZXRfcmVhZHJxKGRldiwgMjA0OCk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRU5BQkxFKFBDSV9W
RU5ET1JfSURfQlJPQURDT00sCgkJCSBQQ0lfREVWSUNFX0lEX1RJR09OM181NzE5LAoJCQkgcXVp
cmtfYnJjbV81NzE5X2xpbWl0X21ycnMpOwoKI2lmZGVmIENPTkZJR19QQ0lFX0lQUk9DX1BMQVRG
T1JNCnN0YXRpYyB2b2lkIHF1aXJrX3BheGNfYnJpZGdlKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7
CgkvKgoJICogVGhlIFBDSSBjb25maWcgc3BhY2UgaXMgc2hhcmVkIHdpdGggdGhlIFBBWEMgcm9v
dCBwb3J0IGFuZCB0aGUgZmlyc3QKCSAqIEV0aGVybmV0IGRldmljZS4gIFNvLCB3ZSBuZWVkIHRv
IHdvcmthcm91bmQgdGhpcyBieSB0ZWxsaW5nIHRoZSBQQ0kKCSAqIGNvZGUgdGhhdCB0aGUgYnJp
ZGdlIGlzIG5vdCBhbiBFdGhlcm5ldCBkZXZpY2UuCgkgKi8KCWlmIChwZGV2LT5oZHJfdHlwZSA9
PSBQQ0lfSEVBREVSX1RZUEVfQlJJREdFKQoJCXBkZXYtPmNsYXNzID0gUENJX0NMQVNTX0JSSURH
RV9QQ0kgPDwgODsKCgkvKgoJICogTVBTUyBpcyBub3QgYmVpbmcgc2V0IHByb3Blcmx5IChhcyBp
dCBpcyBjdXJyZW50bHkgMCkuICBUaGlzIGlzCgkgKiBiZWNhdXNlIHRoYXQgYXJlYSBvZiB0aGUg
UENJIGNvbmZpZyBzcGFjZSBpcyBoYXJkIGNvZGVkIHRvIHplcm8sIGFuZAoJICogaXMgbm90IG1v
ZGlmaWFibGUgYnkgZmlybXdhcmUuICBTZXQgdGhpcyB0byAyIChlLmcuLCA1MTIgYnl0ZSBNUFMp
CgkgKiBzbyB0aGF0IHRoZSBNUFMgY2FuIGJlIHNldCB0byB0aGUgcmVhbCBtYXggdmFsdWUuCgkg
Ki8KCXBkZXYtPnBjaWVfbXBzcyA9IDI7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZF
TkRPUl9JRF9CUk9BRENPTSwgMHgxNmNkLCBxdWlya19wYXhjX2JyaWRnZSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfQlJPQURDT00sIDB4MTZmMCwgcXVpcmtfcGF4Y19i
cmlkZ2UpOwpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVORE9SX0lEX0JST0FEQ09NLCAw
eGQ3NTAsIHF1aXJrX3BheGNfYnJpZGdlKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZF
TkRPUl9JRF9CUk9BRENPTSwgMHhkODAyLCBxdWlya19wYXhjX2JyaWRnZSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfQlJPQURDT00sIDB4ZDgwNCwgcXVpcmtfcGF4Y19i
cmlkZ2UpOwojZW5kaWYKCi8qCiAqIE9yaWdpbmFsbHkgaW4gRURBQyBzb3VyY2VzIGZvciBpODI4
NzVQOiBJbnRlbCB0ZWxscyBCSU9TIGRldmVsb3BlcnMgdG8KICogaGlkZSBkZXZpY2UgNiB3aGlj
aCBjb25maWd1cmVzIHRoZSBvdmVyZmxvdyBkZXZpY2UgYWNjZXNzIGNvbnRhaW5pbmcgdGhlCiAq
IERSQnMgLSB0aGlzIGlzIHdoZXJlIHdlIGV4cG9zZSBkZXZpY2UgNi4KICogaHR0cDovL3d3dy54
ODYtc2VjcmV0LmNvbS9hcnRpY2xlcy90d2Vhay9wYXQvcGF0c2VjcmV0cy0yLmh0bQogKi8Kc3Rh
dGljIHZvaWQgcXVpcmtfdW5oaWRlX21jaF9kZXY2KHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXU4
IHJlZzsKCglpZiAocGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCAweEY0LCAmcmVnKSA9PSAwICYm
ICEocmVnICYgMHgwMikpIHsKCQlwY2lfaW5mbyhkZXYsICJFbmFibGluZyBNQ0ggJ092ZXJmbG93
JyBEZXZpY2VcbiIpOwoJCXBjaV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4RjQsIHJlZyB8IDB4
MDIpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIFBD
SV9ERVZJQ0VfSURfSU5URUxfODI4NjVfSEIsCgkJCXF1aXJrX3VuaGlkZV9tY2hfZGV2Nik7CkRF
Q0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0VfSURf
SU5URUxfODI4NzVfSEIsCgkJCXF1aXJrX3VuaGlkZV9tY2hfZGV2Nik7CgojaWZkZWYgQ09ORklH
X1BDSV9NU0kKLyoKICogU29tZSBjaGlwc2V0cyBkbyBub3Qgc3VwcG9ydCBNU0kuIFdlIGNhbm5v
dCBlYXNpbHkgcmVseSBvbiBzZXR0aW5nCiAqIFBDSV9CVVNfRkxBR1NfTk9fTVNJIGluIGl0cyBi
dXMgZmxhZ3MgYmVjYXVzZSB0aGVyZSBhcmUgYWN0dWFsbHkgc29tZQogKiBvdGhlciBidXNlcyBj
b250cm9sbGVkIGJ5IHRoZSBjaGlwc2V0IGV2ZW4gaWYgTGludXggaXMgbm90IGF3YXJlIG9mIGl0
LgogKiBJbnN0ZWFkIG9mIHNldHRpbmcgdGhlIGZsYWcgb24gYWxsIGJ1c2VzIGluIHRoZSBtYWNo
aW5lLCBzaW1wbHkgZGlzYWJsZQogKiBNU0kgZ2xvYmFsbHkuCiAqLwpzdGF0aWMgdm9pZCBxdWly
a19kaXNhYmxlX2FsbF9tc2koc3RydWN0IHBjaV9kZXYgKmRldikKewoJcGNpX25vX21zaSgpOwoJ
cGNpX3dhcm4oZGV2LCAiTVNJIHF1aXJrIGRldGVjdGVkOyBNU0kgZGlzYWJsZWRcbiIpOwp9CkRF
Q0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfU0VSVkVSV09SS1MsIFBDSV9ERVZJ
Q0VfSURfU0VSVkVSV09SS1NfR0NOQl9MRSwgcXVpcmtfZGlzYWJsZV9hbGxfbXNpKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX1JT
NDAwXzIwMCwgcXVpcmtfZGlzYWJsZV9hbGxfbXNpKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
UENJX1ZFTkRPUl9JRF9BVEksIFBDSV9ERVZJQ0VfSURfQVRJX1JTNDgwLCBxdWlya19kaXNhYmxl
X2FsbF9tc2kpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwgUENJ
X0RFVklDRV9JRF9WSUFfVlQzMzM2LCBxdWlya19kaXNhYmxlX2FsbF9tc2kpOwpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwgUENJX0RFVklDRV9JRF9WSUFfVlQzMzUx
LCBxdWlya19kaXNhYmxlX2FsbF9tc2kpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX1ZJQSwgUENJX0RFVklDRV9JRF9WSUFfVlQzMzY0LCBxdWlya19kaXNhYmxlX2FsbF9t
c2kpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX1ZJQSwgUENJX0RFVklD
RV9JRF9WSUFfODM4MF8wLCBxdWlya19kaXNhYmxlX2FsbF9tc2kpOwpERUNMQVJFX1BDSV9GSVhV
UF9GSU5BTChQQ0lfVkVORE9SX0lEX1NJLCAweDA3NjEsIHF1aXJrX2Rpc2FibGVfYWxsX21zaSk7
CgovKiBEaXNhYmxlIE1TSSBvbiBjaGlwc2V0cyB0aGF0IGFyZSBrbm93biB0byBub3Qgc3VwcG9y
dCBpdCAqLwpzdGF0aWMgdm9pZCBxdWlya19kaXNhYmxlX21zaShzdHJ1Y3QgcGNpX2RldiAqZGV2
KQp7CglpZiAoZGV2LT5zdWJvcmRpbmF0ZSkgewoJCXBjaV93YXJuKGRldiwgIk1TSSBxdWlyayBk
ZXRlY3RlZDsgc3Vib3JkaW5hdGUgTVNJIGRpc2FibGVkXG4iKTsKCQlkZXYtPnN1Ym9yZGluYXRl
LT5idXNfZmxhZ3MgfD0gUENJX0JVU19GTEFHU19OT19NU0k7Cgl9Cn0KREVDTEFSRV9QQ0lfRklY
VVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BTUQsIFBDSV9ERVZJQ0VfSURfQU1EXzgxMzFfQlJJREdF
LCBxdWlya19kaXNhYmxlX21zaSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfVklBLCAweGEyMzgsIHF1aXJrX2Rpc2FibGVfbXNpKTsKREVDTEFSRV9QQ0lfRklYVVBfRklO
QUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4NWEzZiwgcXVpcmtfZGlzYWJsZV9tc2kpOwoKLyoKICog
VGhlIEFQQyBicmlkZ2UgZGV2aWNlIGluIEFNRCA3ODAgZmFtaWx5IG5vcnRoYnJpZGdlcyBoYXMg
c29tZSByYW5kb20KICogT0VNIHN1YnN5c3RlbSBJRCBpbiBpdHMgdmVuZG9yIElEIHJlZ2lzdGVy
IChlcnJhdHVtIDE4KSwgc28gaW5zdGVhZAogKiB3ZSB1c2UgdGhlIHBvc3NpYmxlIHZlbmRvci9k
ZXZpY2UgSURzIG9mIHRoZSBob3N0IGJyaWRnZSBmb3IgdGhlCiAqIGRlY2xhcmVkIHF1aXJrLCBh
bmQgc2VhcmNoIGZvciB0aGUgQVBDIGJyaWRnZSBieSBzbG90IG51bWJlci4KICovCnN0YXRpYyB2
b2lkIHF1aXJrX2FtZF83ODBfYXBjX21zaShzdHJ1Y3QgcGNpX2RldiAqaG9zdF9icmlkZ2UpCnsK
CXN0cnVjdCBwY2lfZGV2ICphcGNfYnJpZGdlOwoKCWFwY19icmlkZ2UgPSBwY2lfZ2V0X3Nsb3Qo
aG9zdF9icmlkZ2UtPmJ1cywgUENJX0RFVkZOKDEsIDApKTsKCWlmIChhcGNfYnJpZGdlKSB7CgkJ
aWYgKGFwY19icmlkZ2UtPmRldmljZSA9PSAweDk2MDIpCgkJCXF1aXJrX2Rpc2FibGVfbXNpKGFw
Y19icmlkZ2UpOwoJCXBjaV9kZXZfcHV0KGFwY19icmlkZ2UpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1ELCAweDk2MDAsIHF1aXJrX2FtZF83ODBfYXBjX21z
aSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQU1ELCAweDk2MDEsIHF1
aXJrX2FtZF83ODBfYXBjX21zaSk7CgovKgogKiBHbyB0aHJvdWdoIHRoZSBsaXN0IG9mIEh5cGVy
VHJhbnNwb3J0IGNhcGFiaWxpdGllcyBhbmQgcmV0dXJuIDEgaWYgYSBIVAogKiBNU0kgY2FwYWJp
bGl0eSBpcyBmb3VuZCBhbmQgZW5hYmxlZC4KICovCnN0YXRpYyBpbnQgbXNpX2h0X2NhcF9lbmFi
bGVkKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWludCBwb3MsIHR0bCA9IFBDSV9GSU5EX0NBUF9U
VEw7CgoJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0eShkZXYsIEhUX0NBUFRZUEVfTVNJX01B
UFBJTkcpOwoJd2hpbGUgKHBvcyAmJiB0dGwtLSkgewoJCXU4IGZsYWdzOwoKCQlpZiAocGNpX3Jl
YWRfY29uZmlnX2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lfRkxBR1MsCgkJCQkJICZmbGFncykgPT0g
MCkgewoJCQlwY2lfaW5mbyhkZXYsICJGb3VuZCAlcyBIVCBNU0kgTWFwcGluZ1xuIiwKCQkJCWZs
YWdzICYgSFRfTVNJX0ZMQUdTX0VOQUJMRSA/CgkJCQkiZW5hYmxlZCIgOiAiZGlzYWJsZWQiKTsK
CQkJcmV0dXJuIChmbGFncyAmIEhUX01TSV9GTEFHU19FTkFCTEUpICE9IDA7CgkJfQoKCQlwb3Mg
PSBwY2lfZmluZF9uZXh0X2h0X2NhcGFiaWxpdHkoZGV2LCBwb3MsCgkJCQkJCSAgSFRfQ0FQVFlQ
RV9NU0lfTUFQUElORyk7Cgl9CglyZXR1cm4gMDsKfQoKLyogQ2hlY2sgdGhlIEh5cGVyVHJhbnNw
b3J0IE1TSSBtYXBwaW5nIHRvIGtub3cgd2hldGhlciBNU0kgaXMgZW5hYmxlZCBvciBub3QgKi8K
c3RhdGljIHZvaWQgcXVpcmtfbXNpX2h0X2NhcChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpZiAo
ZGV2LT5zdWJvcmRpbmF0ZSAmJiAhbXNpX2h0X2NhcF9lbmFibGVkKGRldikpIHsKCQlwY2lfd2Fy
bihkZXYsICJNU0kgcXVpcmsgZGV0ZWN0ZWQ7IHN1Ym9yZGluYXRlIE1TSSBkaXNhYmxlZFxuIik7
CgkJZGV2LT5zdWJvcmRpbmF0ZS0+YnVzX2ZsYWdzIHw9IFBDSV9CVVNfRkxBR1NfTk9fTVNJOwoJ
fQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfU0VSVkVSV09SS1MsIFBD
SV9ERVZJQ0VfSURfU0VSVkVSV09SS1NfSFQyMDAwX1BDSUUsCgkJCXF1aXJrX21zaV9odF9jYXAp
OwoKLyoKICogVGhlIG5WaWRpYSBDSzgwNCBjaGlwc2V0IG1heSBoYXZlIDIgSFQgTVNJIG1hcHBp
bmdzLiAgTVNJIGlzIHN1cHBvcnRlZAogKiBpZiB0aGUgTVNJIGNhcGFiaWxpdHkgaXMgc2V0IGlu
IGFueSBvZiB0aGVzZSBtYXBwaW5ncy4KICovCnN0YXRpYyB2b2lkIHF1aXJrX252aWRpYV9jazgw
NF9tc2lfaHRfY2FwKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCXN0cnVjdCBwY2lfZGV2ICpwZGV2
OwoKCWlmICghZGV2LT5zdWJvcmRpbmF0ZSkKCQlyZXR1cm47CgoJLyoKCSAqIENoZWNrIEhUIE1T
SSBjYXAgb24gdGhpcyBjaGlwc2V0IGFuZCB0aGUgcm9vdCBvbmUuICBBIHNpbmdsZSBvbmUKCSAq
IGhhdmluZyBNU0kgaXMgZW5vdWdoIHRvIGJlIHN1cmUgdGhhdCBNU0kgaXMgc3VwcG9ydGVkLgoJ
ICovCglwZGV2ID0gcGNpX2dldF9zbG90KGRldi0+YnVzLCAwKTsKCWlmICghcGRldikKCQlyZXR1
cm47CglpZiAoIW1zaV9odF9jYXBfZW5hYmxlZChkZXYpICYmICFtc2lfaHRfY2FwX2VuYWJsZWQo
cGRldikpIHsKCQlwY2lfd2FybihkZXYsICJNU0kgcXVpcmsgZGV0ZWN0ZWQ7IHN1Ym9yZGluYXRl
IE1TSSBkaXNhYmxlZFxuIik7CgkJZGV2LT5zdWJvcmRpbmF0ZS0+YnVzX2ZsYWdzIHw9IFBDSV9C
VVNfRkxBR1NfTk9fTVNJOwoJfQoJcGNpX2Rldl9wdXQocGRldik7Cn0KREVDTEFSRV9QQ0lfRklY
VVBfRklOQUwoUENJX1ZFTkRPUl9JRF9OVklESUEsIFBDSV9ERVZJQ0VfSURfTlZJRElBX0NLODA0
X1BDSUUsCgkJCXF1aXJrX252aWRpYV9jazgwNF9tc2lfaHRfY2FwKTsKCi8qIEZvcmNlIGVuYWJs
ZSBNU0kgbWFwcGluZyBjYXBhYmlsaXR5IG9uIEhUIGJyaWRnZXMgKi8Kc3RhdGljIHZvaWQgaHRf
ZW5hYmxlX21zaV9tYXBwaW5nKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWludCBwb3MsIHR0bCA9
IFBDSV9GSU5EX0NBUF9UVEw7CgoJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0eShkZXYsIEhU
X0NBUFRZUEVfTVNJX01BUFBJTkcpOwoJd2hpbGUgKHBvcyAmJiB0dGwtLSkgewoJCXU4IGZsYWdz
OwoKCQlpZiAocGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lfRkxBR1MsCgkJ
CQkJICZmbGFncykgPT0gMCkgewoJCQlwY2lfaW5mbyhkZXYsICJFbmFibGluZyBIVCBNU0kgTWFw
cGluZ1xuIik7CgoJCQlwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lfRkxB
R1MsCgkJCQkJICAgICAgZmxhZ3MgfCBIVF9NU0lfRkxBR1NfRU5BQkxFKTsKCQl9CgkJcG9zID0g
cGNpX2ZpbmRfbmV4dF9odF9jYXBhYmlsaXR5KGRldiwgcG9zLAoJCQkJCQkgIEhUX0NBUFRZUEVf
TVNJX01BUFBJTkcpOwoJfQp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X1NFUlZFUldPUktTLAoJCQkgUENJX0RFVklDRV9JRF9TRVJWRVJXT1JLU19IVDEwMDBfUFhCLAoJ
CQkgaHRfZW5hYmxlX21zaV9tYXBwaW5nKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9W
RU5ET1JfSURfQU1ELCBQQ0lfREVWSUNFX0lEX0FNRF84MTMyX0JSSURHRSwKCQkJIGh0X2VuYWJs
ZV9tc2lfbWFwcGluZyk7CgovKgogKiBUaGUgUDVOMzItU0xJIG1vdGhlcmJvYXJkcyBmcm9tIEFz
dXMgaGF2ZSBhIHByb2JsZW0gd2l0aCBNU0kKICogZm9yIHRoZSBNQ1A1NSBOSUMuIEl0IGlzIG5v
dCB5ZXQgZGV0ZXJtaW5lZCB3aGV0aGVyIHRoZSBNU0kgcHJvYmxlbQogKiBhbHNvIGFmZmVjdHMg
b3RoZXIgZGV2aWNlcy4gQXMgZm9yIG5vdywgdHVybiBvZmYgTVNJIGZvciB0aGlzIGRldmljZS4K
ICovCnN0YXRpYyB2b2lkIG52ZW5ldF9tc2lfZGlzYWJsZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7
Cgljb25zdCBjaGFyICpib2FyZF9uYW1lID0gZG1pX2dldF9zeXN0ZW1faW5mbyhETUlfQk9BUkRf
TkFNRSk7CgoJaWYgKGJvYXJkX25hbWUgJiYKCSAgICAoc3Ryc3RyKGJvYXJkX25hbWUsICJQNU4z
Mi1TTEkgUFJFTUlVTSIpIHx8CgkgICAgIHN0cnN0cihib2FyZF9uYW1lLCAiUDVOMzItRSBTTEki
KSkpIHsKCQlwY2lfaW5mbyhkZXYsICJEaXNhYmxpbmcgTVNJIGZvciBNQ1A1NSBOSUMgb24gUDVO
MzItU0xJXG4iKTsKCQlkZXYtPm5vX21zaSA9IDE7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFS
TFkoUENJX1ZFTkRPUl9JRF9OVklESUEsCgkJCVBDSV9ERVZJQ0VfSURfTlZJRElBX05WRU5FVF8x
NSwKCQkJbnZlbmV0X21zaV9kaXNhYmxlKTsKCi8qCiAqIFNvbWUgdmVyc2lvbnMgb2YgdGhlIE1D
UDU1IGJyaWRnZSBmcm9tIE52aWRpYSBoYXZlIGEgbGVnYWN5IElSUSByb3V0aW5nCiAqIGNvbmZp
ZyByZWdpc3Rlci4gIFRoaXMgcmVnaXN0ZXIgY29udHJvbHMgdGhlIHJvdXRpbmcgb2YgbGVnYWN5
CiAqIGludGVycnVwdHMgZnJvbSBkZXZpY2VzIHRoYXQgcm91dGUgdGhyb3VnaCB0aGUgTUNQNTUu
ICBJZiB0aGlzIHJlZ2lzdGVyCiAqIGlzIG1pc3Byb2dyYW1tZWQsIGludGVycnVwdHMgYXJlIG9u
bHkgc2VudCB0byB0aGUgQlNQLCB1bmxpa2UKICogY29udmVudGlvbmFsIHN5c3RlbXMgd2hlcmUg
dGhlIElSUSBpcyBicm9hZGNhc3QgdG8gYWxsIG9ubGluZSBDUFVzLiAgTm90CiAqIGhhdmluZyB0
aGlzIHJlZ2lzdGVyIHNldCBwcm9wZXJseSBwcmV2ZW50cyBrZHVtcCBmcm9tIGJvb3RpbmcgdXAK
ICogcHJvcGVybHksIHNvIGxldCdzIG1ha2Ugc3VyZSB0aGF0IHdlIGhhdmUgaXQgc2V0IGNvcnJl
Y3RseS4KICogTm90ZSB0aGF0IHRoaXMgaXMgYW4gdW5kb2N1bWVudGVkIHJlZ2lzdGVyLgogKi8K
c3RhdGljIHZvaWQgbnZicmlkZ2VfY2hlY2tfbGVnYWN5X2lycV9yb3V0aW5nKHN0cnVjdCBwY2lf
ZGV2ICpkZXYpCnsKCXUzMiBjZmc7CgoJaWYgKCFwY2lfZmluZF9jYXBhYmlsaXR5KGRldiwgUENJ
X0NBUF9JRF9IVCkpCgkJcmV0dXJuOwoKCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIDB4NzQs
ICZjZmcpOwoKCWlmIChjZmcgJiAoKDEgPDwgMikgfCAoMSA8PCAxNSkpKSB7CgkJcHJpbnRrKEtF
Uk5fSU5GTyAiUmV3cml0aW5nIElSUSByb3V0aW5nIHJlZ2lzdGVyIG9uIE1DUDU1XG4iKTsKCQlj
ZmcgJj0gfigoMSA8PCAyKSB8ICgxIDw8IDE1KSk7CgkJcGNpX3dyaXRlX2NvbmZpZ19kd29yZChk
ZXYsIDB4NzQsIGNmZyk7Cgl9Cn0KREVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9J
RF9OVklESUEsCgkJCVBDSV9ERVZJQ0VfSURfTlZJRElBX01DUDU1X0JSSURHRV9WMCwKCQkJbnZi
cmlkZ2VfY2hlY2tfbGVnYWN5X2lycV9yb3V0aW5nKTsKREVDTEFSRV9QQ0lfRklYVVBfRUFSTFko
UENJX1ZFTkRPUl9JRF9OVklESUEsCgkJCVBDSV9ERVZJQ0VfSURfTlZJRElBX01DUDU1X0JSSURH
RV9WNCwKCQkJbnZicmlkZ2VfY2hlY2tfbGVnYWN5X2lycV9yb3V0aW5nKTsKCnN0YXRpYyBpbnQg
aHRfY2hlY2tfbXNpX21hcHBpbmcoc3RydWN0IHBjaV9kZXYgKmRldikKewoJaW50IHBvcywgdHRs
ID0gUENJX0ZJTkRfQ0FQX1RUTDsKCWludCBmb3VuZCA9IDA7CgoJLyogQ2hlY2sgaWYgdGhlcmUg
aXMgSFQgTVNJIGNhcCBvciBlbmFibGVkIG9uIHRoaXMgZGV2aWNlICovCglwb3MgPSBwY2lfZmlu
ZF9odF9jYXBhYmlsaXR5KGRldiwgSFRfQ0FQVFlQRV9NU0lfTUFQUElORyk7Cgl3aGlsZSAocG9z
ICYmIHR0bC0tKSB7CgkJdTggZmxhZ3M7CgoJCWlmIChmb3VuZCA8IDEpCgkJCWZvdW5kID0gMTsK
CQlpZiAocGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lfRkxBR1MsCgkJCQkJ
ICZmbGFncykgPT0gMCkgewoJCQlpZiAoZmxhZ3MgJiBIVF9NU0lfRkxBR1NfRU5BQkxFKSB7CgkJ
CQlpZiAoZm91bmQgPCAyKSB7CgkJCQkJZm91bmQgPSAyOwoJCQkJCWJyZWFrOwoJCQkJfQoJCQl9
CgkJfQoJCXBvcyA9IHBjaV9maW5kX25leHRfaHRfY2FwYWJpbGl0eShkZXYsIHBvcywKCQkJCQkJ
ICBIVF9DQVBUWVBFX01TSV9NQVBQSU5HKTsKCX0KCglyZXR1cm4gZm91bmQ7Cn0KCnN0YXRpYyBp
bnQgaG9zdF9icmlkZ2Vfd2l0aF9sZWFmKHN0cnVjdCBwY2lfZGV2ICpob3N0X2JyaWRnZSkKewoJ
c3RydWN0IHBjaV9kZXYgKmRldjsKCWludCBwb3M7CglpbnQgaSwgZGV2X25vOwoJaW50IGZvdW5k
ID0gMDsKCglkZXZfbm8gPSBob3N0X2JyaWRnZS0+ZGV2Zm4gPj4gMzsKCWZvciAoaSA9IGRldl9u
byArIDE7IGkgPCAweDIwOyBpKyspIHsKCQlkZXYgPSBwY2lfZ2V0X3Nsb3QoaG9zdF9icmlkZ2Ut
PmJ1cywgUENJX0RFVkZOKGksIDApKTsKCQlpZiAoIWRldikKCQkJY29udGludWU7CgoJCS8qIGZv
dW5kIG5leHQgaG9zdCBicmlkZ2U/ICovCgkJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0eShk
ZXYsIEhUX0NBUFRZUEVfU0xBVkUpOwoJCWlmIChwb3MgIT0gMCkgewoJCQlwY2lfZGV2X3B1dChk
ZXYpOwoJCQlicmVhazsKCQl9CgoJCWlmIChodF9jaGVja19tc2lfbWFwcGluZyhkZXYpKSB7CgkJ
CWZvdW5kID0gMTsKCQkJcGNpX2Rldl9wdXQoZGV2KTsKCQkJYnJlYWs7CgkJfQoJCXBjaV9kZXZf
cHV0KGRldik7Cgl9CgoJcmV0dXJuIGZvdW5kOwp9CgojZGVmaW5lIFBDSV9IVF9DQVBfU0xBVkVf
Q1RSTDAgICAgIDQgICAgLyogbGluayBjb250cm9sICovCiNkZWZpbmUgUENJX0hUX0NBUF9TTEFW
RV9DVFJMMSAgICAgOCAgICAvKiBsaW5rIGNvbnRyb2wgdG8gKi8KCnN0YXRpYyBpbnQgaXNfZW5k
X29mX2h0X2NoYWluKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWludCBwb3MsIGN0cmxfb2ZmOwoJ
aW50IGVuZCA9IDA7Cgl1MTYgZmxhZ3MsIGN0cmw7CgoJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJp
bGl0eShkZXYsIEhUX0NBUFRZUEVfU0xBVkUpOwoKCWlmICghcG9zKQoJCWdvdG8gb3V0OwoKCXBj
aV9yZWFkX2NvbmZpZ193b3JkKGRldiwgcG9zICsgUENJX0NBUF9GTEFHUywgJmZsYWdzKTsKCglj
dHJsX29mZiA9ICgoZmxhZ3MgPj4gMTApICYgMSkgPwoJCQlQQ0lfSFRfQ0FQX1NMQVZFX0NUUkww
IDogUENJX0hUX0NBUF9TTEFWRV9DVFJMMTsKCXBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwgcG9z
ICsgY3RybF9vZmYsICZjdHJsKTsKCglpZiAoY3RybCAmICgxIDw8IDYpKQoJCWVuZCA9IDE7Cgpv
dXQ6CglyZXR1cm4gZW5kOwp9CgpzdGF0aWMgdm9pZCBudl9odF9lbmFibGVfbXNpX21hcHBpbmco
c3RydWN0IHBjaV9kZXYgKmRldikKewoJc3RydWN0IHBjaV9kZXYgKmhvc3RfYnJpZGdlOwoJaW50
IHBvczsKCWludCBpLCBkZXZfbm87CglpbnQgZm91bmQgPSAwOwoKCWRldl9ubyA9IGRldi0+ZGV2
Zm4gPj4gMzsKCWZvciAoaSA9IGRldl9ubzsgaSA+PSAwOyBpLS0pIHsKCQlob3N0X2JyaWRnZSA9
IHBjaV9nZXRfc2xvdChkZXYtPmJ1cywgUENJX0RFVkZOKGksIDApKTsKCQlpZiAoIWhvc3RfYnJp
ZGdlKQoJCQljb250aW51ZTsKCgkJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0eShob3N0X2Jy
aWRnZSwgSFRfQ0FQVFlQRV9TTEFWRSk7CgkJaWYgKHBvcyAhPSAwKSB7CgkJCWZvdW5kID0gMTsK
CQkJYnJlYWs7CgkJfQoJCXBjaV9kZXZfcHV0KGhvc3RfYnJpZGdlKTsKCX0KCglpZiAoIWZvdW5k
KQoJCXJldHVybjsKCgkvKiBkb24ndCBlbmFibGUgZW5kX2RldmljZS9ob3N0X2JyaWRnZSB3aXRo
IGxlYWYgZGlyZWN0bHkgaGVyZSAqLwoJaWYgKGhvc3RfYnJpZGdlID09IGRldiAmJiBpc19lbmRf
b2ZfaHRfY2hhaW4oaG9zdF9icmlkZ2UpICYmCgkgICAgaG9zdF9icmlkZ2Vfd2l0aF9sZWFmKGhv
c3RfYnJpZGdlKSkKCQlnb3RvIG91dDsKCgkvKiByb290IGRpZCB0aGF0ICEgKi8KCWlmIChtc2lf
aHRfY2FwX2VuYWJsZWQoaG9zdF9icmlkZ2UpKQoJCWdvdG8gb3V0OwoKCWh0X2VuYWJsZV9tc2lf
bWFwcGluZyhkZXYpOwoKb3V0OgoJcGNpX2Rldl9wdXQoaG9zdF9icmlkZ2UpOwp9CgpzdGF0aWMg
dm9pZCBodF9kaXNhYmxlX21zaV9tYXBwaW5nKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWludCBw
b3MsIHR0bCA9IFBDSV9GSU5EX0NBUF9UVEw7CgoJcG9zID0gcGNpX2ZpbmRfaHRfY2FwYWJpbGl0
eShkZXYsIEhUX0NBUFRZUEVfTVNJX01BUFBJTkcpOwoJd2hpbGUgKHBvcyAmJiB0dGwtLSkgewoJ
CXU4IGZsYWdzOwoKCQlpZiAocGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBwb3MgKyBIVF9NU0lf
RkxBR1MsCgkJCQkJICZmbGFncykgPT0gMCkgewoJCQlwY2lfaW5mbyhkZXYsICJEaXNhYmxpbmcg
SFQgTVNJIE1hcHBpbmdcbiIpOwoKCQkJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgcG9zICsg
SFRfTVNJX0ZMQUdTLAoJCQkJCSAgICAgIGZsYWdzICYgfkhUX01TSV9GTEFHU19FTkFCTEUpOwoJ
CX0KCQlwb3MgPSBwY2lfZmluZF9uZXh0X2h0X2NhcGFiaWxpdHkoZGV2LCBwb3MsCgkJCQkJCSAg
SFRfQ0FQVFlQRV9NU0lfTUFQUElORyk7Cgl9Cn0KCnN0YXRpYyB2b2lkIF9fbnZfbXNpX2h0X2Nh
cF9xdWlyayhzdHJ1Y3QgcGNpX2RldiAqZGV2LCBpbnQgYWxsKQp7CglzdHJ1Y3QgcGNpX2RldiAq
aG9zdF9icmlkZ2U7CglpbnQgcG9zOwoJaW50IGZvdW5kOwoKCWlmICghcGNpX21zaV9lbmFibGVk
KCkpCgkJcmV0dXJuOwoKCS8qIGNoZWNrIGlmIHRoZXJlIGlzIEhUIE1TSSBjYXAgb3IgZW5hYmxl
ZCBvbiB0aGlzIGRldmljZSAqLwoJZm91bmQgPSBodF9jaGVja19tc2lfbWFwcGluZyhkZXYpOwoK
CS8qIG5vIEhUIE1TSSBDQVAgKi8KCWlmIChmb3VuZCA9PSAwKQoJCXJldHVybjsKCgkvKgoJICog
SFQgTVNJIG1hcHBpbmcgc2hvdWxkIGJlIGRpc2FibGVkIG9uIGRldmljZXMgdGhhdCBhcmUgYmVs
b3cKCSAqIGEgbm9uLUh5cGVydHJhbnNwb3J0IGhvc3QgYnJpZGdlLiBMb2NhdGUgdGhlIGhvc3Qg
YnJpZGdlLi4uCgkgKi8KCWhvc3RfYnJpZGdlID0gcGNpX2dldF9kb21haW5fYnVzX2FuZF9zbG90
KHBjaV9kb21haW5fbnIoZGV2LT5idXMpLCAwLAoJCQkJCQkgIFBDSV9ERVZGTigwLCAwKSk7Cglp
ZiAoaG9zdF9icmlkZ2UgPT0gTlVMTCkgewoJCXBjaV93YXJuKGRldiwgIm52X21zaV9odF9jYXBf
cXVpcmsgZGlkbid0IGxvY2F0ZSBob3N0IGJyaWRnZVxuIik7CgkJcmV0dXJuOwoJfQoKCXBvcyA9
IHBjaV9maW5kX2h0X2NhcGFiaWxpdHkoaG9zdF9icmlkZ2UsIEhUX0NBUFRZUEVfU0xBVkUpOwoJ
aWYgKHBvcyAhPSAwKSB7CgkJLyogSG9zdCBicmlkZ2UgaXMgdG8gSFQgKi8KCQlpZiAoZm91bmQg
PT0gMSkgewoJCQkvKiBpdCBpcyBub3QgZW5hYmxlZCwgdHJ5IHRvIGVuYWJsZSBpdCAqLwoJCQlp
ZiAoYWxsKQoJCQkJaHRfZW5hYmxlX21zaV9tYXBwaW5nKGRldik7CgkJCWVsc2UKCQkJCW52X2h0
X2VuYWJsZV9tc2lfbWFwcGluZyhkZXYpOwoJCX0KCQlnb3RvIG91dDsKCX0KCgkvKiBIVCBNU0kg
aXMgbm90IGVuYWJsZWQgKi8KCWlmIChmb3VuZCA9PSAxKQoJCWdvdG8gb3V0OwoKCS8qIEhvc3Qg
YnJpZGdlIGlzIG5vdCB0byBIVCwgZGlzYWJsZSBIVCBNU0kgbWFwcGluZyBvbiB0aGlzIGRldmlj
ZSAqLwoJaHRfZGlzYWJsZV9tc2lfbWFwcGluZyhkZXYpOwoKb3V0OgoJcGNpX2Rldl9wdXQoaG9z
dF9icmlkZ2UpOwp9CgpzdGF0aWMgdm9pZCBudl9tc2lfaHRfY2FwX3F1aXJrX2FsbChzdHJ1Y3Qg
cGNpX2RldiAqZGV2KQp7CglyZXR1cm4gX19udl9tc2lfaHRfY2FwX3F1aXJrKGRldiwgMSk7Cn0K
REVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BTCwgUENJX0FOWV9JRCwgbnZf
bXNpX2h0X2NhcF9xdWlya19hbGwpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9BTCwgUENJX0FOWV9JRCwgbnZfbXNpX2h0X2NhcF9xdWlya19hbGwpOwoKc3Rh
dGljIHZvaWQgbnZfbXNpX2h0X2NhcF9xdWlya19sZWFmKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsK
CXJldHVybiBfX252X21zaV9odF9jYXBfcXVpcmsoZGV2LCAwKTsKfQpERUNMQVJFX1BDSV9GSVhV
UF9GSU5BTChQQ0lfVkVORE9SX0lEX05WSURJQSwgUENJX0FOWV9JRCwgbnZfbXNpX2h0X2NhcF9x
dWlya19sZWFmKTsKREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURf
TlZJRElBLCBQQ0lfQU5ZX0lELCBudl9tc2lfaHRfY2FwX3F1aXJrX2xlYWYpOwoKc3RhdGljIHZv
aWQgcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9idWcoc3RydWN0IHBjaV9kZXYgKmRldikKewoJZGV2
LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFHU19NU0lfSU5UWF9ESVNBQkxFX0JVRzsKfQoKc3Rh
dGljIHZvaWQgcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9hdGlfYnVnKHN0cnVjdCBwY2lfZGV2ICpk
ZXYpCnsKCXN0cnVjdCBwY2lfZGV2ICpwOwoKCS8qCgkgKiBTQjcwMCBNU0kgaXNzdWUgd2lsbCBi
ZSBmaXhlZCBhdCBIVyBsZXZlbCBmcm9tIHJldmlzaW9uIEEyMTsKCSAqIHdlIG5lZWQgY2hlY2sg
UENJIFJFVklTSU9OIElEIG9mIFNNQnVzIGNvbnRyb2xsZXIgdG8gZ2V0IFNCNzAwCgkgKiByZXZp
c2lvbi4KCSAqLwoJcCA9IHBjaV9nZXRfZGV2aWNlKFBDSV9WRU5ET1JfSURfQVRJLCBQQ0lfREVW
SUNFX0lEX0FUSV9TQlgwMF9TTUJVUywKCQkJICAgTlVMTCk7CglpZiAoIXApCgkJcmV0dXJuOwoK
CWlmICgocC0+cmV2aXNpb24gPCAweDNCKSAmJiAocC0+cmV2aXNpb24gPj0gMHgzMCkpCgkJZGV2
LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFHU19NU0lfSU5UWF9ESVNBQkxFX0JVRzsKCXBjaV9k
ZXZfcHV0KHApOwp9CgpzdGF0aWMgdm9pZCBxdWlya19tc2lfaW50eF9kaXNhYmxlX3FjYV9idWco
c3RydWN0IHBjaV9kZXYgKmRldikKewoJLyogQVI4MTZYL0FSODE3WC9FMjEwWCBNU0kgaXMgZml4
ZWQgYXQgSFcgbGV2ZWwgZnJvbSByZXZpc2lvbiAweDE4ICovCglpZiAoZGV2LT5yZXZpc2lvbiA8
IDB4MTgpIHsKCQlwY2lfaW5mbyhkZXYsICJzZXQgTVNJX0lOVFhfRElTQUJMRV9CVUcgZmxhZ1xu
Iik7CgkJZGV2LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFHU19NU0lfSU5UWF9ESVNBQkxFX0JV
RzsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0JST0FEQ09NLAoJ
CQlQQ0lfREVWSUNFX0lEX1RJR09OM181NzgwLAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX2J1
Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQlJPQURDT00sCgkJCVBD
SV9ERVZJQ0VfSURfVElHT04zXzU3ODBTLAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX2J1Zyk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQlJPQURDT00sCgkJCVBDSV9E
RVZJQ0VfSURfVElHT04zXzU3MTQsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKTsKREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9CUk9BRENPTSwKCQkJUENJX0RFVklD
RV9JRF9USUdPTjNfNTcxNFMsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9CUk9BRENPTSwKCQkJUENJX0RFVklDRV9J
RF9USUdPTjNfNTcxNSwKCQkJcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9idWcpOwpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0JST0FEQ09NLAoJCQlQQ0lfREVWSUNFX0lEX1RJ
R09OM181NzE1UywKCQkJcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9idWcpOwoKREVDTEFSRV9QQ0lf
RklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM5MCwKCQkJcXVpcmtfbXNpX2ludHhf
ZGlzYWJsZV9hdGlfYnVnKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9B
VEksIDB4NDM5MSwKCQkJcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9hdGlfYnVnKTsKREVDTEFSRV9Q
Q0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM5MiwKCQkJcXVpcmtfbXNpX2lu
dHhfZGlzYWJsZV9hdGlfYnVnKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9J
RF9BVEksIDB4NDM5MywKCQkJcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9hdGlfYnVnKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM5NCwKCQkJcXVpcmtfbXNp
X2ludHhfZGlzYWJsZV9hdGlfYnVnKTsKCkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5E
T1JfSURfQVRJLCAweDQzNzMsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4NDM3NCwKCQkJcXVpcmtfbXNp
X2ludHhfZGlzYWJsZV9idWcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lE
X0FUSSwgMHg0Mzc1LAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX2J1Zyk7CgpERUNMQVJFX1BD
SV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUVEFOU0lDLCAweDEwNjIsCgkJCXF1aXJrX21z
aV9pbnR4X2Rpc2FibGVfYnVnKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9J
RF9BVFRBTlNJQywgMHgxMDYzLAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX2J1Zyk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRUQU5TSUMsIDB4MjA2MCwKCQkJcXVp
cmtfbXNpX2ludHhfZGlzYWJsZV9idWcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0FUVEFOU0lDLCAweDIwNjIsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfYnVnKTsK
REVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVFRBTlNJQywgMHgxMDczLAoJ
CQlxdWlya19tc2lfaW50eF9kaXNhYmxlX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfQVRUQU5TSUMsIDB4MTA4MywKCQkJcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9i
dWcpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUVEFOU0lDLCAweDEw
OTAsCgkJCXF1aXJrX21zaV9pbnR4X2Rpc2FibGVfcWNhX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfQVRUQU5TSUMsIDB4MTA5MSwKCQkJcXVpcmtfbXNpX2ludHhf
ZGlzYWJsZV9xY2FfYnVnKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9B
VFRBTlNJQywgMHgxMGEwLAoJCQlxdWlya19tc2lfaW50eF9kaXNhYmxlX3FjYV9idWcpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0FUVEFOU0lDLCAweDEwYTEsCgkJCXF1
aXJrX21zaV9pbnR4X2Rpc2FibGVfcWNhX2J1Zyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfQVRUQU5TSUMsIDB4ZTA5MSwKCQkJcXVpcmtfbXNpX2ludHhfZGlzYWJsZV9x
Y2FfYnVnKTsKI2VuZGlmIC8qIENPTkZJR19QQ0lfTVNJICovCgovKgogKiBBbGxvdyBtYW51YWwg
cmVzb3VyY2UgYWxsb2NhdGlvbiBmb3IgUENJIGhvdHBsdWcgYnJpZGdlcyB2aWEKICogcGNpPWhw
bWVtc2l6ZT1ubk0gYW5kIHBjaT1ocGlvc2l6ZT1ubk0gcGFyYW1ldGVycy4gRm9yIHNvbWUgUENJ
LVBDSQogKiBob3RwbHVnIGJyaWRnZXMsIGxpa2UgUExYIDYyNTQgKGZvcm1lciBISU5UIEhCNiks
IGtlcm5lbCBmYWlscyB0bwogKiBhbGxvY2F0ZSByZXNvdXJjZXMgd2hlbiBob3RwbHVnIGRldmlj
ZSBpcyBpbnNlcnRlZCBhbmQgUENJIGJ1cyBpcwogKiByZXNjYW5uZWQuCiAqLwpzdGF0aWMgdm9p
ZCBxdWlya19ob3RwbHVnX2JyaWRnZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPmlzX2hv
dHBsdWdfYnJpZGdlID0gMTsKfQpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9J
RF9ISU5ULCAweDAwMjAsIHF1aXJrX2hvdHBsdWdfYnJpZGdlKTsKCi8qCiAqIFRoaXMgaXMgYSBx
dWlyayBmb3IgdGhlIFJpY29oIE1NQyBjb250cm9sbGVyIGZvdW5kIGFzIGEgcGFydCBvZiBzb21l
CiAqIG11bHRpZnVuY3Rpb24gY2hpcHMuCiAqCiAqIFRoaXMgaXMgdmVyeSBzaW1pbGFyIGFuZCBi
YXNlZCBvbiB0aGUgcmljb2hfbW1jIGRyaXZlciB3cml0dGVuIGJ5CiAqIFBoaWxpcCBMYW5nZGFs
ZS4gVGhhbmsgeW91IGZvciB0aGVzZSBtYWdpYyBzZXF1ZW5jZXMuCiAqCiAqIFRoZXNlIGNoaXBz
IGltcGxlbWVudCB0aGUgZm91ciBtYWluIG1lbW9yeSBjYXJkIGNvbnRyb2xsZXJzIChTRCwgTU1D
LAogKiBNUywgeEQpIGFuZCBvbmUgb3IgYm90aCBvZiBDYXJkQnVzIG9yIEZpcmVXaXJlLgogKgog
KiBJdCBoYXBwZW5zIHRoYXQgdGhleSBpbXBsZW1lbnQgU0QgYW5kIE1NQyBzdXBwb3J0IGFzIHNl
cGFyYXRlCiAqIGNvbnRyb2xsZXJzIChhbmQgUENJIGZ1bmN0aW9ucykuIFRoZSBMaW51eCBTREhD
SSBkcml2ZXIgc3VwcG9ydHMgTU1DCiAqIGNhcmRzIGJ1dCB0aGUgY2hpcCBkZXRlY3RzIE1NQyBj
YXJkcyBpbiBoYXJkd2FyZSBhbmQgZGlyZWN0cyB0aGVtIHRvIHRoZQogKiBNTUMgY29udHJvbGxl
ciAtIHNvIHRoZSBTREhDSSBkcml2ZXIgbmV2ZXIgc2VlcyB0aGVtLgogKgogKiBUbyBnZXQgYXJv
dW5kIHRoaXMsIHdlIG11c3QgZGlzYWJsZSB0aGUgdXNlbGVzcyBNTUMgY29udHJvbGxlci4gIEF0
IHRoYXQKICogcG9pbnQsIHRoZSBTREhDSSBjb250cm9sbGVyIHdpbGwgc3RhcnQgc2VlaW5nIHRo
ZW0uICBJdCBzZWVtcyB0byBiZSB0aGUKICogY2FzZSB0aGF0IHRoZSByZWxldmFudCBQQ0kgcmVn
aXN0ZXJzIHRvIGRlYWN0aXZhdGUgdGhlIE1NQyBjb250cm9sbGVyCiAqIGxpdmUgb24gUENJIGZ1
bmN0aW9uIDAsIHdoaWNoIG1pZ2h0IGJlIHRoZSBDYXJkQnVzIGNvbnRyb2xsZXIgb3IgdGhlCiAq
IEZpcmVXaXJlIGNvbnRyb2xsZXIsIGRlcGVuZGluZyBvbiB0aGUgcGFydGljdWxhciBjaGlwIGlu
IHF1ZXN0aW9uCiAqCiAqIFRoaXMgaGFzIHRvIGJlIGRvbmUgZWFybHksIGJlY2F1c2UgYXMgc29v
biBhcyB3ZSBkaXNhYmxlIHRoZSBNTUMgY29udHJvbGxlcgogKiBvdGhlciBQQ0kgZnVuY3Rpb25z
IHNoaWZ0IHVwIG9uZSBsZXZlbCwgZS5nLiBmdW5jdGlvbiAjMiBiZWNvbWVzIGZ1bmN0aW9uCiAq
ICMxLCBhbmQgdGhpcyB3aWxsIGNvbmZ1c2UgdGhlIFBDSSBjb3JlLgogKi8KI2lmZGVmIENPTkZJ
R19NTUNfUklDT0hfTU1DCi1zdGF0aWMgdm9pZCByaWNvaF9tbWNfZml4dXBfcmw1YzQ3NihzdHJ1
Y3QgcGNpX2RldiAqZGV2KQotewotICAgICAgIHU4IHdyaXRlX2VuYWJsZTsKLSAgICAgICB1OCB3
cml0ZV90YXJnZXQ7Ci0gICAgICAgdTggZGlzYWJsZTsKLQotICAgICAgIC8qCi0gICAgICAgICog
RGlzYWJsZSB2aWEgQ2FyZEJ1cyBpbnRlcmZhY2UKLSAgICAgICAgKgotICAgICAgICAqIFRoaXMg
bXVzdCBiZSBkb25lIHZpYSBmdW5jdGlvbiAjMAotICAgICAgICAqLwotICAgICAgIGlmIChQQ0lf
RlVOQyhkZXYtPmRldmZuKSkKLSAgICAgICAgICAgICAgIHJldHVybjsKLQotICAgICAgIHBjaV9y
ZWFkX2NvbmZpZ19ieXRlKGRldiwgMHhCNywgJmRpc2FibGUpOwotICAgICAgIGlmIChkaXNhYmxl
ICYgMHgwMikKLSAgICAgICAgICAgICAgIHJldHVybjsKLQotICAgICAgIHBjaV9yZWFkX2NvbmZp
Z19ieXRlKGRldiwgMHg4RSwgJndyaXRlX2VuYWJsZSk7Ci0gICAgICAgcGNpX3dyaXRlX2NvbmZp
Z19ieXRlKGRldiwgMHg4RSwgMHhBQSk7Ci0gICAgICAgcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2
LCAweDhELCAmd3JpdGVfdGFyZ2V0KTsKLSAgICAgICBwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2
LCAweDhELCAweEI3KTsKLSAgICAgICBwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCAweEI3LCBk
aXNhYmxlIHwgMHgwMik7Ci0gICAgICAgcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHg4RSwg
d3JpdGVfZW5hYmxlKTsKLSAgICAgICBwY2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCAweDhELCB3
cml0ZV90YXJnZXQpOwotCi0gICAgICAgcGNpX25vdGljZShkZXYsICJwcm9wcmlldGFyeSBSaWNv
aCBNTUMgY29udHJvbGxlciBkaXNhYmxlZCAodmlhIENhcmRCdXMgZnVuY3Rpb24pXG4iKTsKLSAg
ICAgICBwY2lfbm90aWNlKGRldiwgIk1NQyBjYXJkcyBhcmUgbm93IHN1cHBvcnRlZCBieSBzdGFu
ZGFyZCBTREhDSSBjb250cm9sbGVyXG4iKTsKLX0KLURFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBD
SV9WRU5ET1JfSURfUklDT0gsIFBDSV9ERVZJQ0VfSURfUklDT0hfUkw1QzQ3Niwgcmljb2hfbW1j
X2ZpeHVwX3JsNWM0NzYpOwotREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5E
T1JfSURfUklDT0gsIFBDSV9ERVZJQ0VfSURfUklDT0hfUkw1QzQ3Niwgcmljb2hfbW1jX2ZpeHVw
X3JsNWM0NzYpOwotCiBzdGF0aWMgdm9pZCByaWNvaF9tbWNfZml4dXBfcjVjODMyKHN0cnVjdCBw
Y2lfZGV2ICpkZXYpCiB7CiAgICAgICAgdTggd3JpdGVfZW5hYmxlOwoKCS8qCgkgKiBEaXNhYmxl
IHZpYSBGaXJlV2lyZSBpbnRlcmZhY2UKCSAqCgkgKiBUaGlzIG11c3QgYmUgZG9uZSB2aWEgZnVu
Y3Rpb24gIzAKCSAqLwoJaWYgKFBDSV9GVU5DKGRldi0+ZGV2Zm4pKQoJCXJldHVybjsKCS8qCgkg
KiBSSUNPSCAweGU4MjIgYW5kIDB4ZTgyMyBTRC9NTUMgY2FyZCByZWFkZXJzIGZhaWwgdG8gcmVj
b2duaXplCgkgKiBjZXJ0YWluIHR5cGVzIG9mIFNEL01NQyBjYXJkcy4gTG93ZXJpbmcgdGhlIFNE
IGJhc2UgY2xvY2sKCSAqIGZyZXF1ZW5jeSBmcm9tIDIwME1oeiB0byA1ME1oeiBmaXhlcyB0aGlz
IGlzc3VlLgoJICoKCSAqIDB4MTUwIC0gU0QyLjAgbW9kZSBlbmFibGUgZm9yIGNoYW5naW5nIGJh
c2UgY2xvY2sKCSAqCSAgIGZyZXF1ZW5jeSB0byA1ME1oegoJICogMHhlMSAgLSBCYXNlIGNsb2Nr
IGZyZXF1ZW5jeQoJICogMHgzMiAgLSA1ME1oeiBuZXcgY2xvY2sgZnJlcXVlbmN5CgkgKiAweGY5
ICAtIEtleSByZWdpc3RlciBmb3IgMHgxNTAKCSAqIDB4ZmMgIC0ga2V5IHJlZ2lzdGVyIGZvciAw
eGUxCgkgKi8KCWlmIChkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX1JJQ09IX1I1Q0U4MjIg
fHwKCSAgICBkZXYtPmRldmljZSA9PSBQQ0lfREVWSUNFX0lEX1JJQ09IX1I1Q0U4MjMpIHsKCQlw
Y2lfd3JpdGVfY29uZmlnX2J5dGUoZGV2LCAweGY5LCAweGZjKTsKCQlwY2lfd3JpdGVfY29uZmln
X2J5dGUoZGV2LCAweDE1MCwgMHgxMCk7CgkJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHhm
OSwgMHgwMCk7CgkJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHhmYywgMHgwMSk7CgkJcGNp
X3dyaXRlX2NvbmZpZ19ieXRlKGRldiwgMHhlMSwgMHgzMik7CgkJcGNpX3dyaXRlX2NvbmZpZ19i
eXRlKGRldiwgMHhmYywgMHgwMCk7CgoJCXBjaV9ub3RpY2UoZGV2LCAiTU1DIGNvbnRyb2xsZXIg
YmFzZSBmcmVxdWVuY3kgY2hhbmdlZCB0byA1ME1oei5cbiIpOwoJfQoKCXBjaV9yZWFkX2NvbmZp
Z19ieXRlKGRldiwgMHhDQiwgJmRpc2FibGUpOwoKCWlmIChkaXNhYmxlICYgMHgwMikKCQlyZXR1
cm47CgoJcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCAweENBLCAmd3JpdGVfZW5hYmxlKTsKCXBj
aV93cml0ZV9jb25maWdfYnl0ZShkZXYsIDB4Q0EsIDB4NTcpOwoJcGNpX3dyaXRlX2NvbmZpZ19i
eXRlKGRldiwgMHhDQiwgZGlzYWJsZSB8IDB4MDIpOwoJcGNpX3dyaXRlX2NvbmZpZ19ieXRlKGRl
diwgMHhDQSwgd3JpdGVfZW5hYmxlKTsKCglwY2lfbm90aWNlKGRldiwgInByb3ByaWV0YXJ5IFJp
Y29oIE1NQyBjb250cm9sbGVyIGRpc2FibGVkICh2aWEgRmlyZVdpcmUgZnVuY3Rpb24pXG4iKTsK
CXBjaV9ub3RpY2UoZGV2LCAiTU1DIGNhcmRzIGFyZSBub3cgc3VwcG9ydGVkIGJ5IHN0YW5kYXJk
IFNESENJIGNvbnRyb2xsZXJcbiIpOwoKfQpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVO
RE9SX0lEX1JJQ09ILCBQQ0lfREVWSUNFX0lEX1JJQ09IX1I1QzgzMiwgcmljb2hfbW1jX2ZpeHVw
X3I1YzgzMik7CkRFQ0xBUkVfUENJX0ZJWFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX1JJ
Q09ILCBQQ0lfREVWSUNFX0lEX1JJQ09IX1I1QzgzMiwgcmljb2hfbW1jX2ZpeHVwX3I1YzgzMik7
CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfUklDT0gsIFBDSV9ERVZJQ0Vf
SURfUklDT0hfUjVDRTgyMiwgcmljb2hfbW1jX2ZpeHVwX3I1YzgzMik7CkRFQ0xBUkVfUENJX0ZJ
WFVQX1JFU1VNRV9FQVJMWShQQ0lfVkVORE9SX0lEX1JJQ09ILCBQQ0lfREVWSUNFX0lEX1JJQ09I
X1I1Q0U4MjIsIHJpY29oX21tY19maXh1cF9yNWM4MzIpOwpERUNMQVJFX1BDSV9GSVhVUF9FQVJM
WShQQ0lfVkVORE9SX0lEX1JJQ09ILCBQQ0lfREVWSUNFX0lEX1JJQ09IX1I1Q0U4MjMsIHJpY29o
X21tY19maXh1cF9yNWM4MzIpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZF
TkRPUl9JRF9SSUNPSCwgUENJX0RFVklDRV9JRF9SSUNPSF9SNUNFODIzLCByaWNvaF9tbWNfZml4
dXBfcjVjODMyKTsKI2VuZGlmIC8qQ09ORklHX01NQ19SSUNPSF9NTUMqLwoKI2lmZGVmIENPTkZJ
R19ETUFSX1RBQkxFCiNkZWZpbmUgVlRVTkNFUlJNU0tfUkVHCTB4MWFjCiNkZWZpbmUgVlREX01T
S19TUEVDX0VSUk9SUwkoMSA8PCAzMSkKLyoKICogVGhpcyBpcyBhIHF1aXJrIGZvciBtYXNraW5n
IFZULWQgc3BlYy1kZWZpbmVkIGVycm9ycyB0byBwbGF0Zm9ybSBlcnJvcgogKiBoYW5kbGluZyBs
b2dpYy4gV2l0aG91dCB0aGlzLCBwbGF0Zm9ybXMgdXNpbmcgSW50ZWwgNzUwMCwgNTUwMCBjaGlw
c2V0cwogKiAoYW5kIHRoZSBkZXJpdmF0aXZlIGNoaXBzZXRzIGxpa2UgWDU4IGV0Yykgc2VlbSB0
byBnZW5lcmF0ZSBOTUkvU01JIChiYXNlZAogKiBvbiB0aGUgUkFTIGNvbmZpZyBzZXR0aW5ncyBv
ZiB0aGUgcGxhdGZvcm0pIHdoZW4gYSBWVC1kIGZhdWx0IGhhcHBlbnMuCiAqIFRoZSByZXN1bHRp
bmcgU01JIGNhdXNlZCB0aGUgc3lzdGVtIHRvIGhhbmcuCiAqCiAqIFZULWQgc3BlYy1yZWxhdGVk
IGVycm9ycyBhcmUgYWxyZWFkeSBoYW5kbGVkIGJ5IHRoZSBWVC1kIE9TIGNvZGUsIHNvIG5vCiAq
IG5lZWQgdG8gcmVwb3J0IHRoZSBzYW1lIGVycm9yIHRocm91Z2ggb3RoZXIgY2hhbm5lbHMuCiAq
LwpzdGF0aWMgdm9pZCB2dGRfbWFza19zcGVjX2Vycm9ycyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7
Cgl1MzIgd29yZDsKCglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCBWVFVOQ0VSUk1TS19SRUcs
ICZ3b3JkKTsKCXBjaV93cml0ZV9jb25maWdfZHdvcmQoZGV2LCBWVFVOQ0VSUk1TS19SRUcsIHdv
cmQgfCBWVERfTVNLX1NQRUNfRVJST1JTKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDM0MmUsIHZ0ZF9tYXNrX3NwZWNfZXJyb3JzKTsKREVDTEFSRV9Q
Q0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgzYzI4LCB2dGRfbWFza19zcGVj
X2Vycm9ycyk7CiNlbmRpZgoKc3RhdGljIHZvaWQgZml4dXBfdGk4MTZ4X2NsYXNzKHN0cnVjdCBw
Y2lfZGV2ICpkZXYpCnsKCXUzMiBjbGFzcyA9IGRldi0+Y2xhc3M7CgoJLyogVEkgODE2eCBkZXZp
Y2VzIGRvIG5vdCBoYXZlIGNsYXNzIGNvZGUgc2V0IHdoZW4gaW4gUENJZSBib290IG1vZGUgKi8K
CWRldi0+Y2xhc3MgPSBQQ0lfQ0xBU1NfTVVMVElNRURJQV9WSURFTyA8PCA4OwoJcGNpX2luZm8o
ZGV2LCAiUENJIGNsYXNzIG92ZXJyaWRkZW4gKCUjMDh4IC0+ICUjMDh4KVxuIiwKCQkgY2xhc3Ms
IGRldi0+Y2xhc3MpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1Jf
SURfVEksIDB4YjgwMCwKCQkJICAgICAgUENJX0NMQVNTX05PVF9ERUZJTkVELCA4LCBmaXh1cF90
aTgxNnhfY2xhc3MpOwoKLyoKICogU29tZSBQQ0llIGRldmljZXMgZG8gbm90IHdvcmsgcmVsaWFi
bHkgd2l0aCB0aGUgY2xhaW1lZCBtYXhpbXVtCiAqIHBheWxvYWQgc2l6ZSBzdXBwb3J0ZWQuCiAq
LwpzdGF0aWMgdm9pZCBmaXh1cF9tcHNzXzI1NihzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYt
PnBjaWVfbXBzcyA9IDE7IC8qIDI1NiBieXRlcyAqLwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURF
UihQQ0lfVkVORE9SX0lEX1NPTEFSRkxBUkUsCgkJCSBQQ0lfREVWSUNFX0lEX1NPTEFSRkxBUkVf
U0ZDNDAwMEFfMCwgZml4dXBfbXBzc18yNTYpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJ
X1ZFTkRPUl9JRF9TT0xBUkZMQVJFLAoJCQkgUENJX0RFVklDRV9JRF9TT0xBUkZMQVJFX1NGQzQw
MDBBXzEsIGZpeHVwX21wc3NfMjU2KTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5E
T1JfSURfU09MQVJGTEFSRSwKCQkJIFBDSV9ERVZJQ0VfSURfU09MQVJGTEFSRV9TRkM0MDAwQiwg
Zml4dXBfbXBzc18yNTYpOwoKLyoKICogSW50ZWwgNTAwMCBhbmQgNTEwMCBNZW1vcnkgY29udHJv
bGxlcnMgaGF2ZSBhbiBlcnJhdHVtIHdpdGggcmVhZCBjb21wbGV0aW9uCiAqIGNvYWxlc2Npbmcg
KHdoaWNoIGlzIGVuYWJsZWQgYnkgZGVmYXVsdCBvbiBzb21lIEJJT1NlcykgYW5kIE1QUyBvZiAy
NTZCLgogKiBTaW5jZSB0aGVyZSBpcyBubyB3YXkgb2Yga25vd2luZyB3aGF0IHRoZSBQQ0llIE1Q
UyBvbiBlYWNoIGZhYnJpYyB3aWxsIGJlCiAqIHVudGlsIGFsbCBvZiB0aGUgZGV2aWNlcyBhcmUg
ZGlzY292ZXJlZCBhbmQgYnVzZXMgd2Fsa2VkLCByZWFkIGNvbXBsZXRpb24KICogY29hbGVzY2lu
ZyBtdXN0IGJlIGRpc2FibGVkLiAgVW5mb3J0dW5hdGVseSwgaXQgY2Fubm90IGJlIHJlLWVuYWJs
ZWQgYmVjYXVzZQogKiBpdCBpcyBwb3NzaWJsZSB0byBob3RwbHVnIGEgZGV2aWNlIHdpdGggTVBT
IG9mIDI1NkIuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19pbnRlbF9tY19lcnJhdGEoc3RydWN0IHBj
aV9kZXYgKmRldikKewoJaW50IGVycjsKCXUxNiByY2M7CgoJaWYgKHBjaWVfYnVzX2NvbmZpZyA9
PSBQQ0lFX0JVU19UVU5FX09GRiB8fAoJICAgIHBjaWVfYnVzX2NvbmZpZyA9PSBQQ0lFX0JVU19E
RUZBVUxUKQoJCXJldHVybjsKCgkvKgoJICogSW50ZWwgZXJyYXR1bSBzcGVjaWZpZXMgYml0cyB0
byBjaGFuZ2UgYnV0IGRvZXMgbm90IHNheSB3aGF0CgkgKiB0aGV5IGFyZS4gIEtlZXBpbmcgdGhl
bSBtYWdpY2FsIHVudGlsIHN1Y2ggdGltZSBhcyB0aGUgcmVnaXN0ZXJzCgkgKiBhbmQgdmFsdWVz
IGNhbiBiZSBleHBsYWluZWQuCgkgKi8KCWVyciA9IHBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwg
MHg0OCwgJnJjYyk7CglpZiAoZXJyKSB7CgkJcGNpX2VycihkZXYsICJFcnJvciBhdHRlbXB0aW5n
IHRvIHJlYWQgdGhlIHJlYWQgY29tcGxldGlvbiBjb2FsZXNjaW5nIHJlZ2lzdGVyXG4iKTsKCQly
ZXR1cm47Cgl9CgoJaWYgKCEocmNjICYgKDEgPDwgMTApKSkKCQlyZXR1cm47CgoJcmNjICY9IH4o
MSA8PCAxMCk7CgoJZXJyID0gcGNpX3dyaXRlX2NvbmZpZ193b3JkKGRldiwgMHg0OCwgcmNjKTsK
CWlmIChlcnIpIHsKCQlwY2lfZXJyKGRldiwgIkVycm9yIGF0dGVtcHRpbmcgdG8gd3JpdGUgdGhl
IHJlYWQgY29tcGxldGlvbiBjb2FsZXNjaW5nIHJlZ2lzdGVyXG4iKTsKCQlyZXR1cm47Cgl9CgoJ
cHJfaW5mb19vbmNlKCJSZWFkIGNvbXBsZXRpb24gY29hbGVzY2luZyBkaXNhYmxlZCBkdWUgdG8g
aGFyZHdhcmUgZXJyYXR1bSByZWxhdGluZyB0byAyNTZCIE1QU1xuIik7Cn0KLyogSW50ZWwgNTAw
MCBzZXJpZXMgbWVtb3J5IGNvbnRyb2xsZXJzIGFuZCBwb3J0cyAyLTcgKi8KREVDTEFSRV9QQ0lf
RklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVjMCwgcXVpcmtfaW50ZWxfbWNf
ZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MjVkMCwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4MjVkNCwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFS
RV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVkOCwgcXVpcmtfaW50
ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MjVlMiwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVB
REVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVlMywgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsK
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVlNCwgcXVp
cmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4MjVlNSwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklY
VVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVlNiwgcXVpcmtfaW50ZWxfbWNfZXJy
YXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVl
NywgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MjVmNywgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9Q
Q0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVmOCwgcXVpcmtfaW50ZWxf
bWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUws
IDB4MjVmOSwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVS
KFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjVmYSwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKLyog
SW50ZWwgNTEwMCBzZXJpZXMgbWVtb3J5IGNvbnRyb2xsZXJzIGFuZCBwb3J0cyAyLTcgKi8KREVD
TEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NjVjMCwgcXVpcmtf
aW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURf
SU5URUwsIDB4NjVlMiwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBf
SEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NjVlMywgcXVpcmtfaW50ZWxfbWNfZXJyYXRh
KTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NjVlNCwg
cXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5E
T1JfSURfSU5URUwsIDB4NjVlNSwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lf
RklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NjVlNiwgcXVpcmtfaW50ZWxfbWNf
ZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
NjVlNywgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4NjVmNywgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFS
RV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NjVmOCwgcXVpcmtfaW50
ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4NjVmOSwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVB
REVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4NjVmYSwgcXVpcmtfaW50ZWxfbWNfZXJyYXRhKTsK
Ci8qCiAqIEl2eXRvd24gTlRCIEJBUiBzaXplcyBhcmUgbWlzcmVwb3J0ZWQgYnkgdGhlIGhhcmR3
YXJlIGR1ZSB0byBhbiBlcnJhdHVtLgogKiBUbyB3b3JrIGFyb3VuZCB0aGlzLCBxdWVyeSB0aGUg
c2l6ZSBpdCBzaG91bGQgYmUgY29uZmlndXJlZCB0byBieSB0aGUKICogZGV2aWNlIGFuZCBtb2Rp
ZnkgdGhlIHJlc291cmNlIGVuZCB0byBjb3JyZXNwb25kIHRvIHRoaXMgbmV3IHNpemUuCiAqLwpz
dGF0aWMgdm9pZCBxdWlya19pbnRlbF9udGIoc3RydWN0IHBjaV9kZXYgKmRldikKewoJaW50IHJj
OwoJdTggdmFsOwoKCXJjID0gcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCAweDAwRDAsICZ2YWwp
OwoJaWYgKHJjKQoJCXJldHVybjsKCglkZXYtPnJlc291cmNlWzJdLmVuZCA9IGRldi0+cmVzb3Vy
Y2VbMl0uc3RhcnQgKyAoKHU2NCkgMSA8PCB2YWwpIC0gMTsKCglyYyA9IHBjaV9yZWFkX2NvbmZp
Z19ieXRlKGRldiwgMHgwMEQxLCAmdmFsKTsKCWlmIChyYykKCQlyZXR1cm47CgoJZGV2LT5yZXNv
dXJjZVs0XS5lbmQgPSBkZXYtPnJlc291cmNlWzRdLnN0YXJ0ICsgKCh1NjQpIDEgPDwgdmFsKSAt
IDE7Cn0KREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MGUw
OCwgcXVpcmtfaW50ZWxfbnRiKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4MGUwZCwgcXVpcmtfaW50ZWxfbnRiKTsKCi8qCiAqIFNvbWUgQklPUyBpbXBs
ZW1lbnRhdGlvbnMgbGVhdmUgdGhlIEludGVsIEdQVSBpbnRlcnJ1cHRzIGVuYWJsZWQsIGV2ZW4K
ICogdGhvdWdoIG5vIG9uZSBpcyBoYW5kbGluZyB0aGVtIChlLmcuLCBpZiB0aGUgaTkxNSBkcml2
ZXIgaXMgbmV2ZXIKICogbG9hZGVkKS4gIEFkZGl0aW9uYWxseSB0aGUgaW50ZXJydXB0IGRlc3Rp
bmF0aW9uIGlzIG5vdCBzZXQgdXAgcHJvcGVybHkKICogYW5kIHRoZSBpbnRlcnJ1cHQgZW5kcyB1
cCAtc29tZXdoZXJlLS4KICoKICogVGhlc2Ugc3B1cmlvdXMgaW50ZXJydXB0cyBhcmUgInN0aWNr
eSIgYW5kIHRoZSBrZXJuZWwgZGlzYWJsZXMgdGhlCiAqIChzaGFyZWQpIGludGVycnVwdCBsaW5l
IGFmdGVyIDEwMCwwMDArIGdlbmVyYXRlZCBpbnRlcnJ1cHRzLgogKgogKiBGaXggaXQgYnkgZGlz
YWJsaW5nIHRoZSBzdGlsbCBlbmFibGVkIGludGVycnVwdHMuICBUaGlzIHJlc29sdmVzIGNyYXNo
ZXMKICogb2Z0ZW4gc2VlbiBvbiBtb25pdG9yIHVucGx1Zy4KICovCiNkZWZpbmUgSTkxNV9ERUlF
Ul9SRUcgMHg0NDAwYwpzdGF0aWMgdm9pZCBkaXNhYmxlX2lnZnhfaXJxKHN0cnVjdCBwY2lfZGV2
ICpkZXYpCnsKCXZvaWQgX19pb21lbSAqcmVncyA9IHBjaV9pb21hcChkZXYsIDAsIDApOwoJaWYg
KHJlZ3MgPT0gTlVMTCkgewoJCXBjaV93YXJuKGRldiwgImlnZnggcXVpcms6IENhbid0IGlvbWFw
IFBDSSBkZXZpY2VcbiIpOwoJCXJldHVybjsKCX0KCgkvKiBDaGVjayBpZiBhbnkgaW50ZXJydXB0
IGxpbmUgaXMgc3RpbGwgZW5hYmxlZCAqLwoJaWYgKHJlYWRsKHJlZ3MgKyBJOTE1X0RFSUVSX1JF
RykgIT0gMCkgewoJCXBjaV93YXJuKGRldiwgIkJJT1MgbGVmdCBJbnRlbCBHUFUgaW50ZXJydXB0
cyBlbmFibGVkOyBkaXNhYmxpbmdcbiIpOwoKCQl3cml0ZWwoMCwgcmVncyArIEk5MTVfREVJRVJf
UkVHKTsKCX0KCglwY2lfaW91bm1hcChkZXYsIHJlZ3MpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MDA0MiwgZGlzYWJsZV9pZ2Z4X2lycSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MDA0NiwgZGlzYWJsZV9p
Z2Z4X2lycSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MDA0YSwgZGlzYWJsZV9pZ2Z4X2lycSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5E
T1JfSURfSU5URUwsIDB4MDEwMiwgZGlzYWJsZV9pZ2Z4X2lycSk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MDEwNiwgZGlzYWJsZV9pZ2Z4X2lycSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MDEwYSwgZGlzYWJs
ZV9pZ2Z4X2lycSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUws
IDB4MDE1MiwgZGlzYWJsZV9pZ2Z4X2lycSk7CgovKgogKiBQQ0kgZGV2aWNlcyB3aGljaCBhcmUg
b24gSW50ZWwgY2hpcHMgY2FuIHNraXAgdGhlIDEwbXMgZGVsYXkKICogYmVmb3JlIGVudGVyaW5n
IEQzIG1vZGUuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19yZW1vdmVfZDNfZGVsYXkoc3RydWN0IHBj
aV9kZXYgKmRldikKewoJZGV2LT5kM19kZWxheSA9IDA7Cn0KLyogQzYwMCBTZXJpZXMgZGV2aWNl
cyBkbyBub3QgbmVlZCAxMG1zIGQzX2RlbGF5ICovCkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4MDQxMiwgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgwYzAwLCBxdWlya19yZW1v
dmVfZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVM
LCAweDBjMGMsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7Ci8qIEx5bnhwb2ludC1IIFBDSCBkZXZp
Y2VzIGRvIG5vdCBuZWVkIDEwbXMgZDNfZGVsYXkgKi8KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
UENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzAyLCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDhjMTgsIHF1aXJrX3Jl
bW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4OGMxYywgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBfRklO
QUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzIwLCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwpE
RUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDhjMjIsIHF1aXJr
X3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURf
SU5URUwsIDB4OGMyNiwgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBf
RklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzJkLCBxdWlya19yZW1vdmVfZDNfZGVsYXkp
OwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDhjMzEsIHF1
aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4OGMzYSwgcXVpcmtfcmVtb3ZlX2QzX2RlbGF5KTsKREVDTEFSRV9QQ0lfRklY
VVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg4YzNkLCBxdWlya19yZW1vdmVfZDNfZGVs
YXkpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDhjNGUs
IHF1aXJrX3JlbW92ZV9kM19kZWxheSk7Ci8qIEludGVsIENoZXJyeXRyYWlsIGRldmljZXMgZG8g
bm90IG5lZWQgMTBtcyBkM19kZWxheSAqLwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0lOVEVMLCAweDIyODAsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjI5OCwgcXVpcmtfcmVtb3ZlX2Qz
X2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgy
MjljLCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDIyYjAsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjJiNSwgcXVpcmtfcmVtb3Zl
X2QzX2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHgyMmI3LCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwpERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDIyYjgsIHF1aXJrX3JlbW92ZV9kM19kZWxheSk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjJkOCwgcXVpcmtfcmVt
b3ZlX2QzX2RlbGF5KTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRF
TCwgMHgyMmRjLCBxdWlya19yZW1vdmVfZDNfZGVsYXkpOwoKLyoKICogU29tZSBkZXZpY2VzIG1h
eSBwYXNzIG91ciBjaGVjayBpbiBwY2lfaW50eF9tYXNrX3N1cHBvcnRlZCgpIGlmCiAqIFBDSV9D
T01NQU5EX0lOVFhfRElTQUJMRSB3b3JrcyB0aG91Z2ggdGhleSBhY3R1YWxseSBkbyBub3QgcHJv
cGVybHkKICogc3VwcG9ydCB0aGlzIGZlYXR1cmUuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19icm9r
ZW5faW50eF9tYXNraW5nKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWRldi0+YnJva2VuX2ludHhf
bWFza2luZyA9IDE7Cn0KREVDTEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9DSEVM
U0lPLCAweDAwMzAsCgkJCXF1aXJrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwpERUNMQVJFX1BDSV9G
SVhVUF9GSU5BTCgweDE4MTQsIDB4MDYwMSwgLyogUmFsaW5rIFJUMjgwMCA4MDIuMTFuIFBDSSAq
LwoJCQlxdWlya19icm9rZW5faW50eF9tYXNraW5nKTsKREVDTEFSRV9QQ0lfRklYVVBfRklOQUwo
MHgxYjdjLCAweDAwMDQsIC8qIENldG9uIEluZmluaVRWNCAqLwoJCQlxdWlya19icm9rZW5faW50
eF9tYXNraW5nKTsKCi8qCiAqIFJlYWx0ZWsgUlRMODE2OSBQQ0kgR2lnYWJpdCBFdGhlcm5ldCBD
b250cm9sbGVyIChyZXYgMTApCiAqIFN1YnN5c3RlbTogUmVhbHRlayBSVEw4MTY5LzgxMTAgRmFt
aWx5IFBDSSBHaWdhYml0IEV0aGVybmV0IE5JQwogKgogKiBSVEw4MTEwU0MgLSBGYWlscyB1bmRl
ciBQQ0kgZGV2aWNlIGFzc2lnbm1lbnQgdXNpbmcgRGlzSU5UeCBtYXNraW5nLgogKi8KREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9SRUFMVEVLLCAweDgxNjksCgkJCXF1aXJr
X2Jyb2tlbl9pbnR4X21hc2tpbmcpOwoKLyoKICogSW50ZWwgaTQwZSAoWEw3MTAvWDcxMCkgMTAv
MjAvNDBHYkUgTklDcyBhbGwgaGF2ZSBicm9rZW4gSU5UeCBtYXNraW5nLAogKiBEaXNJTlR4IGNh
biBiZSBzZXQgYnV0IHRoZSBpbnRlcnJ1cHQgc3RhdHVzIGJpdCBpcyBub24tZnVuY3Rpb25hbC4K
ICovCkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU3Miwg
cXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MTU3NCwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xB
UkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU4MCwgcXVpcmtfYnJv
a2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURf
SU5URUwsIDB4MTU4MSwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJ
WFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU4MywgcXVpcmtfYnJva2VuX2ludHhf
bWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MTU4NCwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU4NSwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU4NiwgcXVp
cmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5E
T1JfSURfSU5URUwsIDB4MTU4NywgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVf
UENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU4OCwgcXVpcmtfYnJva2Vu
X2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTU4OSwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQ
X0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU4YSwgcXVpcmtfYnJva2VuX2ludHhfbWFz
a2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU4
YiwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBD
SV9WRU5ET1JfSURfSU5URUwsIDB4MzdkMCwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MzdkMSwgcXVpcmtf
YnJva2VuX2ludHhfbWFza2luZyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4MzdkMiwgcXVpcmtfYnJva2VuX2ludHhfbWFza2luZyk7CgpzdGF0aWMgdTE2
IG1lbGxhbm94X2Jyb2tlbl9pbnR4X2RldnNbXSA9IHsKCVBDSV9ERVZJQ0VfSURfTUVMTEFOT1hf
SEVSTU9OX1NEUiwKCVBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfSEVSTU9OX0REUiwKCVBDSV9ERVZJ
Q0VfSURfTUVMTEFOT1hfSEVSTU9OX1FEUiwKCVBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfSEVSTU9O
X0REUl9HRU4yLAoJUENJX0RFVklDRV9JRF9NRUxMQU5PWF9IRVJNT05fUURSX0dFTjIsCglQQ0lf
REVWSUNFX0lEX01FTExBTk9YX0hFUk1PTl9FTiwKCVBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfSEVS
TU9OX0VOX0dFTjIsCglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0NPTk5FQ1RYX0VOLAoJUENJX0RF
VklDRV9JRF9NRUxMQU5PWF9DT05ORUNUWF9FTl9UX0dFTjIsCglQQ0lfREVWSUNFX0lEX01FTExB
Tk9YX0NPTk5FQ1RYX0VOX0dFTjIsCglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0NPTk5FQ1RYX0VO
XzVfR0VOMiwKCVBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfQ09OTkVDVFgyLAoJUENJX0RFVklDRV9J
RF9NRUxMQU5PWF9DT05ORUNUWDMsCglQQ0lfREVWSUNFX0lEX01FTExBTk9YX0NPTk5FQ1RYM19Q
Uk8sCn07CgojZGVmaW5lIENPTk5FQ1RYXzRfQ1VSUl9NQVhfTUlOT1IgOTkKI2RlZmluZSBDT05O
RUNUWF80X0lOVFhfU1VQUE9SVF9NSU5PUiAxNAoKLyoKICogQ2hlY2sgQ29ubmVjdFgtNC9MWCBG
VyB2ZXJzaW9uIHRvIHNlZSBpZiBpdCBzdXBwb3J0cyBsZWdhY3kgaW50ZXJydXB0cy4KICogSWYg
c28sIGRvbid0IG1hcmsgaXQgYXMgYnJva2VuLgogKiBGVyBtaW5vciA+IDk5IG1lYW5zIG9sZGVy
IEZXIHZlcnNpb24gZm9ybWF0IGFuZCBubyBJTlR4IG1hc2tpbmcgc3VwcG9ydC4KICogRlcgbWlu
b3IgPCAxNCBtZWFucyBuZXcgRlcgdmVyc2lvbiBmb3JtYXQgYW5kIG5vIElOVHggbWFza2luZyBz
dXBwb3J0LgogKi8Kc3RhdGljIHZvaWQgbWVsbGFub3hfY2hlY2tfYnJva2VuX2ludHhfbWFza2lu
ZyhzdHJ1Y3QgcGNpX2RldiAqcGRldikKewoJX19iZTMyIF9faW9tZW0gKmZ3X3ZlcjsKCXUxNiBm
d19tYWpvcjsKCXUxNiBmd19taW5vcjsKCXUxNiBmd19zdWJtaW5vcjsKCXUzMiBmd19tYWpfbWlu
OwoJdTMyIGZ3X3N1Yl9taW47CglpbnQgaTsKCglmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRSht
ZWxsYW5veF9icm9rZW5faW50eF9kZXZzKTsgaSsrKSB7CgkJaWYgKHBkZXYtPmRldmljZSA9PSBt
ZWxsYW5veF9icm9rZW5faW50eF9kZXZzW2ldKSB7CgkJCXBkZXYtPmJyb2tlbl9pbnR4X21hc2tp
bmcgPSAxOwoJCQlyZXR1cm47CgkJfQoJfQoKCS8qCgkgKiBHZXR0aW5nIGhlcmUgbWVhbnMgQ29u
bmVjdC1JQiBjYXJkcyBhbmQgdXAuIENvbm5lY3QtSUIgaGFzIG5vIElOVHgKCSAqIHN1cHBvcnQg
c28gc2hvdWxkbid0IGJlIGNoZWNrZWQgZnVydGhlcgoJICovCglpZiAocGRldi0+ZGV2aWNlID09
IFBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfQ09OTkVDVElCKQoJCXJldHVybjsKCglpZiAocGRldi0+
ZGV2aWNlICE9IFBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfQ09OTkVDVFg0ICYmCgkgICAgcGRldi0+
ZGV2aWNlICE9IFBDSV9ERVZJQ0VfSURfTUVMTEFOT1hfQ09OTkVDVFg0X0xYKQoJCXJldHVybjsK
CgkvKiBGb3IgQ29ubmVjdFgtNCBhbmQgQ29ubmVjdFgtNExYLCBuZWVkIHRvIGNoZWNrIEZXIHN1
cHBvcnQgKi8KCWlmIChwY2lfZW5hYmxlX2RldmljZV9tZW0ocGRldikpIHsKCQlwY2lfd2Fybihw
ZGV2LCAiQ2FuJ3QgZW5hYmxlIGRldmljZSBtZW1vcnlcbiIpOwoJCXJldHVybjsKCX0KCglmd192
ZXIgPSBpb3JlbWFwKHBjaV9yZXNvdXJjZV9zdGFydChwZGV2LCAwKSwgNCk7CglpZiAoIWZ3X3Zl
cikgewoJCXBjaV93YXJuKHBkZXYsICJDYW4ndCBtYXAgQ29ubmVjdFgtNCBpbml0aWFsaXphdGlv
biBzZWdtZW50XG4iKTsKCQlnb3RvIG91dDsKCX0KCgkvKiBSZWFkaW5nIGZyb20gcmVzb3VyY2Ug
c3BhY2Ugc2hvdWxkIGJlIDMyYiBhbGlnbmVkICovCglmd19tYWpfbWluID0gaW9yZWFkMzJiZShm
d192ZXIpOwoJZndfc3ViX21pbiA9IGlvcmVhZDMyYmUoZndfdmVyICsgMSk7Cglmd19tYWpvciA9
IGZ3X21hal9taW4gJiAweGZmZmY7Cglmd19taW5vciA9IGZ3X21hal9taW4gPj4gMTY7Cglmd19z
dWJtaW5vciA9IGZ3X3N1Yl9taW4gJiAweGZmZmY7CglpZiAoZndfbWlub3IgPiBDT05ORUNUWF80
X0NVUlJfTUFYX01JTk9SIHx8CgkgICAgZndfbWlub3IgPCBDT05ORUNUWF80X0lOVFhfU1VQUE9S
VF9NSU5PUikgewoJCXBjaV93YXJuKHBkZXYsICJDb25uZWN0WC00OiBGVyAldS4ldS4ldSBkb2Vz
bid0IHN1cHBvcnQgSU5UeCBtYXNraW5nLCBkaXNhYmxpbmcuIFBsZWFzZSB1cGdyYWRlIEZXIHRv
ICVkLjE0LjExMDAgYW5kIHVwIGZvciBJTlR4IHN1cHBvcnRcbiIsCgkJCSBmd19tYWpvciwgZndf
bWlub3IsIGZ3X3N1Ym1pbm9yLCBwZGV2LT5kZXZpY2UgPT0KCQkJIFBDSV9ERVZJQ0VfSURfTUVM
TEFOT1hfQ09OTkVDVFg0ID8gMTIgOiAxNCk7CgkJcGRldi0+YnJva2VuX2ludHhfbWFza2luZyA9
IDE7Cgl9CgoJaW91bm1hcChmd192ZXIpOwoKb3V0OgoJcGNpX2Rpc2FibGVfZGV2aWNlKHBkZXYp
Owp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfTUVMTEFOT1gsIFBDSV9B
TllfSUQsCgkJCW1lbGxhbm94X2NoZWNrX2Jyb2tlbl9pbnR4X21hc2tpbmcpOwoKc3RhdGljIHZv
aWQgcXVpcmtfbm9fYnVzX3Jlc2V0KHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWRldi0+ZGV2X2Zs
YWdzIHw9IFBDSV9ERVZfRkxBR1NfTk9fQlVTX1JFU0VUOwp9CgovKgogKiBTb21lIEF0aGVyb3Mg
QVI5eHh4IGFuZCBRQ0E5ODh4IGNoaXBzIGRvIG5vdCBiZWhhdmUgYWZ0ZXIgYSBidXMgcmVzZXQu
CiAqIFRoZSBkZXZpY2Ugd2lsbCB0aHJvdyBhIExpbmsgRG93biBlcnJvciBvbiBBRVItY2FwYWJs
ZSBzeXN0ZW1zIGFuZAogKiByZWdhcmRsZXNzIG9mIEFFUiwgY29uZmlnIHNwYWNlIG9mIHRoZSBk
ZXZpY2UgaXMgbmV2ZXIgYWNjZXNzaWJsZSBhZ2FpbgogKiBhbmQgdHlwaWNhbGx5IGNhdXNlcyB0
aGUgc3lzdGVtIHRvIGhhbmcgb3IgcmVzZXQgd2hlbiBhY2Nlc3MgaXMgYXR0ZW1wdGVkLgogKiBo
dHRwOi8vd3d3LnNwaW5pY3MubmV0L2xpc3RzL2xpbnV4LXBjaS9tc2czNDc5Ny5odG1sCiAqLwpE
RUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BVEhFUk9TLCAweDAwMzAsIHF1
aXJrX25vX2J1c19yZXNldCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lE
X0FUSEVST1MsIDB4MDAzMiwgcXVpcmtfbm9fYnVzX3Jlc2V0KTsKREVDTEFSRV9QQ0lfRklYVVBf
SEVBREVSKFBDSV9WRU5ET1JfSURfQVRIRVJPUywgMHgwMDNjLCBxdWlya19ub19idXNfcmVzZXQp
OwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BVEhFUk9TLCAweDAwMzMs
IHF1aXJrX25vX2J1c19yZXNldCk7CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9S
X0lEX0FUSEVST1MsIDB4MDAzNCwgcXVpcmtfbm9fYnVzX3Jlc2V0KTsKCi8qCiAqIFJvb3QgcG9y
dCBvbiBzb21lIENhdml1bSBDTjh4eHggY2hpcHMgZG8gbm90IHN1Y2Nlc3NmdWxseSBjb21wbGV0
ZSBhIGJ1cwogKiByZXNldCB3aGVuIHVzZWQgd2l0aCBjZXJ0YWluIGNoaWxkIGRldmljZXMuICBB
ZnRlciB0aGUgcmVzZXQsIGNvbmZpZwogKiBhY2Nlc3NlcyB0byB0aGUgY2hpbGQgbWF5IGZhaWwu
CiAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9DQVZJVU0sIDB4YTEw
MCwgcXVpcmtfbm9fYnVzX3Jlc2V0KTsKCnN0YXRpYyB2b2lkIHF1aXJrX25vX3BtX3Jlc2V0KHN0
cnVjdCBwY2lfZGV2ICpkZXYpCnsKCS8qCgkgKiBXZSBjYW4ndCBkbyBhIGJ1cyByZXNldCBvbiBy
b290IGJ1cyBkZXZpY2VzLCBidXQgYW4gaW5lZmZlY3RpdmUKCSAqIFBNIHJlc2V0IG1heSBiZSBi
ZXR0ZXIgdGhhbiBub3RoaW5nLgoJICovCglpZiAoIXBjaV9pc19yb290X2J1cyhkZXYtPmJ1cykp
CgkJZGV2LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFHU19OT19QTV9SRVNFVDsKfQoKLyoKICog
U29tZSBBTUQvQVRJIEdQVVMgKEhEODU3MCAtIE9sYW5kKSByZXBvcnQgdGhhdCBhIEQzaG90LT5E
MCB0cmFuc2l0aW9uCiAqIGNhdXNlcyBhIHJlc2V0IChpLmUuLCB0aGV5IGFkdmVydGlzZSBOb1Nv
ZnRSc3QtKS4gIFRoaXMgdHJhbnNpdGlvbiBzZWVtcwogKiB0byBoYXZlIG5vIGVmZmVjdCBvbiB0
aGUgZGV2aWNlOiBpdCByZXRhaW5zIHRoZSBmcmFtZWJ1ZmZlciBjb250ZW50cyBhbmQKICogbW9u
aXRvciBzeW5jLiAgQWR2ZXJ0aXNpbmcgdGhpcyBzdXBwb3J0IG1ha2VzIG90aGVyIGxheWVycywg
bGlrZSBWRklPLAogKiBhc3N1bWUgcGNpX3Jlc2V0X2Z1bmN0aW9uKCkgaXMgdmlhYmxlIGZvciB0
aGlzIGRldmljZS4gIE1hcmsgaXQgYXMKICogdW5hdmFpbGFibGUgdG8gc2tpcCBpdCB3aGVuIHRl
c3RpbmcgcmVzZXQgbWV0aG9kcy4KICovCkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0hFQURFUihQ
Q0lfVkVORE9SX0lEX0FUSSwgUENJX0FOWV9JRCwKCQkJICAgICAgIFBDSV9DTEFTU19ESVNQTEFZ
X1ZHQSwgOCwgcXVpcmtfbm9fcG1fcmVzZXQpOwoKLyoKICogVGh1bmRlcmJvbHQgY29udHJvbGxl
cnMgd2l0aCBicm9rZW4gTVNJIGhvdHBsdWcgc2lnbmFsaW5nOgogKiBFbnRpcmUgMXN0IGdlbmVy
YXRpb24gKExpZ2h0IFJpZGdlLCBFYWdsZSBSaWRnZSwgTGlnaHQgUGVhaykgYW5kIHBhcnQKICog
b2YgdGhlIDJuZCBnZW5lcmF0aW9uIChDYWN0dXMgUmlkZ2UgNEMgdXAgdG8gcmV2aXNpb24gMSwg
UG9ydCBSaWRnZSkuCiAqLwpzdGF0aWMgdm9pZCBxdWlya190aHVuZGVyYm9sdF9ob3RwbHVnX21z
aShzdHJ1Y3QgcGNpX2RldiAqcGRldikKewoJaWYgKHBkZXYtPmlzX2hvdHBsdWdfYnJpZGdlICYm
CgkgICAgKHBkZXYtPmRldmljZSAhPSBQQ0lfREVWSUNFX0lEX0lOVEVMX0NBQ1RVU19SSURHRV80
QyB8fAoJICAgICBwZGV2LT5yZXZpc2lvbiA8PSAxKSkKCQlwZGV2LT5ub19tc2kgPSAxOwp9CkRF
Q0xBUkVfUENJX0ZJWFVQX0ZJTkFMKFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9ERVZJQ0VfSURf
SU5URUxfTElHSFRfUklER0UsCgkJCXF1aXJrX3RodW5kZXJib2x0X2hvdHBsdWdfbXNpKTsKREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0RFVklDRV9JRF9J
TlRFTF9FQUdMRV9SSURHRSwKCQkJcXVpcmtfdGh1bmRlcmJvbHRfaG90cGx1Z19tc2kpOwpERUNM
QVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVORE9SX0lEX0lOVEVMLCBQQ0lfREVWSUNFX0lEX0lO
VEVMX0xJR0hUX1BFQUssCgkJCXF1aXJrX3RodW5kZXJib2x0X2hvdHBsdWdfbXNpKTsKREVDTEFS
RV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0RFVklDRV9JRF9JTlRF
TF9DQUNUVVNfUklER0VfNEMsCgkJCXF1aXJrX3RodW5kZXJib2x0X2hvdHBsdWdfbXNpKTsKREVD
TEFSRV9QQ0lfRklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0RFVklDRV9JRF9J
TlRFTF9QT1JUX1JJREdFLAoJCQlxdWlya190aHVuZGVyYm9sdF9ob3RwbHVnX21zaSk7CgojaWZk
ZWYgQ09ORklHX0FDUEkKLyoKICogQXBwbGU6IFNodXRkb3duIENhY3R1cyBSaWRnZSBUaHVuZGVy
Ym9sdCBjb250cm9sbGVyLgogKgogKiBPbiBBcHBsZSBoYXJkd2FyZSB0aGUgQ2FjdHVzIFJpZGdl
IFRodW5kZXJib2x0IGNvbnRyb2xsZXIgbmVlZHMgdG8gYmUKICogc2h1dGRvd24gYmVmb3JlIHN1
c3BlbmQuIE90aGVyd2lzZSB0aGUgbmF0aXZlIGhvc3QgaW50ZXJmYWNlIChOSEkpIHdpbGwgbm90
CiAqIGJlIHByZXNlbnQgYWZ0ZXIgcmVzdW1lIGlmIGEgZGV2aWNlIHdhcyBwbHVnZ2VkIGluIGJl
Zm9yZSBzdXNwZW5kLgogKgogKiBUaGUgVGh1bmRlcmJvbHQgY29udHJvbGxlciBjb25zaXN0cyBv
ZiBhIFBDSWUgc3dpdGNoIHdpdGggZG93bnN0cmVhbQogKiBicmlkZ2VzIGxlYWRpbmcgdG8gdGhl
IE5ISSBhbmQgdG8gdGhlIHR1bm5lbCBQQ0kgYnJpZGdlcy4KICoKICogVGhpcyBxdWlyayBjdXRz
IHBvd2VyIHRvIHRoZSB3aG9sZSBjaGlwLiBUaGVyZWZvcmUgd2UgaGF2ZSB0byBhcHBseSBpdAog
KiBkdXJpbmcgc3VzcGVuZF9ub2lycSBvZiB0aGUgdXBzdHJlYW0gYnJpZGdlLgogKgogKiBQb3dl
ciBpcyBhdXRvbWFnaWNhbGx5IHJlc3RvcmVkIGJlZm9yZSByZXN1bWUuIE5vIGFjdGlvbiBpcyBu
ZWVkZWQuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19hcHBsZV9wb3dlcm9mZl90aHVuZGVyYm9sdChz
dHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglhY3BpX2hhbmRsZSBicmlkZ2UsIFNYSU8sIFNYRlAsIFNY
TFY7CgoJaWYgKCF4ODZfYXBwbGVfbWFjaGluZSkKCQlyZXR1cm47CglpZiAocGNpX3BjaWVfdHlw
ZShkZXYpICE9IFBDSV9FWFBfVFlQRV9VUFNUUkVBTSkKCQlyZXR1cm47CglicmlkZ2UgPSBBQ1BJ
X0hBTkRMRSgmZGV2LT5kZXYpOwoJaWYgKCFicmlkZ2UpCgkJcmV0dXJuOwoKCS8qCgkgKiBTWElP
IGFuZCBTWExWIGFyZSBwcmVzZW50IG9ubHkgb24gbWFjaGluZXMgcmVxdWlyaW5nIHRoaXMgcXVp
cmsuCgkgKiBUaHVuZGVyYm9sdCBicmlkZ2VzIGluIGV4dGVybmFsIGRldmljZXMgbWlnaHQgaGF2
ZSB0aGUgc2FtZQoJICogZGV2aWNlIElEIGFzIHRob3NlIG9uIHRoZSBob3N0LCBidXQgdGhleSB3
aWxsIG5vdCBoYXZlIHRoZQoJICogYXNzb2NpYXRlZCBBQ1BJIG1ldGhvZHMuIFRoaXMgaW1wbGlj
aXRseSBjaGVja3MgdGhhdCB3ZSBhcmUgYXQKCSAqIHRoZSByaWdodCBicmlkZ2UuCgkgKi8KCWlm
IChBQ1BJX0ZBSUxVUkUoYWNwaV9nZXRfaGFuZGxlKGJyaWRnZSwgIkRTQjAuTkhJMC5TWElPIiwg
JlNYSU8pKQoJICAgIHx8IEFDUElfRkFJTFVSRShhY3BpX2dldF9oYW5kbGUoYnJpZGdlLCAiRFNC
MC5OSEkwLlNYRlAiLCAmU1hGUCkpCgkgICAgfHwgQUNQSV9GQUlMVVJFKGFjcGlfZ2V0X2hhbmRs
ZShicmlkZ2UsICJEU0IwLk5ISTAuU1hMViIsICZTWExWKSkpCgkJcmV0dXJuOwoJcGNpX2luZm8o
ZGV2LCAicXVpcms6IGN1dHRpbmcgcG93ZXIgdG8gVGh1bmRlcmJvbHQgY29udHJvbGxlci4uLlxu
Iik7CgoJLyogbWFnaWMgc2VxdWVuY2UgKi8KCWFjcGlfZXhlY3V0ZV9zaW1wbGVfbWV0aG9kKFNY
SU8sIE5VTEwsIDEpOwoJYWNwaV9leGVjdXRlX3NpbXBsZV9tZXRob2QoU1hGUCwgTlVMTCwgMCk7
Cgltc2xlZXAoMzAwKTsKCWFjcGlfZXhlY3V0ZV9zaW1wbGVfbWV0aG9kKFNYTFYsIE5VTEwsIDAp
OwoJYWNwaV9leGVjdXRlX3NpbXBsZV9tZXRob2QoU1hJTywgTlVMTCwgMCk7CglhY3BpX2V4ZWN1
dGVfc2ltcGxlX21ldGhvZChTWExWLCBOVUxMLCAwKTsKfQpERUNMQVJFX1BDSV9GSVhVUF9TVVNQ
RU5EX0xBVEUoUENJX1ZFTkRPUl9JRF9JTlRFTCwKCQkJICAgICAgIFBDSV9ERVZJQ0VfSURfSU5U
RUxfQ0FDVFVTX1JJREdFXzRDLAoJCQkgICAgICAgcXVpcmtfYXBwbGVfcG93ZXJvZmZfdGh1bmRl
cmJvbHQpOwoKLyoKICogQXBwbGU6IFdhaXQgZm9yIHRoZSBUaHVuZGVyYm9sdCBjb250cm9sbGVy
IHRvIHJlZXN0YWJsaXNoIFBDSSB0dW5uZWxzCiAqCiAqIER1cmluZyBzdXNwZW5kIHRoZSBUaHVu
ZGVyYm9sdCBjb250cm9sbGVyIGlzIHJlc2V0IGFuZCBhbGwgUENJCiAqIHR1bm5lbHMgYXJlIGxv
c3QuIFRoZSBOSEkgZHJpdmVyIHdpbGwgdHJ5IHRvIHJlZXN0YWJsaXNoIGFsbCB0dW5uZWxzCiAq
IGR1cmluZyByZXN1bWUuIFdlIGhhdmUgdG8gbWFudWFsbHkgd2FpdCBmb3IgdGhlIE5ISSBzaW5j
ZSB0aGVyZSBpcwogKiBubyBwYXJlbnQgY2hpbGQgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIE5I
SSBhbmQgdGhlIHR1bm5lbGVkCiAqIGJyaWRnZXMuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19hcHBs
ZV93YWl0X2Zvcl90aHVuZGVyYm9sdChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglzdHJ1Y3QgcGNp
X2RldiAqc2libGluZyA9IE5VTEw7CglzdHJ1Y3QgcGNpX2RldiAqbmhpID0gTlVMTDsKCglpZiAo
IXg4Nl9hcHBsZV9tYWNoaW5lKQoJCXJldHVybjsKCWlmIChwY2lfcGNpZV90eXBlKGRldikgIT0g
UENJX0VYUF9UWVBFX0RPV05TVFJFQU0pCgkJcmV0dXJuOwoKCS8qCgkgKiBGaW5kIHRoZSBOSEkg
YW5kIGNvbmZpcm0gdGhhdCB3ZSBhcmUgYSBicmlkZ2Ugb24gdGhlIFRodW5kZXJib2x0CgkgKiBo
b3N0IGNvbnRyb2xsZXIgYW5kIG5vdCBvbiBhIFRodW5kZXJib2x0IGVuZHBvaW50LgoJICovCglz
aWJsaW5nID0gcGNpX2dldF9zbG90KGRldi0+YnVzLCAweDApOwoJaWYgKHNpYmxpbmcgPT0gZGV2
KQoJCWdvdG8gb3V0OyAvKiB3ZSBhcmUgdGhlIGRvd25zdHJlYW0gYnJpZGdlIHRvIHRoZSBOSEkg
Ki8KCWlmICghc2libGluZyB8fCAhc2libGluZy0+c3Vib3JkaW5hdGUpCgkJZ290byBvdXQ7Cglu
aGkgPSBwY2lfZ2V0X3Nsb3Qoc2libGluZy0+c3Vib3JkaW5hdGUsIDB4MCk7CglpZiAoIW5oaSkK
CQlnb3RvIG91dDsKCWlmIChuaGktPnZlbmRvciAhPSBQQ0lfVkVORE9SX0lEX0lOVEVMCgkJICAg
IHx8IChuaGktPmRldmljZSAhPSBQQ0lfREVWSUNFX0lEX0lOVEVMX0xJR0hUX1JJREdFICYmCgkJ
CW5oaS0+ZGV2aWNlICE9IFBDSV9ERVZJQ0VfSURfSU5URUxfQ0FDVFVTX1JJREdFXzRDICYmCgkJ
CW5oaS0+ZGV2aWNlICE9IFBDSV9ERVZJQ0VfSURfSU5URUxfRkFMQ09OX1JJREdFXzJDX05ISSAm
JgoJCQluaGktPmRldmljZSAhPSBQQ0lfREVWSUNFX0lEX0lOVEVMX0ZBTENPTl9SSURHRV80Q19O
SEkpCgkJICAgIHx8IG5oaS0+Y2xhc3MgIT0gUENJX0NMQVNTX1NZU1RFTV9PVEhFUiA8PCA4KQoJ
CWdvdG8gb3V0OwoJcGNpX2luZm8oZGV2LCAicXVpcms6IHdhaXRpbmcgZm9yIFRodW5kZXJib2x0
IHRvIHJlZXN0YWJsaXNoIFBDSSB0dW5uZWxzLi4uXG4iKTsKCWRldmljZV9wbV93YWl0X2Zvcl9k
ZXYoJmRldi0+ZGV2LCAmbmhpLT5kZXYpOwpvdXQ6CglwY2lfZGV2X3B1dChuaGkpOwoJcGNpX2Rl
dl9wdXQoc2libGluZyk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5E
T1JfSURfSU5URUwsCgkJCSAgICAgICBQQ0lfREVWSUNFX0lEX0lOVEVMX0xJR0hUX1JJREdFLAoJ
CQkgICAgICAgcXVpcmtfYXBwbGVfd2FpdF9mb3JfdGh1bmRlcmJvbHQpOwpERUNMQVJFX1BDSV9G
SVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwKCQkJICAgICAgIFBDSV9ERVZJ
Q0VfSURfSU5URUxfQ0FDVFVTX1JJREdFXzRDLAoJCQkgICAgICAgcXVpcmtfYXBwbGVfd2FpdF9m
b3JfdGh1bmRlcmJvbHQpOwpERUNMQVJFX1BDSV9GSVhVUF9SRVNVTUVfRUFSTFkoUENJX1ZFTkRP
Ul9JRF9JTlRFTCwKCQkJICAgICAgIFBDSV9ERVZJQ0VfSURfSU5URUxfRkFMQ09OX1JJREdFXzJD
X0JSSURHRSwKCQkJICAgICAgIHF1aXJrX2FwcGxlX3dhaXRfZm9yX3RodW5kZXJib2x0KTsKREVD
TEFSRV9QQ0lfRklYVVBfUkVTVU1FX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsCgkJCSAgICAg
ICBQQ0lfREVWSUNFX0lEX0lOVEVMX0ZBTENPTl9SSURHRV80Q19CUklER0UsCgkJCSAgICAgICBx
dWlya19hcHBsZV93YWl0X2Zvcl90aHVuZGVyYm9sdCk7CiNlbmRpZgoKLyoKICogRm9sbG93aW5n
IGFyZSBkZXZpY2Utc3BlY2lmaWMgcmVzZXQgbWV0aG9kcyB3aGljaCBjYW4gYmUgdXNlZCB0bwog
KiByZXNldCBhIHNpbmdsZSBmdW5jdGlvbiBpZiBvdGhlciBtZXRob2RzIChlLmcuIEZMUiwgUE0g
RDAtPkQzKSBhcmUKICogbm90IGF2YWlsYWJsZS4KICovCnN0YXRpYyBpbnQgcmVzZXRfaW50ZWxf
ODI1OTlfc2ZwX3ZpcnRmbihzdHJ1Y3QgcGNpX2RldiAqZGV2LCBpbnQgcHJvYmUpCnsKCS8qCgkg
KiBodHRwOi8vd3d3LmludGVsLmNvbS9jb250ZW50L2RhbS9kb2MvZGF0YXNoZWV0LzgyNTk5LTEw
LWdiZS1jb250cm9sbGVyLWRhdGFzaGVldC5wZGYKCSAqCgkgKiBUaGUgODI1OTkgc3VwcG9ydHMg
RkxSIG9uIFZGcywgYnV0IEZMUiBzdXBwb3J0IGlzIHJlcG9ydGVkIG9ubHkKCSAqIGluIHRoZSBQ
RiBERVZDQVAgKHNlYyA5LjMuMTAuNCksIG5vdCBpbiB0aGUgVkYgREVWQ0FQIChzZWMgOS41KS4K
CSAqIFRodXMgd2UgbXVzdCBjYWxsIHBjaWVfZmxyKCkgZGlyZWN0bHkgd2l0aG91dCBmaXJzdCBj
aGVja2luZyBpZiBpdCBpcwoJICogc3VwcG9ydGVkLgoJICovCglpZiAoIXByb2JlKQoJCXBjaWVf
ZmxyKGRldik7CglyZXR1cm4gMDsKfQoKI2RlZmluZSBTT1VUSF9DSElDS0VOMgkJMHhjMjAwNAoj
ZGVmaW5lIFBDSF9QUF9TVEFUVVMJCTB4YzcyMDAKI2RlZmluZSBQQ0hfUFBfQ09OVFJPTAkJMHhj
NzIwNAojZGVmaW5lIE1TR19DVEwJCQkweDQ1MDEwCiNkZWZpbmUgTlNERV9QV1JfU1RBVEUJCTB4
ZDAxMDAKI2RlZmluZSBJR0RfT1BFUkFUSU9OX1RJTUVPVVQJMTAwMDAgICAgIC8qIHNldCB0aW1l
b3V0IDEwIHNlY29uZHMgKi8KCnN0YXRpYyBpbnQgcmVzZXRfaXZiX2lnZChzdHJ1Y3QgcGNpX2Rl
diAqZGV2LCBpbnQgcHJvYmUpCnsKCXZvaWQgX19pb21lbSAqbW1pb19iYXNlOwoJdW5zaWduZWQg
bG9uZyB0aW1lb3V0OwoJdTMyIHZhbDsKCglpZiAocHJvYmUpCgkJcmV0dXJuIDA7CgoJbW1pb19i
YXNlID0gcGNpX2lvbWFwKGRldiwgMCwgMCk7CglpZiAoIW1taW9fYmFzZSkKCQlyZXR1cm4gLUVO
T01FTTsKCglpb3dyaXRlMzIoMHgwMDAwMDAwMiwgbW1pb19iYXNlICsgTVNHX0NUTCk7CgoJLyoK
CSAqIENsb2JiZXJpbmcgU09VVEhfQ0hJQ0tFTjIgcmVnaXN0ZXIgaXMgZmluZSBvbmx5IGlmIHRo
ZSBuZXh0CgkgKiBkcml2ZXIgbG9hZGVkIHNldHMgdGhlIHJpZ2h0IGJpdHMuIEhvd2V2ZXIsIHRo
aXMncyBhIHJlc2V0IGFuZAoJICogdGhlIGJpdHMgaGF2ZSBiZWVuIHNldCBieSBpOTE1IHByZXZp
b3VzbHksIHNvIHdlIGNsb2JiZXIKCSAqIFNPVVRIX0NISUNLRU4yIHJlZ2lzdGVyIGRpcmVjdGx5
IGhlcmUuCgkgKi8KCWlvd3JpdGUzMigweDAwMDAwMDA1LCBtbWlvX2Jhc2UgKyBTT1VUSF9DSElD
S0VOMik7CgoJdmFsID0gaW9yZWFkMzIobW1pb19iYXNlICsgUENIX1BQX0NPTlRST0wpICYgMHhm
ZmZmZmZmZTsKCWlvd3JpdGUzMih2YWwsIG1taW9fYmFzZSArIFBDSF9QUF9DT05UUk9MKTsKCgl0
aW1lb3V0ID0gamlmZmllcyArIG1zZWNzX3RvX2ppZmZpZXMoSUdEX09QRVJBVElPTl9USU1FT1VU
KTsKCWRvIHsKCQl2YWwgPSBpb3JlYWQzMihtbWlvX2Jhc2UgKyBQQ0hfUFBfU1RBVFVTKTsKCQlp
ZiAoKHZhbCAmIDB4YjAwMDAwMDApID09IDApCgkJCWdvdG8gcmVzZXRfY29tcGxldGU7CgkJbXNs
ZWVwKDEwKTsKCX0gd2hpbGUgKHRpbWVfYmVmb3JlKGppZmZpZXMsIHRpbWVvdXQpKTsKCXBjaV93
YXJuKGRldiwgInRpbWVvdXQgZHVyaW5nIHJlc2V0XG4iKTsKCnJlc2V0X2NvbXBsZXRlOgoJaW93
cml0ZTMyKDB4MDAwMDAwMDIsIG1taW9fYmFzZSArIE5TREVfUFdSX1NUQVRFKTsKCglwY2lfaW91
bm1hcChkZXYsIG1taW9fYmFzZSk7CglyZXR1cm4gMDsKfQoKLyogRGV2aWNlLXNwZWNpZmljIHJl
c2V0IG1ldGhvZCBmb3IgQ2hlbHNpbyBUNC1iYXNlZCBhZGFwdGVycyAqLwpzdGF0aWMgaW50IHJl
c2V0X2NoZWxzaW9fZ2VuZXJpY19kZXYoc3RydWN0IHBjaV9kZXYgKmRldiwgaW50IHByb2JlKQp7
Cgl1MTYgb2xkX2NvbW1hbmQ7Cgl1MTYgbXNpeF9mbGFnczsKCgkvKgoJICogSWYgdGhpcyBpc24n
dCBhIENoZWxzaW8gVDQtYmFzZWQgZGV2aWNlLCByZXR1cm4gLUVOT1RUWSBpbmRpY2F0aW5nCgkg
KiB0aGF0IHdlIGhhdmUgbm8gZGV2aWNlLXNwZWNpZmljIHJlc2V0IG1ldGhvZC4KCSAqLwoJaWYg
KChkZXYtPmRldmljZSAmIDB4ZjAwMCkgIT0gMHg0MDAwKQoJCXJldHVybiAtRU5PVFRZOwoKCS8q
CgkgKiBJZiB0aGlzIGlzIHRoZSAicHJvYmUiIHBoYXNlLCByZXR1cm4gMCBpbmRpY2F0aW5nIHRo
YXQgd2UgY2FuCgkgKiByZXNldCB0aGlzIGRldmljZS4KCSAqLwoJaWYgKHByb2JlKQoJCXJldHVy
biAwOwoKCS8qCgkgKiBUNCBjYW4gd2VkZ2UgaWYgdGhlcmUgYXJlIERNQXMgaW4gZmxpZ2h0IHdp
dGhpbiB0aGUgY2hpcCBhbmQgQnVzCgkgKiBNYXN0ZXIgaGFzIGJlZW4gZGlzYWJsZWQuICBXZSBu
ZWVkIHRvIGhhdmUgaXQgb24gdGlsbCB0aGUgRnVuY3Rpb24KCSAqIExldmVsIFJlc2V0IGNvbXBs
ZXRlcy4gIChCVVNfTUFTVEVSIGlzIGRpc2FibGVkIGluCgkgKiBwY2lfcmVzZXRfZnVuY3Rpb24o
KSkuCgkgKi8KCXBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwgUENJX0NPTU1BTkQsICZvbGRfY29t
bWFuZCk7CglwY2lfd3JpdGVfY29uZmlnX3dvcmQoZGV2LCBQQ0lfQ09NTUFORCwKCQkJICAgICAg
b2xkX2NvbW1hbmQgfCBQQ0lfQ09NTUFORF9NQVNURVIpOwoKCS8qCgkgKiBQZXJmb3JtIHRoZSBh
Y3R1YWwgZGV2aWNlIGZ1bmN0aW9uIHJlc2V0LCBzYXZpbmcgYW5kIHJlc3RvcmluZwoJICogY29u
ZmlndXJhdGlvbiBpbmZvcm1hdGlvbiBhcm91bmQgdGhlIHJlc2V0LgoJICovCglwY2lfc2F2ZV9z
dGF0ZShkZXYpOwoKCS8qCgkgKiBUNCBhbHNvIHN1ZmZlcnMgYSBIZWFkLU9mLUxpbmUgYmxvY2tp
bmcgcHJvYmxlbSBpZiBNU0ktWCBpbnRlcnJ1cHRzCgkgKiBhcmUgZGlzYWJsZWQgd2hlbiBhbiBN
U0ktWCBpbnRlcnJ1cHQgbWVzc2FnZSBuZWVkcyB0byBiZSBkZWxpdmVyZWQuCgkgKiBTbyB3ZSBi
cmllZmx5IHJlLWVuYWJsZSBNU0ktWCBpbnRlcnJ1cHRzIGZvciB0aGUgZHVyYXRpb24gb2YgdGhl
CgkgKiBGTFIuICBUaGUgcGNpX3Jlc3RvcmVfc3RhdGUoKSBiZWxvdyB3aWxsIHJlc3RvcmUgdGhl
IG9yaWdpbmFsCgkgKiBNU0ktWCBzdGF0ZS4KCSAqLwoJcGNpX3JlYWRfY29uZmlnX3dvcmQoZGV2
LCBkZXYtPm1zaXhfY2FwK1BDSV9NU0lYX0ZMQUdTLCAmbXNpeF9mbGFncyk7CglpZiAoKG1zaXhf
ZmxhZ3MgJiBQQ0lfTVNJWF9GTEFHU19FTkFCTEUpID09IDApCgkJcGNpX3dyaXRlX2NvbmZpZ193
b3JkKGRldiwgZGV2LT5tc2l4X2NhcCtQQ0lfTVNJWF9GTEFHUywKCQkJCSAgICAgIG1zaXhfZmxh
Z3MgfAoJCQkJICAgICAgUENJX01TSVhfRkxBR1NfRU5BQkxFIHwKCQkJCSAgICAgIFBDSV9NU0lY
X0ZMQUdTX01BU0tBTEwpOwoKCXBjaWVfZmxyKGRldik7CgoJLyoKCSAqIFJlc3RvcmUgdGhlIGNv
bmZpZ3VyYXRpb24gaW5mb3JtYXRpb24gKEJBUiB2YWx1ZXMsIGV0Yy4pIGluY2x1ZGluZwoJICog
dGhlIG9yaWdpbmFsIFBDSSBDb25maWd1cmF0aW9uIFNwYWNlIENvbW1hbmQgd29yZCwgYW5kIHJl
dHVybgoJICogc3VjY2Vzcy4KCSAqLwoJcGNpX3Jlc3RvcmVfc3RhdGUoZGV2KTsKCXBjaV93cml0
ZV9jb25maWdfd29yZChkZXYsIFBDSV9DT01NQU5ELCBvbGRfY29tbWFuZCk7CglyZXR1cm4gMDsK
fQoKI2RlZmluZSBQQ0lfREVWSUNFX0lEX0lOVEVMXzgyNTk5X1NGUF9WRiAgIDB4MTBlZAojZGVm
aW5lIFBDSV9ERVZJQ0VfSURfSU5URUxfSVZCX01fVkdBICAgICAgMHgwMTU2CiNkZWZpbmUgUENJ
X0RFVklDRV9JRF9JTlRFTF9JVkJfTTJfVkdBICAgICAweDAxNjYKCi8qCiAqIFRoZSBTYW1zdW5n
IFNNOTYxL1BNOTYxIGNvbnRyb2xsZXIgY2FuIHNvbWV0aW1lcyBlbnRlciBhIGZhdGFsIHN0YXRl
IGFmdGVyCiAqIEZMUiB3aGVyZSBjb25maWcgc3BhY2UgcmVhZHMgZnJvbSB0aGUgZGV2aWNlIHJl
dHVybiAtMS4gIFdlIHNlZW0gdG8gYmUKICogYWJsZSB0byBhdm9pZCB0aGlzIGNvbmRpdGlvbiBp
ZiB3ZSBkaXNhYmxlIHRoZSBOVk1lIGNvbnRyb2xsZXIgcHJpb3IgdG8KICogRkxSLiAgVGhpcyBx
dWlyayBpcyBnZW5lcmljIGZvciBhbnkgTlZNZSBjbGFzcyBkZXZpY2UgcmVxdWlyaW5nIHNpbWls
YXIKICogYXNzaXN0YW5jZSB0byBxdWllc2NlIHRoZSBkZXZpY2UgcHJpb3IgdG8gRkxSLgogKgog
KiBOVk1lIHNwZWNpZmljYXRpb246IGh0dHBzOi8vbnZtZXhwcmVzcy5vcmcvcmVzb3VyY2VzL3Nw
ZWNpZmljYXRpb25zLwogKiBSZXZpc2lvbiAxLjBlOgogKiAgICBDaGFwdGVyIDI6IFJlcXVpcmVk
IGFuZCBvcHRpb25hbCBQQ0kgY29uZmlnIHJlZ2lzdGVycwogKiAgICBDaGFwdGVyIDM6IE5WTWUg
Y29udHJvbCByZWdpc3RlcnMKICogICAgQ2hhcHRlciA3LjM6IFJlc2V0IGJlaGF2aW9yCiAqLwpz
dGF0aWMgaW50IG52bWVfZGlzYWJsZV9hbmRfZmxyKHN0cnVjdCBwY2lfZGV2ICpkZXYsIGludCBw
cm9iZSkKewoJdm9pZCBfX2lvbWVtICpiYXI7Cgl1MTYgY21kOwoJdTMyIGNmZzsKCglpZiAoZGV2
LT5jbGFzcyAhPSBQQ0lfQ0xBU1NfU1RPUkFHRV9FWFBSRVNTIHx8CgkgICAgIXBjaWVfaGFzX2Zs
cihkZXYpIHx8ICFwY2lfcmVzb3VyY2Vfc3RhcnQoZGV2LCAwKSkKCQlyZXR1cm4gLUVOT1RUWTsK
CglpZiAocHJvYmUpCgkJcmV0dXJuIDA7CgoJYmFyID0gcGNpX2lvbWFwKGRldiwgMCwgTlZNRV9S
RUdfQ0MgKyBzaXplb2YoY2ZnKSk7CglpZiAoIWJhcikKCQlyZXR1cm4gLUVOT1RUWTsKCglwY2lf
cmVhZF9jb25maWdfd29yZChkZXYsIFBDSV9DT01NQU5ELCAmY21kKTsKCXBjaV93cml0ZV9jb25m
aWdfd29yZChkZXYsIFBDSV9DT01NQU5ELCBjbWQgfCBQQ0lfQ09NTUFORF9NRU1PUlkpOwoKCWNm
ZyA9IHJlYWRsKGJhciArIE5WTUVfUkVHX0NDKTsKCgkvKiBEaXNhYmxlIGNvbnRyb2xsZXIgaWYg
ZW5hYmxlZCAqLwoJaWYgKGNmZyAmIE5WTUVfQ0NfRU5BQkxFKSB7CgkJdTMyIGNhcCA9IHJlYWRs
KGJhciArIE5WTUVfUkVHX0NBUCk7CgkJdW5zaWduZWQgbG9uZyB0aW1lb3V0OwoKCQkvKgoJCSAq
IFBlciBudm1lX2Rpc2FibGVfY3RybCgpIHNraXAgc2h1dGRvd24gbm90aWZpY2F0aW9uIGFzIGl0
CgkJICogY291bGQgY29tcGxldGUgY29tbWFuZHMgdG8gdGhlIGFkbWluIHF1ZXVlLiAgV2Ugb25s
eSBpbnRlbmQKCQkgKiB0byBxdWllc2NlIHRoZSBkZXZpY2UgYmVmb3JlIHJlc2V0LgoJCSAqLwoJ
CWNmZyAmPSB+KE5WTUVfQ0NfU0hOX01BU0sgfCBOVk1FX0NDX0VOQUJMRSk7CgoJCXdyaXRlbChj
ZmcsIGJhciArIE5WTUVfUkVHX0NDKTsKCgkJLyoKCQkgKiBTb21lIGNvbnRyb2xsZXJzIHJlcXVp
cmUgYW4gYWRkaXRpb25hbCBkZWxheSBoZXJlLCBzZWUKCQkgKiBOVk1FX1FVSVJLX0RFTEFZX0JF
Rk9SRV9DSEtfUkRZLiAgTm9uZSBvZiB0aG9zZSBhcmUgeWV0CgkJICogc3VwcG9ydGVkIGJ5IHRo
aXMgcXVpcmsuCgkJICovCgoJCS8qIENhcCByZWdpc3RlciBwcm92aWRlcyBtYXggdGltZW91dCBp
biA1MDBtcyBpbmNyZW1lbnRzICovCgkJdGltZW91dCA9ICgoTlZNRV9DQVBfVElNRU9VVChjYXAp
ICsgMSkgKiBIWiAvIDIpICsgamlmZmllczsKCgkJZm9yICg7OykgewoJCQl1MzIgc3RhdHVzID0g
cmVhZGwoYmFyICsgTlZNRV9SRUdfQ1NUUyk7CgoJCQkvKiBSZWFkeSBzdGF0dXMgYmVjb21lcyB6
ZXJvIG9uIGRpc2FibGUgY29tcGxldGUgKi8KCQkJaWYgKCEoc3RhdHVzICYgTlZNRV9DU1RTX1JE
WSkpCgkJCQlicmVhazsKCgkJCW1zbGVlcCgxMDApOwoKCQkJaWYgKHRpbWVfYWZ0ZXIoamlmZmll
cywgdGltZW91dCkpIHsKCQkJCXBjaV93YXJuKGRldiwgIlRpbWVvdXQgd2FpdGluZyBmb3IgTlZN
ZSByZWFkeSBzdGF0dXMgdG8gY2xlYXIgYWZ0ZXIgZGlzYWJsZVxuIik7CgkJCQlicmVhazsKCQkJ
fQoJCX0KCX0KCglwY2lfaW91bm1hcChkZXYsIGJhcik7CgoJcGNpZV9mbHIoZGV2KTsKCglyZXR1
cm4gMDsKfQoKLyoKICogSW50ZWwgREMgUDM3MDAgTlZNZSBjb250cm9sbGVyIHdpbGwgdGltZW91
dCB3YWl0aW5nIGZvciByZWFkeSBzdGF0dXMKICogdG8gY2hhbmdlIGFmdGVyIE5WTWUgZW5hYmxl
IGlmIHRoZSBkcml2ZXIgc3RhcnRzIGludGVyYWN0aW5nIHdpdGggdGhlCiAqIGRldmljZSB0b28g
c29vbiBhZnRlciBGTFIuICBBIDI1MG1zIGRlbGF5IGFmdGVyIEZMUiBoYXMgaGV1cmlzdGljYWxs
eQogKiBwcm92ZW4gdG8gcHJvZHVjZSByZWxpYWJseSB3b3JraW5nIHJlc3VsdHMgZm9yIGRldmlj
ZSBhc3NpZ25tZW50IGNhc2VzLgogKi8Kc3RhdGljIGludCBkZWxheV8yNTBtc19hZnRlcl9mbHIo
c3RydWN0IHBjaV9kZXYgKmRldiwgaW50IHByb2JlKQp7CglpZiAoIXBjaWVfaGFzX2ZscihkZXYp
KQoJCXJldHVybiAtRU5PVFRZOwoKCWlmIChwcm9iZSkKCQlyZXR1cm4gMDsKCglwY2llX2Zscihk
ZXYpOwoKCW1zbGVlcCgyNTApOwoKCXJldHVybiAwOwp9CgpzdGF0aWMgY29uc3Qgc3RydWN0IHBj
aV9kZXZfcmVzZXRfbWV0aG9kcyBwY2lfZGV2X3Jlc2V0X21ldGhvZHNbXSA9IHsKCXsgUENJX1ZF
TkRPUl9JRF9JTlRFTCwgUENJX0RFVklDRV9JRF9JTlRFTF84MjU5OV9TRlBfVkYsCgkJIHJlc2V0
X2ludGVsXzgyNTk5X3NmcF92aXJ0Zm4gfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgUENJX0RF
VklDRV9JRF9JTlRFTF9JVkJfTV9WR0EsCgkJcmVzZXRfaXZiX2lnZCB9LAoJeyBQQ0lfVkVORE9S
X0lEX0lOVEVMLCBQQ0lfREVWSUNFX0lEX0lOVEVMX0lWQl9NMl9WR0EsCgkJcmVzZXRfaXZiX2ln
ZCB9LAoJeyBQQ0lfVkVORE9SX0lEX1NBTVNVTkcsIDB4YTgwNCwgbnZtZV9kaXNhYmxlX2FuZF9m
bHIgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgwOTUzLCBkZWxheV8yNTBtc19hZnRlcl9m
bHIgfSwKCXsgUENJX1ZFTkRPUl9JRF9DSEVMU0lPLCBQQ0lfQU5ZX0lELAoJCXJlc2V0X2NoZWxz
aW9fZ2VuZXJpY19kZXYgfSwKCXsgMCB9Cn07CgovKgogKiBUaGVzZSBkZXZpY2Utc3BlY2lmaWMg
cmVzZXQgbWV0aG9kcyBhcmUgaGVyZSByYXRoZXIgdGhhbiBpbiBhIGRyaXZlcgogKiBiZWNhdXNl
IHdoZW4gYSBob3N0IGFzc2lnbnMgYSBkZXZpY2UgdG8gYSBndWVzdCBWTSwgdGhlIGhvc3QgbWF5
IG5lZWQKICogdG8gcmVzZXQgdGhlIGRldmljZSBidXQgcHJvYmFibHkgZG9lc24ndCBoYXZlIGEg
ZHJpdmVyIGZvciBpdC4KICovCmludCBwY2lfZGV2X3NwZWNpZmljX3Jlc2V0KHN0cnVjdCBwY2lf
ZGV2ICpkZXYsIGludCBwcm9iZSkKewoJY29uc3Qgc3RydWN0IHBjaV9kZXZfcmVzZXRfbWV0aG9k
cyAqaTsKCglmb3IgKGkgPSBwY2lfZGV2X3Jlc2V0X21ldGhvZHM7IGktPnJlc2V0OyBpKyspIHsK
CQlpZiAoKGktPnZlbmRvciA9PSBkZXYtPnZlbmRvciB8fAoJCSAgICAgaS0+dmVuZG9yID09ICh1
MTYpUENJX0FOWV9JRCkgJiYKCQkgICAgKGktPmRldmljZSA9PSBkZXYtPmRldmljZSB8fAoJCSAg
ICAgaS0+ZGV2aWNlID09ICh1MTYpUENJX0FOWV9JRCkpCgkJCXJldHVybiBpLT5yZXNldChkZXYs
IHByb2JlKTsKCX0KCglyZXR1cm4gLUVOT1RUWTsKfQoKc3RhdGljIHZvaWQgcXVpcmtfZG1hX2Z1
bmMwX2FsaWFzKHN0cnVjdCBwY2lfZGV2ICpkZXYpCnsKCWlmIChQQ0lfRlVOQyhkZXYtPmRldmZu
KSAhPSAwKQoJCXBjaV9hZGRfZG1hX2FsaWFzKGRldiwgUENJX0RFVkZOKFBDSV9TTE9UKGRldi0+
ZGV2Zm4pLCAwKSk7Cn0KCi8qCiAqIGh0dHBzOi8vYnVnemlsbGEucmVkaGF0LmNvbS9zaG93X2J1
Zy5jZ2k/aWQ9NjA1ODg4CiAqCiAqIFNvbWUgUmljb2ggZGV2aWNlcyB1c2UgZnVuY3Rpb24gMCBh
cyB0aGUgUENJZSByZXF1ZXN0ZXIgSUQgZm9yIERNQS4KICovCkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX1JJQ09ILCAweGU4MzIsIHF1aXJrX2RtYV9mdW5jMF9hbGlhcyk7
CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX1JJQ09ILCAweGU0NzYsIHF1
aXJrX2RtYV9mdW5jMF9hbGlhcyk7CgpzdGF0aWMgdm9pZCBxdWlya19kbWFfZnVuYzFfYWxpYXMo
c3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKFBDSV9GVU5DKGRldi0+ZGV2Zm4pICE9IDEpCgkJ
cGNpX2FkZF9kbWFfYWxpYXMoZGV2LCBQQ0lfREVWRk4oUENJX1NMT1QoZGV2LT5kZXZmbiksIDEp
KTsKfQoKLyoKICogTWFydmVsbCA4OFNFOTEyMyB1c2VzIGZ1bmN0aW9uIDEgYXMgdGhlIHJlcXVl
c3RlciBJRCBmb3IgRE1BLiAgSW4gc29tZQogKiBTS1VzIGZ1bmN0aW9uIDEgaXMgcHJlc2VudCBh
bmQgaXMgYSBsZWdhY3kgSURFIGNvbnRyb2xsZXIsIGluIG90aGVyCiAqIFNLVXMgdGhpcyBmdW5j
dGlvbiBpcyBub3QgcHJlc2VudCwgbWFraW5nIHRoaXMgYSBnaG9zdCByZXF1ZXN0ZXIuCiAqIGh0
dHBzOi8vYnVnemlsbGEua2VybmVsLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDI2NzkKICovCkRFQ0xB
UkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX01BUlZFTExfRVhULCAweDkxMjAsCgkJ
CSBxdWlya19kbWFfZnVuYzFfYWxpYXMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZF
TkRPUl9JRF9NQVJWRUxMX0VYVCwgMHg5MTIzLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKTsK
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTUFSVkVMTF9FWFQsIDB4OTEy
OCwKCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7Ci8qIGh0dHBzOi8vYnVnemlsbGEua2VybmVs
Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDI2NzkjYzE0ICovCkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURF
UihQQ0lfVkVORE9SX0lEX01BUlZFTExfRVhULCAweDkxMzAsCgkJCSBxdWlya19kbWFfZnVuYzFf
YWxpYXMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9NQVJWRUxMX0VY
VCwgMHg5MTcwLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKTsKLyogaHR0cHM6Ly9idWd6aWxs
YS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00MjY3OSNjNDcgKyBjNTcgKi8KREVDTEFSRV9Q
Q0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfTUFSVkVMTF9FWFQsIDB4OTE3MiwKCQkJIHF1
aXJrX2RtYV9mdW5jMV9hbGlhcyk7Ci8qIGh0dHBzOi8vYnVnemlsbGEua2VybmVsLm9yZy9zaG93
X2J1Zy5jZ2k/aWQ9NDI2NzkjYzU5ICovCkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVO
RE9SX0lEX01BUlZFTExfRVhULCAweDkxN2EsCgkJCSBxdWlya19kbWFfZnVuYzFfYWxpYXMpOwov
KiBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lkPTQyNjc5I2M3OCAq
LwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9NQVJWRUxMX0VYVCwgMHg5
MTgyLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKTsKLyogaHR0cHM6Ly9idWd6aWxsYS5rZXJu
ZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00MjY3OSNjMTM0ICovCkRFQ0xBUkVfUENJX0ZJWFVQX0hF
QURFUihQQ0lfVkVORE9SX0lEX01BUlZFTExfRVhULCAweDkxODMsCgkJCSBxdWlya19kbWFfZnVu
YzFfYWxpYXMpOwovKiBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lk
PTQyNjc5I2M0NiAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9NQVJW
RUxMX0VYVCwgMHg5MWEwLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKTsKLyogaHR0cHM6Ly9i
dWd6aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00MjY3OSNjMTI3ICovCkRFQ0xBUkVf
UENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX01BUlZFTExfRVhULCAweDkyMjAsCgkJCSBx
dWlya19kbWFfZnVuYzFfYWxpYXMpOwovKiBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hv
d19idWcuY2dpP2lkPTQyNjc5I2M0OSAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZF
TkRPUl9JRF9NQVJWRUxMX0VYVCwgMHg5MjMwLAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKTsK
REVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfVFRJLCAweDA2NDIsCgkJCSBx
dWlya19kbWFfZnVuYzFfYWxpYXMpOwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRP
Ul9JRF9UVEksIDB4MDY0NSwKCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7Ci8qIGh0dHBzOi8v
YnVncy5nZW50b28ub3JnL3Nob3dfYnVnLmNnaT9pZD00OTc2MzAgKi8KREVDTEFSRV9QQ0lfRklY
VVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSk1JQ1JPTiwKCQkJIFBDSV9ERVZJQ0VfSURfSk1JQ1JP
Tl9KTUIzODhfRVNELAoJCQkgcXVpcmtfZG1hX2Z1bmMxX2FsaWFzKTsKLyogaHR0cHM6Ly9idWd6
aWxsYS5rZXJuZWwub3JnL3Nob3dfYnVnLmNnaT9pZD00MjY3OSNjMTE3ICovCkRFQ0xBUkVfUENJ
X0ZJWFVQX0hFQURFUigweDFjMjgsIC8qIExpdGUtT24gKi8KCQkJIDB4MDEyMiwgLyogUGxleHRv
ciBNNkUgKE1hcnZlbGwgODhTUzkxODMpKi8KCQkJIHF1aXJrX2RtYV9mdW5jMV9hbGlhcyk7Cgov
KgogKiBTb21lIGRldmljZXMgRE1BIHdpdGggdGhlIHdyb25nIGRldmZuLCBub3QganVzdCB0aGUg
d3JvbmcgZnVuY3Rpb24uCiAqIHF1aXJrX2ZpeGVkX2RtYV9hbGlhcygpIHVzZXMgdGhpcyB0YWJs
ZSB0byBjcmVhdGUgZml4ZWQgYWxpYXNlcywgd2hlcmUKICogdGhlIGFsaWFzIGlzICJmaXhlZCIg
YW5kIGluZGVwZW5kZW50IG9mIHRoZSBkZXZpY2UgZGV2Zm4uCiAqCiAqIEZvciBleGFtcGxlLCB0
aGUgQWRhcHRlYyAzNDA1IGlzIGEgUENJZSBjYXJkIHdpdGggYW4gSW50ZWwgODAzMzMgSS9PCiAq
IHByb2Nlc3Nvci4gIFRvIHNvZnR3YXJlLCB0aGlzIGFwcGVhcnMgYXMgYSBQQ0llLXRvLVBDSS9Y
IGJyaWRnZSB3aXRoIGEKICogc2luZ2xlIGRldmljZSBvbiB0aGUgc2Vjb25kYXJ5IGJ1cy4gIElu
IHJlYWxpdHksIHRoZSBzaW5nbGUgZXhwb3NlZAogKiBkZXZpY2UgYXQgMGUuMCBpcyB0aGUgQWRk
cmVzcyBUcmFuc2xhdGlvbiBVbml0IChBVFUpIG9mIHRoZSBjb250cm9sbGVyCiAqIHRoYXQgcHJv
dmlkZXMgYSBicmlkZ2UgdG8gdGhlIGludGVybmFsIGJ1cyBvZiB0aGUgSS9PIHByb2Nlc3Nvci4g
IFRoZQogKiBjb250cm9sbGVyIHN1cHBvcnRzIHByaXZhdGUgZGV2aWNlcywgd2hpY2ggY2FuIGJl
IGhpZGRlbiBmcm9tIFBDSSBjb25maWcKICogc3BhY2UuICBJbiB0aGUgY2FzZSBvZiB0aGUgQWRh
cHRlYyAzNDA1LCBhIHByaXZhdGUgZGV2aWNlIGF0IDAxLjAKICogYXBwZWFycyB0byBiZSB0aGUg
RE1BIGVuZ2luZSwgd2hpY2ggdGhlcmVmb3JlIG5lZWRzIHRvIGJlY29tZSBhIERNQQogKiBhbGlh
cyBmb3IgdGhlIGRldmljZS4KICovCnN0YXRpYyBjb25zdCBzdHJ1Y3QgcGNpX2RldmljZV9pZCBm
aXhlZF9kbWFfYWxpYXNfdGJsW10gPSB7Cgl7IFBDSV9ERVZJQ0VfU1VCKFBDSV9WRU5ET1JfSURf
QURBUFRFQzIsIDB4MDI4NSwKCQkJIFBDSV9WRU5ET1JfSURfQURBUFRFQzIsIDB4MDJiYiksIC8q
IEFkYXB0ZWMgMzQwNSAqLwoJICAuZHJpdmVyX2RhdGEgPSBQQ0lfREVWRk4oMSwgMCkgfSwKCXsg
UENJX0RFVklDRV9TVUIoUENJX1ZFTkRPUl9JRF9BREFQVEVDMiwgMHgwMjg1LAoJCQkgUENJX1ZF
TkRPUl9JRF9BREFQVEVDMiwgMHgwMmJjKSwgLyogQWRhcHRlYyAzODA1ICovCgkgIC5kcml2ZXJf
ZGF0YSA9IFBDSV9ERVZGTigxLCAwKSB9LAoJeyAwIH0KfTsKCnN0YXRpYyB2b2lkIHF1aXJrX2Zp
eGVkX2RtYV9hbGlhcyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgljb25zdCBzdHJ1Y3QgcGNpX2Rl
dmljZV9pZCAqaWQ7CgoJaWQgPSBwY2lfbWF0Y2hfaWQoZml4ZWRfZG1hX2FsaWFzX3RibCwgZGV2
KTsKCWlmIChpZCkKCQlwY2lfYWRkX2RtYV9hbGlhcyhkZXYsIGlkLT5kcml2ZXJfZGF0YSk7Cn0K
CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0FEQVBURUMyLCAweDAyODUs
IHF1aXJrX2ZpeGVkX2RtYV9hbGlhcyk7CgovKgogKiBBIGZldyBQQ0llLXRvLVBDSSBicmlkZ2Vz
IGZhaWwgdG8gZXhwb3NlIGEgUENJZSBjYXBhYmlsaXR5LCByZXN1bHRpbmcgaW4KICogdXNpbmcg
dGhlIHdyb25nIERNQSBhbGlhcyBmb3IgdGhlIGRldmljZS4gIFNvbWUgb2YgdGhlc2UgZGV2aWNl
cyBjYW4gYmUKICogdXNlZCBhcyBlaXRoZXIgZm9yd2FyZCBvciByZXZlcnNlIGJyaWRnZXMsIHNv
IHdlIG5lZWQgdG8gdGVzdCB3aGV0aGVyIHRoZQogKiBkZXZpY2UgaXMgb3BlcmF0aW5nIGluIHRo
ZSBjb3JyZWN0IG1vZGUuICBXZSBjb3VsZCBwcm9iYWJseSBhcHBseSB0aGlzCiAqIHF1aXJrIHRv
IFBDSV9BTllfSUQsIGJ1dCBmb3Igbm93IHdlJ2xsIGp1c3QgdXNlIGtub3duIG9mZmVuZGVycy4g
IFRoZSB0ZXN0CiAqIGlzIGZvciBhIG5vbi1yb290LCBub24tUENJZSBicmlkZ2Ugd2hlcmUgdGhl
IHVwc3RyZWFtIGRldmljZSBpcyBQQ0llIGFuZAogKiBpcyBub3QgYSBQQ0llLXRvLVBDSSBicmlk
Z2UsIHRoZW4gQHBkZXYgaXMgYWN0dWFsbHkgYSBQQ0llLXRvLVBDSSBicmlkZ2UuCiAqLwpzdGF0
aWMgdm9pZCBxdWlya191c2VfcGNpZV9icmlkZ2VfZG1hX2FsaWFzKHN0cnVjdCBwY2lfZGV2ICpw
ZGV2KQp7CglpZiAoIXBjaV9pc19yb290X2J1cyhwZGV2LT5idXMpICYmCgkgICAgcGRldi0+aGRy
X3R5cGUgPT0gUENJX0hFQURFUl9UWVBFX0JSSURHRSAmJgoJICAgICFwY2lfaXNfcGNpZShwZGV2
KSAmJiBwY2lfaXNfcGNpZShwZGV2LT5idXMtPnNlbGYpICYmCgkgICAgcGNpX3BjaWVfdHlwZShw
ZGV2LT5idXMtPnNlbGYpICE9IFBDSV9FWFBfVFlQRV9QQ0lfQlJJREdFKQoJCXBkZXYtPmRldl9m
bGFncyB8PSBQQ0lfREVWX0ZMQUdfUENJRV9CUklER0VfQUxJQVM7Cn0KLyogQVNNMTA4My8xMDg1
LCBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lkPTQ0ODgxI2M0NiAq
LwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9BU01FRElBLCAweDEwODAs
CgkJCSBxdWlya191c2VfcGNpZV9icmlkZ2VfZG1hX2FsaWFzKTsKLyogVHVuZHJhIDgxMTMsIGh0
dHBzOi8vYnVnemlsbGEua2VybmVsLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDQ4ODEjYzQzICovCkRF
Q0xBUkVfUENJX0ZJWFVQX0hFQURFUigweDEwZTMsIDB4ODExMywgcXVpcmtfdXNlX3BjaWVfYnJp
ZGdlX2RtYV9hbGlhcyk7Ci8qIElURSA4ODkyLCBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcv
c2hvd19idWcuY2dpP2lkPTczNTUxICovCkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUigweDEyODMs
IDB4ODg5MiwgcXVpcmtfdXNlX3BjaWVfYnJpZGdlX2RtYV9hbGlhcyk7Ci8qIElURSA4ODkzIGhh
cyB0aGUgc2FtZSBwcm9ibGVtIGFzIHRoZSA4ODkyICovCkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURF
UigweDEyODMsIDB4ODg5MywgcXVpcmtfdXNlX3BjaWVfYnJpZGdlX2RtYV9hbGlhcyk7Ci8qIElu
dGVsIDgyODAxLCBodHRwczovL2J1Z3ppbGxhLmtlcm5lbC5vcmcvc2hvd19idWcuY2dpP2lkPTQ0
ODgxI2M0OSAqLwpERUNMQVJFX1BDSV9GSVhVUF9IRUFERVIoMHg4MDg2LCAweDI0NGUsIHF1aXJr
X3VzZV9wY2llX2JyaWRnZV9kbWFfYWxpYXMpOwoKLyoKICogTUlDIHgyMDAgTlRCIGZvcndhcmRz
IFBDSWUgdHJhZmZpYyB1c2luZyBtdWx0aXBsZSBhbGllbiBSSURzLiBUaGV5IGhhdmUgdG8KICog
YmUgYWRkZWQgYXMgYWxpYXNlcyB0byB0aGUgRE1BIGRldmljZSBpbiBvcmRlciB0byBhbGxvdyBi
dWZmZXIgYWNjZXNzCiAqIHdoZW4gSU9NTVUgaXMgZW5hYmxlZC4gRm9sbG93aW5nIGRldmZucyBo
YXZlIHRvIG1hdGNoIFJJVC1MVVQgdGFibGUKICogcHJvZ3JhbW1lZCBpbiB0aGUgRUVQUk9NLgog
Ki8Kc3RhdGljIHZvaWQgcXVpcmtfbWljX3gyMDBfZG1hX2FsaWFzKHN0cnVjdCBwY2lfZGV2ICpw
ZGV2KQp7CglwY2lfYWRkX2RtYV9hbGlhcyhwZGV2LCBQQ0lfREVWRk4oMHgxMCwgMHgwKSk7Cglw
Y2lfYWRkX2RtYV9hbGlhcyhwZGV2LCBQQ0lfREVWRk4oMHgxMSwgMHgwKSk7CglwY2lfYWRkX2Rt
YV9hbGlhcyhwZGV2LCBQQ0lfREVWRk4oMHgxMiwgMHgzKSk7Cn0KREVDTEFSRV9QQ0lfRklYVVBf
SEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjI2MCwgcXVpcmtfbWljX3gyMDBfZG1hX2Fs
aWFzKTsKREVDTEFSRV9QQ0lfRklYVVBfSEVBREVSKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MjI2
NCwgcXVpcmtfbWljX3gyMDBfZG1hX2FsaWFzKTsKCi8qCiAqIFRoZSBJT01NVSBhbmQgaW50ZXJy
dXB0IGNvbnRyb2xsZXIgb24gQnJvYWRjb20gVnVsY2FuL0Nhdml1bSBUaHVuZGVyWDIgYXJlCiAq
IGFzc29jaWF0ZWQgbm90IGF0IHRoZSByb290IGJ1cywgYnV0IGF0IGEgYnJpZGdlIGJlbG93LiBU
aGlzIHF1aXJrIGF2b2lkcwogKiBnZW5lcmF0aW5nIGludmFsaWQgRE1BIGFsaWFzZXMuCiAqLwpz
dGF0aWMgdm9pZCBxdWlya19icmlkZ2VfY2F2bV90aHJ4Ml9wY2llX3Jvb3Qoc3RydWN0IHBjaV9k
ZXYgKnBkZXYpCnsKCXBkZXYtPmRldl9mbGFncyB8PSBQQ0lfREVWX0ZMQUdTX0JSSURHRV9YTEFU
RV9ST09UOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0JST0FEQ09N
LCAweDkwMDAsCgkJCQlxdWlya19icmlkZ2VfY2F2bV90aHJ4Ml9wY2llX3Jvb3QpOwpERUNMQVJF
X1BDSV9GSVhVUF9IRUFERVIoUENJX1ZFTkRPUl9JRF9CUk9BRENPTSwgMHg5MDg0LAoJCQkJcXVp
cmtfYnJpZGdlX2Nhdm1fdGhyeDJfcGNpZV9yb290KTsKCi8qCiAqIEludGVyc2lsL1RlY2h3ZWxs
IFRXNjg2WzQ1ODldLWJhc2VkIHZpZGVvIGNhcHR1cmUgY2FyZHMgaGF2ZSBhbiBlbXB0eSAoemVy
bykKICogY2xhc3MgY29kZS4gIEZpeCBpdC4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3R3Njg2eF9j
bGFzcyhzdHJ1Y3QgcGNpX2RldiAqcGRldikKewoJdTMyIGNsYXNzID0gcGRldi0+Y2xhc3M7CgoJ
LyogVXNlICJNdWx0aW1lZGlhIGNvbnRyb2xsZXIiIGNsYXNzICovCglwZGV2LT5jbGFzcyA9IChQ
Q0lfQ0xBU1NfTVVMVElNRURJQV9PVEhFUiA8PCA4KSB8IDB4MDE7CglwY2lfaW5mbyhwZGV2LCAi
VFc2ODZ4IFBDSSBjbGFzcyBvdmVycmlkZGVuICglIzA4eCAtPiAlIzA4eClcbiIsCgkJIGNsYXNz
LCBwZGV2LT5jbGFzcyk7Cn0KREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoMHgxNzk3LCAw
eDY4NjQsIFBDSV9DTEFTU19OT1RfREVGSU5FRCwgOCwKCQkJICAgICAgcXVpcmtfdHc2ODZ4X2Ns
YXNzKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoMHgxNzk3LCAweDY4NjUsIFBDSV9D
TEFTU19OT1RfREVGSU5FRCwgOCwKCQkJICAgICAgcXVpcmtfdHc2ODZ4X2NsYXNzKTsKREVDTEFS
RV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoMHgxNzk3LCAweDY4NjgsIFBDSV9DTEFTU19OT1RfREVG
SU5FRCwgOCwKCQkJICAgICAgcXVpcmtfdHc2ODZ4X2NsYXNzKTsKREVDTEFSRV9QQ0lfRklYVVBf
Q0xBU1NfRUFSTFkoMHgxNzk3LCAweDY4NjksIFBDSV9DTEFTU19OT1RfREVGSU5FRCwgOCwKCQkJ
ICAgICAgcXVpcmtfdHc2ODZ4X2NsYXNzKTsKCi8qCiAqIFNvbWUgZGV2aWNlcyBoYXZlIHByb2Js
ZW1zIHdpdGggVHJhbnNhY3Rpb24gTGF5ZXIgUGFja2V0cyB3aXRoIHRoZSBSZWxheGVkCiAqIE9y
ZGVyaW5nIEF0dHJpYnV0ZSBzZXQuICBTdWNoIGRldmljZXMgc2hvdWxkIG1hcmsgdGhlbXNlbHZl
cyBhbmQgb3RoZXIKICogZGV2aWNlIGRyaXZlcnMgc2hvdWxkIGNoZWNrIGJlZm9yZSBzZW5kaW5n
IFRMUHMgd2l0aCBSTyBzZXQuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19yZWxheGVkb3JkZXJpbmdf
ZGlzYWJsZShzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPmRldl9mbGFncyB8PSBQQ0lfREVW
X0ZMQUdTX05PX1JFTEFYRURfT1JERVJJTkc7CglwY2lfaW5mbyhkZXYsICJEaXNhYmxlIFJlbGF4
ZWQgT3JkZXJpbmcgQXR0cmlidXRlcyB0byBhdm9pZCBQQ0llIENvbXBsZXRpb24gZXJyYXR1bVxu
Iik7Cn0KCi8qCiAqIEludGVsIFhlb24gcHJvY2Vzc29ycyBiYXNlZCBvbiBCcm9hZHdlbGwvSGFz
d2VsbCBtaWNyb2FyY2hpdGVjdHVyZSBSb290CiAqIENvbXBsZXggaGF2ZSBhIEZsb3cgQ29udHJv
bCBDcmVkaXQgaXNzdWUgd2hpY2ggY2FuIGNhdXNlIHBlcmZvcm1hbmNlCiAqIHByb2JsZW1zIHdp
dGggVXBzdHJlYW0gVHJhbnNhY3Rpb24gTGF5ZXIgUGFja2V0cyB3aXRoIFJlbGF4ZWQgT3JkZXJp
bmcgc2V0LgogKi8KREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9J
TlRFTCwgMHg2ZjAxLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3Jl
bGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjAyLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAg
ICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xB
U1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjAzLCBQQ0lfQ0xBU1NfTk9UX0RFRklO
RUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9Q
Q0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjA0LCBQQ0lfQ0xB
U1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxl
KTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2
ZjA1LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRl
cmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9J
RF9JTlRFTCwgMHg2ZjA2LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJr
X3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFko
UENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjA3LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJ
CSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBf
Q0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjA4LCBQQ0lfQ0xBU1NfTk9UX0RF
RklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFS
RV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjA5LCBQQ0lf
Q0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNh
YmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHg2ZjBhLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRv
cmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgMHg2ZjBiLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1
aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFS
TFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjBjLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgs
CgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklY
VVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjBkLCBQQ0lfQ0xBU1NfTk9U
X0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVD
TEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHg2ZjBlLCBQ
Q0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19k
aXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRF
TCwgMHgyZjAxLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4
ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZF
TkRPUl9JRF9JTlRFTCwgMHgyZjAyLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAg
IHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1Nf
RUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjAzLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQs
IDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lf
RklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjA0LCBQQ0lfQ0xBU1Nf
Tk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsK
REVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjA1
LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmlu
Z19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9J
TlRFTCwgMHgyZjA2LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3Jl
bGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJ
X1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjA3LCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAg
ICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xB
U1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjA4LCBQQ0lfQ0xBU1NfTk9UX0RFRklO
RUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9Q
Q0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjA5LCBQQ0lfQ0xB
U1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxl
KTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgy
ZjBhLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRl
cmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9J
RF9JTlRFTCwgMHgyZjBiLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJr
X3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFko
UENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjBjLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQsIDgsCgkJ
CSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lfRklYVVBf
Q0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjBkLCBQQ0lfQ0xBU1NfTk9UX0RF
RklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFS
RV9QQ0lfRklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgyZjBlLCBQQ0lf
Q0xBU1NfTk9UX0RFRklORUQsIDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNh
YmxlKTsKCi8qCiAqIFRoZSBBTUQgQVJNIEExMTAwIChha2EgIlNFQVRUTEUiKSBTb0MgaGFzIGEg
YnVnIGluIGl0cyBQQ0llIFJvb3QgQ29tcGxleAogKiB3aGVyZSBVcHN0cmVhbSBUcmFuc2FjdGlv
biBMYXllciBQYWNrZXRzIHdpdGggdGhlIFJlbGF4ZWQgT3JkZXJpbmcKICogQXR0cmlidXRlIGNs
ZWFyIGFyZSBhbGxvd2VkIHRvIGJ5cGFzcyBlYXJsaWVyIFRMUHMgd2l0aCBSZWxheGVkIE9yZGVy
aW5nCiAqIHNldC4gIFRoaXMgaXMgYSB2aW9sYXRpb24gb2YgdGhlIFBDSWUgMy4wIFRyYW5zYWN0
aW9uIE9yZGVyaW5nIFJ1bGVzCiAqIG91dGxpbmVkIGluIFNlY3Rpb24gMi40LjEgKFBDSSBFeHBy
ZXNzKHIpIEJhc2UgU3BlY2lmaWNhdGlvbiBSZXZpc2lvbiAzLjAKICogTm92ZW1iZXIgMTAsIDIw
MTApLiAgQXMgYSByZXN1bHQsIG9uIHRoaXMgcGxhdGZvcm0gd2UgY2FuJ3QgdXNlIFJlbGF4ZWQK
ICogT3JkZXJpbmcgZm9yIFVwc3RyZWFtIFRMUHMuCiAqLwpERUNMQVJFX1BDSV9GSVhVUF9DTEFT
U19FQVJMWShQQ0lfVkVORE9SX0lEX0FNRCwgMHgxYTAwLCBQQ0lfQ0xBU1NfTk9UX0RFRklORUQs
IDgsCgkJCSAgICAgIHF1aXJrX3JlbGF4ZWRvcmRlcmluZ19kaXNhYmxlKTsKREVDTEFSRV9QQ0lf
RklYVVBfQ0xBU1NfRUFSTFkoUENJX1ZFTkRPUl9JRF9BTUQsIDB4MWEwMSwgUENJX0NMQVNTX05P
VF9ERUZJTkVELCA4LAoJCQkgICAgICBxdWlya19yZWxheGVkb3JkZXJpbmdfZGlzYWJsZSk7CkRF
Q0xBUkVfUENJX0ZJWFVQX0NMQVNTX0VBUkxZKFBDSV9WRU5ET1JfSURfQU1ELCAweDFhMDIsIFBD
SV9DTEFTU19OT1RfREVGSU5FRCwgOCwKCQkJICAgICAgcXVpcmtfcmVsYXhlZG9yZGVyaW5nX2Rp
c2FibGUpOwoKLyoKICogUGVyIFBDSWUgcjMuMCwgc2VjIDIuMi45LCAiQ29tcGxldGlvbiBoZWFk
ZXJzIG11c3Qgc3VwcGx5IHRoZSBzYW1lCiAqIHZhbHVlcyBmb3IgdGhlIEF0dHJpYnV0ZSBhcyB3
ZXJlIHN1cHBsaWVkIGluIHRoZSBoZWFkZXIgb2YgdGhlCiAqIGNvcnJlc3BvbmRpbmcgUmVxdWVz
dCwgZXhjZXB0IGFzIGV4cGxpY2l0bHkgYWxsb3dlZCB3aGVuIElETyBpcyB1c2VkLiIKICoKICog
SWYgYSBub24tY29tcGxpYW50IGRldmljZSBnZW5lcmF0ZXMgYSBjb21wbGV0aW9uIHdpdGggYSBk
aWZmZXJlbnQKICogYXR0cmlidXRlIHRoYW4gdGhlIHJlcXVlc3QsIHRoZSByZWNlaXZlciBtYXkg
YWNjZXB0IGl0ICh3aGljaCBpdHNlbGYKICogc2VlbXMgbm9uLWNvbXBsaWFudCBiYXNlZCBvbiBz
ZWMgMi4zLjIpLCBvciBpdCBtYXkgaGFuZGxlIGl0IGFzIGEKICogTWFsZm9ybWVkIFRMUCBvciBh
biBVbmV4cGVjdGVkIENvbXBsZXRpb24sIHdoaWNoIHdpbGwgcHJvYmFibHkgbGVhZCB0byBhCiAq
IGRldmljZSBhY2Nlc3MgdGltZW91dC4KICoKICogSWYgdGhlIG5vbi1jb21wbGlhbnQgZGV2aWNl
IGdlbmVyYXRlcyBjb21wbGV0aW9ucyB3aXRoIHplcm8gYXR0cmlidXRlcwogKiAoaW5zdGVhZCBv
ZiBjb3B5aW5nIHRoZSBhdHRyaWJ1dGVzIGZyb20gdGhlIHJlcXVlc3QpLCB3ZSBjYW4gd29yayBh
cm91bmQKICogdGhpcyBieSBkaXNhYmxpbmcgdGhlICJSZWxheGVkIE9yZGVyaW5nIiBhbmQgIk5v
IFNub29wIiBhdHRyaWJ1dGVzIGluCiAqIHVwc3RyZWFtIGRldmljZXMgc28gdGhleSBhbHdheXMg
Z2VuZXJhdGUgcmVxdWVzdHMgd2l0aCB6ZXJvIGF0dHJpYnV0ZXMuCiAqCiAqIFRoaXMgYWZmZWN0
cyBvdGhlciBkZXZpY2VzIHVuZGVyIHRoZSBzYW1lIFJvb3QgUG9ydCwgYnV0IHNpbmNlIHRoZXNl
CiAqIGF0dHJpYnV0ZXMgYXJlIHBlcmZvcm1hbmNlIGhpbnRzLCB0aGVyZSBzaG91bGQgYmUgbm8g
ZnVuY3Rpb25hbCBwcm9ibGVtLgogKgogKiBOb3RlIHRoYXQgQ29uZmlndXJhdGlvbiBTcGFjZSBh
Y2Nlc3NlcyBhcmUgbmV2ZXIgc3VwcG9zZWQgdG8gaGF2ZSBUTFAKICogQXR0cmlidXRlcywgc28g
d2UncmUgc2FmZSB3YWl0aW5nIHRpbGwgYWZ0ZXIgYW55IENvbmZpZ3VyYXRpb24gU3BhY2UKICog
YWNjZXNzZXMgdG8gZG8gdGhlIFJvb3QgUG9ydCBmaXh1cC4KICovCnN0YXRpYyB2b2lkIHF1aXJr
X2Rpc2FibGVfcm9vdF9wb3J0X2F0dHJpYnV0ZXMoc3RydWN0IHBjaV9kZXYgKnBkZXYpCnsKCXN0
cnVjdCBwY2lfZGV2ICpyb290X3BvcnQgPSBwY2lfZmluZF9wY2llX3Jvb3RfcG9ydChwZGV2KTsK
CglpZiAoIXJvb3RfcG9ydCkgewoJCXBjaV93YXJuKHBkZXYsICJQQ0llIENvbXBsZXRpb24gZXJy
YXR1bSBtYXkgY2F1c2UgZGV2aWNlIGVycm9yc1xuIik7CgkJcmV0dXJuOwoJfQoKCXBjaV9pbmZv
KHJvb3RfcG9ydCwgIkRpc2FibGluZyBObyBTbm9vcC9SZWxheGVkIE9yZGVyaW5nIEF0dHJpYnV0
ZXMgdG8gYXZvaWQgUENJZSBDb21wbGV0aW9uIGVycmF0dW0gaW4gJXNcbiIsCgkJIGRldl9uYW1l
KCZwZGV2LT5kZXYpKTsKCXBjaWVfY2FwYWJpbGl0eV9jbGVhcl9hbmRfc2V0X3dvcmQocm9vdF9w
b3J0LCBQQ0lfRVhQX0RFVkNUTCwKCQkJCQkgICBQQ0lfRVhQX0RFVkNUTF9SRUxBWF9FTiB8CgkJ
CQkJICAgUENJX0VYUF9ERVZDVExfTk9TTk9PUF9FTiwgMCk7Cn0KCi8qCiAqIFRoZSBDaGVsc2lv
IFQ1IGNoaXAgZmFpbHMgdG8gY29weSBUTFAgQXR0cmlidXRlcyBmcm9tIGEgUmVxdWVzdCB0byB0
aGUKICogQ29tcGxldGlvbiBpdCBnZW5lcmF0ZXMuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19jaGVs
c2lvX1Q1X2Rpc2FibGVfcm9vdF9wb3J0X2F0dHJpYnV0ZXMoc3RydWN0IHBjaV9kZXYgKnBkZXYp
CnsKCS8qCgkgKiBUaGlzIG1hc2svY29tcGFyZSBvcGVyYXRpb24gc2VsZWN0cyBmb3IgUGh5c2lj
YWwgRnVuY3Rpb24gNCBvbiBhCgkgKiBUNS4gIFdlIG9ubHkgbmVlZCB0byBmaXggdXAgdGhlIFJv
b3QgUG9ydCBvbmNlIGZvciBhbnkgb2YgdGhlCgkgKiBQRnMuICBQRlswLi4zXSBoYXZlIFBDSSBE
ZXZpY2UgSURzIG9mIDB4NTB4eCwgYnV0IFBGNCBpcyB1bmlxdWVseQoJICogMHg1NHh4IHNvIHdl
IHVzZSB0aGF0IG9uZS4KCSAqLwoJaWYgKChwZGV2LT5kZXZpY2UgJiAweGZmMDApID09IDB4NTQw
MCkKCQlxdWlya19kaXNhYmxlX3Jvb3RfcG9ydF9hdHRyaWJ1dGVzKHBkZXYpOwp9CkRFQ0xBUkVf
UENJX0ZJWFVQX0hFQURFUihQQ0lfVkVORE9SX0lEX0NIRUxTSU8sIFBDSV9BTllfSUQsCgkJCSBx
dWlya19jaGVsc2lvX1Q1X2Rpc2FibGVfcm9vdF9wb3J0X2F0dHJpYnV0ZXMpOwoKLyoKICogQU1E
IGhhcyBpbmRpY2F0ZWQgdGhhdCB0aGUgZGV2aWNlcyBiZWxvdyBkbyBub3Qgc3VwcG9ydCBwZWVy
LXRvLXBlZXIKICogaW4gYW55IHN5c3RlbSB3aGVyZSB0aGV5IGFyZSBmb3VuZCBpbiB0aGUgc291
dGhicmlkZ2Ugd2l0aCBhbiBBTUQKICogSU9NTVUgaW4gdGhlIHN5c3RlbS4gIE11bHRpZnVuY3Rp
b24gZGV2aWNlcyB0aGF0IGRvIG5vdCBzdXBwb3J0CiAqIHBlZXItdG8tcGVlciBiZXR3ZWVuIGZ1
bmN0aW9ucyBjYW4gY2xhaW0gdG8gc3VwcG9ydCBhIHN1YnNldCBvZiBBQ1MuCiAqIFN1Y2ggZGV2
aWNlcyBlZmZlY3RpdmVseSBlbmFibGUgcmVxdWVzdCByZWRpcmVjdCAoUlIpIGFuZCBjb21wbGV0
aW9uCiAqIHJlZGlyZWN0IChDUikgc2luY2UgYWxsIHRyYW5zYWN0aW9ucyBhcmUgcmVkaXJlY3Rl
ZCB0byB0aGUgdXBzdHJlYW0KICogcm9vdCBjb21wbGV4LgogKgogKiBodHRwOi8vcGVybWFsaW5r
LmdtYW5lLm9yZy9nbWFuZS5jb21wLmVtdWxhdG9ycy5rdm0uZGV2ZWwvOTQwODYKICogaHR0cDov
L3Blcm1hbGluay5nbWFuZS5vcmcvZ21hbmUuY29tcC5lbXVsYXRvcnMua3ZtLmRldmVsLzk0MTAy
CiAqIGh0dHA6Ly9wZXJtYWxpbmsuZ21hbmUub3JnL2dtYW5lLmNvbXAuZW11bGF0b3JzLmt2bS5k
ZXZlbC85OTQwMgogKgogKiAxMDAyOjQzODUgU0J4MDAgU01CdXMgQ29udHJvbGxlcgogKiAxMDAy
OjQzOWMgU0I3eDAvU0I4eDAvU0I5eDAgSURFIENvbnRyb2xsZXIKICogMTAwMjo0MzgzIFNCeDAw
IEF6YWxpYSAoSW50ZWwgSERBKQogKiAxMDAyOjQzOWQgU0I3eDAvU0I4eDAvU0I5eDAgTFBDIGhv
c3QgY29udHJvbGxlcgogKiAxMDAyOjQzODQgU0J4MDAgUENJIHRvIFBDSSBCcmlkZ2UKICogMTAw
Mjo0Mzk5IFNCN3gwL1NCOHgwL1NCOXgwIFVTQiBPSENJMiBDb250cm9sbGVyCiAqCiAqIGh0dHBz
Oi8vYnVnemlsbGEua2VybmVsLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9ODE4NDEjYzE1CiAqCiAqIDEw
MjI6NzgwZiBbQU1EXSBGQ0ggUENJIEJyaWRnZQogKiAxMDIyOjc4MDkgW0FNRF0gRkNIIFVTQiBP
SENJIENvbnRyb2xsZXIKICovCnN0YXRpYyBpbnQgcGNpX3F1aXJrX2FtZF9zYl9hY3Moc3RydWN0
IHBjaV9kZXYgKmRldiwgdTE2IGFjc19mbGFncykKewojaWZkZWYgQ09ORklHX0FDUEkKCXN0cnVj
dCBhY3BpX3RhYmxlX2hlYWRlciAqaGVhZGVyID0gTlVMTDsKCWFjcGlfc3RhdHVzIHN0YXR1czsK
CgkvKiBUYXJnZXRpbmcgbXVsdGlmdW5jdGlvbiBkZXZpY2VzIG9uIHRoZSBTQiAoYXBwZWFycyBv
biByb290IGJ1cykgKi8KCWlmICghZGV2LT5tdWx0aWZ1bmN0aW9uIHx8ICFwY2lfaXNfcm9vdF9i
dXMoZGV2LT5idXMpKQoJCXJldHVybiAtRU5PREVWOwoKCS8qIFRoZSBJVlJTIHRhYmxlIGRlc2Ny
aWJlcyB0aGUgQU1EIElPTU1VICovCglzdGF0dXMgPSBhY3BpX2dldF90YWJsZSgiSVZSUyIsIDAs
ICZoZWFkZXIpOwoJaWYgKEFDUElfRkFJTFVSRShzdGF0dXMpKQoJCXJldHVybiAtRU5PREVWOwoK
CS8qIEZpbHRlciBvdXQgZmxhZ3Mgbm90IGFwcGxpY2FibGUgdG8gbXVsdGlmdW5jdGlvbiAqLwoJ
YWNzX2ZsYWdzICY9IChQQ0lfQUNTX1JSIHwgUENJX0FDU19DUiB8IFBDSV9BQ1NfRUMgfCBQQ0lf
QUNTX0RUKTsKCglyZXR1cm4gYWNzX2ZsYWdzICYgfihQQ0lfQUNTX1JSIHwgUENJX0FDU19DUikg
PyAwIDogMTsKI2Vsc2UKCXJldHVybiAtRU5PREVWOwojZW5kaWYKfQoKc3RhdGljIGJvb2wgcGNp
X3F1aXJrX2Nhdml1bV9hY3NfbWF0Y2goc3RydWN0IHBjaV9kZXYgKmRldikKewoJLyoKCSAqIEVm
ZmVjdGl2ZWx5IHNlbGVjdHMgYWxsIGRvd25zdHJlYW0gcG9ydHMgZm9yIHdob2xlIFRodW5kZXJY
IDEKCSAqIGZhbWlseSBieSAweGY4MDAgbWFzayAod2hpY2ggcmVwcmVzZW50cyA4IFNvQ3MpLCB3
aGlsZSB0aGUgbG93ZXIKCSAqIGJpdHMgb2YgZGV2aWNlIElEIGFyZSB1c2VkIHRvIGluZGljYXRl
IHdoaWNoIHN1YmRldmljZSBpcyB1c2VkCgkgKiB3aXRoaW4gdGhlIFNvQy4KCSAqLwoJcmV0dXJu
IChwY2lfaXNfcGNpZShkZXYpICYmCgkJKHBjaV9wY2llX3R5cGUoZGV2KSA9PSBQQ0lfRVhQX1RZ
UEVfUk9PVF9QT1JUKSAmJgoJCSgoZGV2LT5kZXZpY2UgJiAweGY4MDApID09IDB4YTAwMCkpOwp9
CgpzdGF0aWMgaW50IHBjaV9xdWlya19jYXZpdW1fYWNzKHN0cnVjdCBwY2lfZGV2ICpkZXYsIHUx
NiBhY3NfZmxhZ3MpCnsKCS8qCgkgKiBDYXZpdW0gcm9vdCBwb3J0cyBkb24ndCBhZHZlcnRpc2Ug
YW4gQUNTIGNhcGFiaWxpdHkuICBIb3dldmVyLAoJICogdGhlIFJUTCBpbnRlcm5hbGx5IGltcGxl
bWVudHMgc2ltaWxhciBwcm90ZWN0aW9uIGFzIGlmIEFDUyBoYWQKCSAqIFJlcXVlc3QgUmVkaXJl
Y3Rpb24sIENvbXBsZXRpb24gUmVkaXJlY3Rpb24sIFNvdXJjZSBWYWxpZGF0aW9uLAoJICogYW5k
IFVwc3RyZWFtIEZvcndhcmRpbmcgZmVhdHVyZXMgZW5hYmxlZC4gIEFzc2VydCB0aGF0IHRoZQoJ
ICogaGFyZHdhcmUgaW1wbGVtZW50cyBhbmQgZW5hYmxlcyBlcXVpdmFsZW50IEFDUyBmdW5jdGlv
bmFsaXR5IGZvcgoJICogdGhlc2UgZmxhZ3MuCgkgKi8KCWFjc19mbGFncyAmPSB+KFBDSV9BQ1Nf
UlIgfCBQQ0lfQUNTX0NSIHwgUENJX0FDU19TViB8IFBDSV9BQ1NfVUYpOwoKCWlmICghcGNpX3F1
aXJrX2Nhdml1bV9hY3NfbWF0Y2goZGV2KSkKCQlyZXR1cm4gLUVOT1RUWTsKCglyZXR1cm4gYWNz
X2ZsYWdzID8gMCA6IDE7Cn0KCnN0YXRpYyBpbnQgcGNpX3F1aXJrX3hnZW5lX2FjcyhzdHJ1Y3Qg
cGNpX2RldiAqZGV2LCB1MTYgYWNzX2ZsYWdzKQp7CgkvKgoJICogWC1HZW5lIFJvb3QgUG9ydHMg
bWF0Y2hpbmcgdGhpcyBxdWlyayBkbyBub3QgYWxsb3cgcGVlci10by1wZWVyCgkgKiB0cmFuc2Fj
dGlvbnMgd2l0aCBvdGhlcnMsIGFsbG93aW5nIG1hc2tpbmcgb3V0IHRoZXNlIGJpdHMgYXMgaWYg
dGhleQoJICogd2VyZSB1bmltcGxlbWVudGVkIGluIHRoZSBBQ1MgY2FwYWJpbGl0eS4KCSAqLwoJ
YWNzX2ZsYWdzICY9IH4oUENJX0FDU19TViB8IFBDSV9BQ1NfUlIgfCBQQ0lfQUNTX0NSIHwgUENJ
X0FDU19VRik7CgoJcmV0dXJuIGFjc19mbGFncyA/IDAgOiAxOwp9CgovKgogKiBNYW55IEludGVs
IFBDSCByb290IHBvcnRzIGRvIHByb3ZpZGUgQUNTLWxpa2UgZmVhdHVyZXMgdG8gZGlzYWJsZSBw
ZWVyCiAqIHRyYW5zYWN0aW9ucyBhbmQgdmFsaWRhdGUgYnVzIG51bWJlcnMgaW4gcmVxdWVzdHMs
IGJ1dCBkbyBub3QgcHJvdmlkZSBhbgogKiBhY3R1YWwgUENJZSBBQ1MgY2FwYWJpbGl0eS4gIFRo
aXMgaXMgdGhlIGxpc3Qgb2YgZGV2aWNlIElEcyBrbm93biB0byBmYWxsCiAqIGludG8gdGhhdCBj
YXRlZ29yeSBhcyBwcm92aWRlZCBieSBJbnRlbCBpbiBSZWQgSGF0IGJ1Z3ppbGxhIDEwMzc2ODQu
CiAqLwpzdGF0aWMgY29uc3QgdTE2IHBjaV9xdWlya19pbnRlbF9wY2hfYWNzX2lkc1tdID0gewoJ
LyogSWJleHBlYWsgUENIICovCgkweDNiNDIsIDB4M2I0MywgMHgzYjQ0LCAweDNiNDUsIDB4M2I0
NiwgMHgzYjQ3LCAweDNiNDgsIDB4M2I0OSwKCTB4M2I0YSwgMHgzYjRiLCAweDNiNGMsIDB4M2I0
ZCwgMHgzYjRlLCAweDNiNGYsIDB4M2I1MCwgMHgzYjUxLAoJLyogQ291Z2FycG9pbnQgUENIICov
CgkweDFjMTAsIDB4MWMxMSwgMHgxYzEyLCAweDFjMTMsIDB4MWMxNCwgMHgxYzE1LCAweDFjMTYs
IDB4MWMxNywKCTB4MWMxOCwgMHgxYzE5LCAweDFjMWEsIDB4MWMxYiwgMHgxYzFjLCAweDFjMWQs
IDB4MWMxZSwgMHgxYzFmLAoJLyogUGFudGhlcnBvaW50IFBDSCAqLwoJMHgxZTEwLCAweDFlMTEs
IDB4MWUxMiwgMHgxZTEzLCAweDFlMTQsIDB4MWUxNSwgMHgxZTE2LCAweDFlMTcsCgkweDFlMTgs
IDB4MWUxOSwgMHgxZTFhLCAweDFlMWIsIDB4MWUxYywgMHgxZTFkLCAweDFlMWUsIDB4MWUxZiwK
CS8qIEx5bnhwb2ludC1IIFBDSCAqLwoJMHg4YzEwLCAweDhjMTEsIDB4OGMxMiwgMHg4YzEzLCAw
eDhjMTQsIDB4OGMxNSwgMHg4YzE2LCAweDhjMTcsCgkweDhjMTgsIDB4OGMxOSwgMHg4YzFhLCAw
eDhjMWIsIDB4OGMxYywgMHg4YzFkLCAweDhjMWUsIDB4OGMxZiwKCS8qIEx5bnhwb2ludC1MUCBQ
Q0ggKi8KCTB4OWMxMCwgMHg5YzExLCAweDljMTIsIDB4OWMxMywgMHg5YzE0LCAweDljMTUsIDB4
OWMxNiwgMHg5YzE3LAoJMHg5YzE4LCAweDljMTksIDB4OWMxYSwgMHg5YzFiLAoJLyogV2lsZGNh
dCBQQ0ggKi8KCTB4OWM5MCwgMHg5YzkxLCAweDljOTIsIDB4OWM5MywgMHg5Yzk0LCAweDljOTUs
IDB4OWM5NiwgMHg5Yzk3LAoJMHg5Yzk4LCAweDljOTksIDB4OWM5YSwgMHg5YzliLAoJLyogUGF0
c2J1cmcgKFg3OSkgUENIICovCgkweDFkMTAsIDB4MWQxMiwgMHgxZDE0LCAweDFkMTYsIDB4MWQx
OCwgMHgxZDFhLCAweDFkMWMsIDB4MWQxZSwKCS8qIFdlbGxzYnVyZyAoWDk5KSBQQ0ggKi8KCTB4
OGQxMCwgMHg4ZDExLCAweDhkMTIsIDB4OGQxMywgMHg4ZDE0LCAweDhkMTUsIDB4OGQxNiwgMHg4
ZDE3LAoJMHg4ZDE4LCAweDhkMTksIDB4OGQxYSwgMHg4ZDFiLCAweDhkMWMsIDB4OGQxZCwgMHg4
ZDFlLAoJLyogTHlueCBQb2ludCAoOSBzZXJpZXMpIFBDSCAqLwoJMHg4YzkwLCAweDhjOTIsIDB4
OGM5NCwgMHg4Yzk2LCAweDhjOTgsIDB4OGM5YSwgMHg4YzljLCAweDhjOWUsCn07CgpzdGF0aWMg
Ym9vbCBwY2lfcXVpcmtfaW50ZWxfcGNoX2Fjc19tYXRjaChzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7
CglpbnQgaTsKCgkvKiBGaWx0ZXIgb3V0IGEgZmV3IG9idmlvdXMgbm9uLW1hdGNoZXMgZmlyc3Qg
Ki8KCWlmICghcGNpX2lzX3BjaWUoZGV2KSB8fCBwY2lfcGNpZV90eXBlKGRldikgIT0gUENJX0VY
UF9UWVBFX1JPT1RfUE9SVCkKCQlyZXR1cm4gZmFsc2U7CgoJZm9yIChpID0gMDsgaSA8IEFSUkFZ
X1NJWkUocGNpX3F1aXJrX2ludGVsX3BjaF9hY3NfaWRzKTsgaSsrKQoJCWlmIChwY2lfcXVpcmtf
aW50ZWxfcGNoX2Fjc19pZHNbaV0gPT0gZGV2LT5kZXZpY2UpCgkJCXJldHVybiB0cnVlOwoKCXJl
dHVybiBmYWxzZTsKfQoKI2RlZmluZSBJTlRFTF9QQ0hfQUNTX0ZMQUdTIChQQ0lfQUNTX1JSIHwg
UENJX0FDU19DUiB8IFBDSV9BQ1NfVUYgfCBQQ0lfQUNTX1NWKQoKc3RhdGljIGludCBwY2lfcXVp
cmtfaW50ZWxfcGNoX2FjcyhzdHJ1Y3QgcGNpX2RldiAqZGV2LCB1MTYgYWNzX2ZsYWdzKQp7Cgl1
MTYgZmxhZ3MgPSBkZXYtPmRldl9mbGFncyAmIFBDSV9ERVZfRkxBR1NfQUNTX0VOQUJMRURfUVVJ
UksgPwoJCSAgICBJTlRFTF9QQ0hfQUNTX0ZMQUdTIDogMDsKCglpZiAoIXBjaV9xdWlya19pbnRl
bF9wY2hfYWNzX21hdGNoKGRldikpCgkJcmV0dXJuIC1FTk9UVFk7CgoJcmV0dXJuIGFjc19mbGFn
cyAmIH5mbGFncyA/IDAgOiAxOwp9CgovKgogKiBUaGVzZSBRQ09NIHJvb3QgcG9ydHMgZG8gcHJv
dmlkZSBBQ1MtbGlrZSBmZWF0dXJlcyB0byBkaXNhYmxlIHBlZXIKICogdHJhbnNhY3Rpb25zIGFu
ZCB2YWxpZGF0ZSBidXMgbnVtYmVycyBpbiByZXF1ZXN0cywgYnV0IGRvIG5vdCBwcm92aWRlIGFu
CiAqIGFjdHVhbCBQQ0llIEFDUyBjYXBhYmlsaXR5LiAgSGFyZHdhcmUgc3VwcG9ydHMgc291cmNl
IHZhbGlkYXRpb24gYnV0IGl0CiAqIHdpbGwgcmVwb3J0IHRoZSBpc3N1ZSBhcyBDb21wbGV0ZXIg
QWJvcnQgaW5zdGVhZCBvZiBBQ1MgVmlvbGF0aW9uLgogKiBIYXJkd2FyZSBkb2Vzbid0IHN1cHBv
cnQgcGVlci10by1wZWVyIGFuZCBlYWNoIHJvb3QgcG9ydCBpcyBhIHJvb3QKICogY29tcGxleCB3
aXRoIHVuaXF1ZSBzZWdtZW50IG51bWJlcnMuICBJdCBpcyBub3QgcG9zc2libGUgZm9yIG9uZSBy
b290CiAqIHBvcnQgdG8gcGFzcyB0cmFmZmljIHRvIGFub3RoZXIgcm9vdCBwb3J0LiAgQWxsIFBD
SWUgdHJhbnNhY3Rpb25zIGFyZQogKiB0ZXJtaW5hdGVkIGluc2lkZSB0aGUgcm9vdCBwb3J0Lgog
Ki8Kc3RhdGljIGludCBwY2lfcXVpcmtfcWNvbV9ycF9hY3Moc3RydWN0IHBjaV9kZXYgKmRldiwg
dTE2IGFjc19mbGFncykKewoJdTE2IGZsYWdzID0gKFBDSV9BQ1NfUlIgfCBQQ0lfQUNTX0NSIHwg
UENJX0FDU19VRiB8IFBDSV9BQ1NfU1YpOwoJaW50IHJldCA9IGFjc19mbGFncyAmIH5mbGFncyA/
IDAgOiAxOwoKCXBjaV9pbmZvKGRldiwgIlVzaW5nIFFDT00gQUNTIFF1aXJrICglZClcbiIsIHJl
dCk7CgoJcmV0dXJuIHJldDsKfQoKLyoKICogU3VucmlzZSBQb2ludCBQQ0ggcm9vdCBwb3J0cyBp
bXBsZW1lbnQgQUNTLCBidXQgdW5mb3J0dW5hdGVseSBhcyBzaG93biBpbgogKiB0aGUgZGF0YXNo
ZWV0IChJbnRlbCAxMDAgU2VyaWVzIENoaXBzZXQgRmFtaWx5IFBDSCBEYXRhc2hlZXQsIFZvbC4g
MiwKICogMTIuMS40NiwgMTIuMS40NylbMV0gdGhpcyBjaGlwc2V0IHVzZXMgZHdvcmRzIGZvciB0
aGUgQUNTIGNhcGFiaWxpdHkgYW5kCiAqIGNvbnRyb2wgcmVnaXN0ZXJzIHdoZXJlYXMgdGhlIFBD
SWUgc3BlYyBwYWNrcyB0aGVtIGludG8gd29yZHMgKFJldiAzLjAsCiAqIDcuMTYgQUNTIEV4dGVu
ZGVkIENhcGFiaWxpdHkpLiAgVGhlIGJpdCBkZWZpbml0aW9ucyBhcmUgY29ycmVjdCwgYnV0IHRo
ZQogKiBjb250cm9sIHJlZ2lzdGVyIGlzIGF0IG9mZnNldCA4IGluc3RlYWQgb2YgNiBhbmQgd2Ug
c2hvdWxkIHByb2JhYmx5IHVzZQogKiBkd29yZCBhY2Nlc3NlcyB0byB0aGVtLiAgVGhpcyBhcHBs
aWVzIHRvIHRoZSBmb2xsb3dpbmcgUENJIERldmljZSBJRHMsIGFzCiAqIGZvdW5kIGluIHZvbHVt
ZSAxIG9mIHRoZSBkYXRhc2hlZXRbMl06CiAqCiAqIDB4YTExMC0weGExMWYgU3VucmlzZSBQb2lu
dC1IIFBDSSBFeHByZXNzIFJvb3QgUG9ydCAjezAtMTZ9CiAqIDB4YTE2Ny0weGExNmEgU3Vucmlz
ZSBQb2ludC1IIFBDSSBFeHByZXNzIFJvb3QgUG9ydCAjezE3LTIwfQogKgogKiBOLkIuIFRoaXMg
ZG9lc24ndCBmaXggd2hhdCBsc3BjaSBzaG93cy4KICoKICogVGhlIDEwMCBzZXJpZXMgY2hpcHNl
dCBzcGVjaWZpY2F0aW9uIHVwZGF0ZSBpbmNsdWRlcyB0aGlzIGFzIGVycmF0YSAjMjNbM10uCiAq
CiAqIFRoZSAyMDAgc2VyaWVzIGNoaXBzZXQgKFVuaW9uIFBvaW50KSBoYXMgdGhlIHNhbWUgYnVn
IGFjY29yZGluZyB0byB0aGUKICogc3BlY2lmaWNhdGlvbiB1cGRhdGUgKEludGVsIDIwMCBTZXJp
ZXMgQ2hpcHNldCBGYW1pbHkgUGxhdGZvcm0gQ29udHJvbGxlcgogKiBIdWIsIFNwZWNpZmljYXRp
b24gVXBkYXRlLCBKYW51YXJ5IDIwMTcsIFJldmlzaW9uIDAwMSwgRG9jdW1lbnQjIDMzNTE5NC0w
MDEsCiAqIEVycmF0YSAyMilbNF0uICBQZXIgdGhlIGRhdGFzaGVldFs1XSwgcm9vdCBwb3J0IFBD
SSBEZXZpY2UgSURzIGZvciB0aGlzCiAqIGNoaXBzZXQgaW5jbHVkZToKICoKICogMHhhMjkwLTB4
YTI5ZiBQQ0kgRXhwcmVzcyBSb290IHBvcnQgI3swLTE2fQogKiAweGEyZTctMHhhMmVlIFBDSSBF
eHByZXNzIFJvb3QgcG9ydCAjezE3LTI0fQogKgogKiBNb2JpbGUgY2hpcHNldHMgYXJlIGFsc28g
YWZmZWN0ZWQsIDd0aCAmIDh0aCBHZW5lcmF0aW9uCiAqIFNwZWNpZmljYXRpb24gdXBkYXRlIGNv
bmZpcm1zIEFDUyBlcnJhdGEgMjIsIHN0YXR1cyBubyBmaXg6ICg3dGggR2VuZXJhdGlvbgogKiBJ
bnRlbCBQcm9jZXNzb3IgRmFtaWx5IEkvTyBmb3IgVS9ZIFBsYXRmb3JtcyBhbmQgOHRoIEdlbmVy
YXRpb24gSW50ZWwKICogUHJvY2Vzc29yIEZhbWlseSBJL08gZm9yIFUgUXVhZCBDb3JlIFBsYXRm
b3JtcyBTcGVjaWZpY2F0aW9uIFVwZGF0ZSwKICogQXVndXN0IDIwMTcsIFJldmlzaW9uIDAwMiwg
RG9jdW1lbnQjOiAzMzQ2NjAtMDAyKVs2XQogKiBEZXZpY2UgSURzIGZyb20gSS9PIGRhdGFzaGVl
dDogKDd0aCBHZW5lcmF0aW9uIEludGVsIFByb2Nlc3NvciBGYW1pbHkgSS9PCiAqIGZvciBVL1kg
UGxhdGZvcm1zIGFuZCA4dGggR2VuZXJhdGlvbiBJbnRlbCDCriBQcm9jZXNzb3IgRmFtaWx5IEkv
TyBmb3IgVQogKiBRdWFkIENvcmUgUGxhdGZvcm1zLCBWb2wgMSBvZiAyLCBBdWd1c3QgMjAxNywg
RG9jdW1lbnQjOiAzMzQ2NTgtMDAzKVs3XQogKgogKiAweDlkMTAtMHg5ZDFiIFBDSSBFeHByZXNz
IFJvb3QgcG9ydCAjezEtMTJ9CiAqCiAqIFsxXSBodHRwOi8vd3d3LmludGVsLmNvbS9jb250ZW50
L3d3dy91cy9lbi9jaGlwc2V0cy8xMDAtc2VyaWVzLWNoaXBzZXQtZGF0YXNoZWV0LXZvbC0yLmh0
bWwKICogWzJdIGh0dHA6Ly93d3cuaW50ZWwuY29tL2NvbnRlbnQvd3d3L3VzL2VuL2NoaXBzZXRz
LzEwMC1zZXJpZXMtY2hpcHNldC1kYXRhc2hlZXQtdm9sLTEuaHRtbAogKiBbM10gaHR0cDovL3d3
dy5pbnRlbC5jb20vY29udGVudC93d3cvdXMvZW4vY2hpcHNldHMvMTAwLXNlcmllcy1jaGlwc2V0
LXNwZWMtdXBkYXRlLmh0bWwKICogWzRdIGh0dHA6Ly93d3cuaW50ZWwuY29tL2NvbnRlbnQvd3d3
L3VzL2VuL2NoaXBzZXRzLzIwMC1zZXJpZXMtY2hpcHNldC1wY2gtc3BlYy11cGRhdGUuaHRtbAog
KiBbNV0gaHR0cDovL3d3dy5pbnRlbC5jb20vY29udGVudC93d3cvdXMvZW4vY2hpcHNldHMvMjAw
LXNlcmllcy1jaGlwc2V0LXBjaC1kYXRhc2hlZXQtdm9sLTEuaHRtbAogKiBbNl0gaHR0cHM6Ly93
d3cuaW50ZWwuY29tL2NvbnRlbnQvd3d3L3VzL2VuL3Byb2Nlc3NvcnMvY29yZS83dGgtZ2VuLWNv
cmUtZmFtaWx5LW1vYmlsZS11LXktcHJvY2Vzc29yLWxpbmVzLWktby1zcGVjLXVwZGF0ZS5odG1s
CiAqIFs3XSBodHRwczovL3d3dy5pbnRlbC5jb20vY29udGVudC93d3cvdXMvZW4vcHJvY2Vzc29y
cy9jb3JlLzd0aC1nZW4tY29yZS1mYW1pbHktbW9iaWxlLXUteS1wcm9jZXNzb3ItbGluZXMtaS1v
LWRhdGFzaGVldC12b2wtMS5odG1sCiAqLwpzdGF0aWMgYm9vbCBwY2lfcXVpcmtfaW50ZWxfc3B0
X3BjaF9hY3NfbWF0Y2goc3RydWN0IHBjaV9kZXYgKmRldikKewoJaWYgKCFwY2lfaXNfcGNpZShk
ZXYpIHx8IHBjaV9wY2llX3R5cGUoZGV2KSAhPSBQQ0lfRVhQX1RZUEVfUk9PVF9QT1JUKQoJCXJl
dHVybiBmYWxzZTsKCglzd2l0Y2ggKGRldi0+ZGV2aWNlKSB7CgljYXNlIDB4YTExMCAuLi4gMHhh
MTFmOiBjYXNlIDB4YTE2NyAuLi4gMHhhMTZhOiAvKiBTdW5yaXNlIFBvaW50ICovCgljYXNlIDB4
YTI5MCAuLi4gMHhhMjlmOiBjYXNlIDB4YTJlNyAuLi4gMHhhMmVlOiAvKiBVbmlvbiBQb2ludCAq
LwoJY2FzZSAweDlkMTAgLi4uIDB4OWQxYjogLyogN3RoICYgOHRoIEdlbiBNb2JpbGUgKi8KCQly
ZXR1cm4gdHJ1ZTsKCX0KCglyZXR1cm4gZmFsc2U7Cn0KCiNkZWZpbmUgSU5URUxfU1BUX0FDU19D
VFJMIChQQ0lfQUNTX0NBUCArIDQpCgpzdGF0aWMgaW50IHBjaV9xdWlya19pbnRlbF9zcHRfcGNo
X2FjcyhzdHJ1Y3QgcGNpX2RldiAqZGV2LCB1MTYgYWNzX2ZsYWdzKQp7CglpbnQgcG9zOwoJdTMy
IGNhcCwgY3RybDsKCglpZiAoIXBjaV9xdWlya19pbnRlbF9zcHRfcGNoX2Fjc19tYXRjaChkZXYp
KQoJCXJldHVybiAtRU5PVFRZOwoKCXBvcyA9IHBjaV9maW5kX2V4dF9jYXBhYmlsaXR5KGRldiwg
UENJX0VYVF9DQVBfSURfQUNTKTsKCWlmICghcG9zKQoJCXJldHVybiAtRU5PVFRZOwoKCS8qIHNl
ZSBwY2lfYWNzX2ZsYWdzX2VuYWJsZWQoKSAqLwoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKGRldiwg
cG9zICsgUENJX0FDU19DQVAsICZjYXApOwoJYWNzX2ZsYWdzICY9IChjYXAgfCBQQ0lfQUNTX0VD
KTsKCglwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCBwb3MgKyBJTlRFTF9TUFRfQUNTX0NUUkws
ICZjdHJsKTsKCglyZXR1cm4gYWNzX2ZsYWdzICYgfmN0cmwgPyAwIDogMTsKfQoKc3RhdGljIGlu
dCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzKHN0cnVjdCBwY2lfZGV2ICpkZXYsIHUxNiBhY3Nf
ZmxhZ3MpCnsKCS8qCgkgKiBTViwgVEIsIGFuZCBVRiBhcmUgbm90IHJlbGV2YW50IHRvIG11bHRp
ZnVuY3Rpb24gZW5kcG9pbnRzLgoJICoKCSAqIE11bHRpZnVuY3Rpb24gZGV2aWNlcyBhcmUgb25s
eSByZXF1aXJlZCB0byBpbXBsZW1lbnQgUlIsIENSLCBhbmQgRFQKCSAqIGluIHRoZWlyIEFDUyBj
YXBhYmlsaXR5IGlmIHRoZXkgc3VwcG9ydCBwZWVyLXRvLXBlZXIgdHJhbnNhY3Rpb25zLgoJICog
RGV2aWNlcyBtYXRjaGluZyB0aGlzIHF1aXJrIGhhdmUgYmVlbiB2ZXJpZmllZCBieSB0aGUgdmVu
ZG9yIHRvIG5vdAoJICogcGVyZm9ybSBwZWVyLXRvLXBlZXIgd2l0aCBvdGhlciBmdW5jdGlvbnMs
IGFsbG93aW5nIHVzIHRvIG1hc2sgb3V0CgkgKiB0aGVzZSBiaXRzIGFzIGlmIHRoZXkgd2VyZSB1
bmltcGxlbWVudGVkIGluIHRoZSBBQ1MgY2FwYWJpbGl0eS4KCSAqLwoJYWNzX2ZsYWdzICY9IH4o
UENJX0FDU19TViB8IFBDSV9BQ1NfVEIgfCBQQ0lfQUNTX1JSIHwKCQkgICAgICAgUENJX0FDU19D
UiB8IFBDSV9BQ1NfVUYgfCBQQ0lfQUNTX0RUKTsKCglyZXR1cm4gYWNzX2ZsYWdzID8gMCA6IDE7
Cn0KCnN0YXRpYyBjb25zdCBzdHJ1Y3QgcGNpX2Rldl9hY3NfZW5hYmxlZCB7Cgl1MTYgdmVuZG9y
OwoJdTE2IGRldmljZTsKCWludCAoKmFjc19lbmFibGVkKShzdHJ1Y3QgcGNpX2RldiAqZGV2LCB1
MTYgYWNzX2ZsYWdzKTsKfSBwY2lfZGV2X2Fjc19lbmFibGVkW10gPSB7Cgl7IFBDSV9WRU5ET1Jf
SURfQVRJLCAweDQzODUsIHBjaV9xdWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURf
QVRJLCAweDQzOWMsIHBjaV9xdWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQVRJ
LCAweDQzODMsIHBjaV9xdWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQVRJLCAw
eDQzOWQsIHBjaV9xdWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQVRJLCAweDQz
ODQsIHBjaV9xdWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQVRJLCAweDQzOTks
IHBjaV9xdWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQU1ELCAweDc4MGYsIHBj
aV9xdWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfQU1ELCAweDc4MDksIHBjaV9x
dWlya19hbWRfc2JfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfU09MQVJGTEFSRSwgMHgwOTAzLCBw
Y2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfU09MQVJGTEFSRSwg
MHgwOTIzLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfU09M
QVJGTEFSRSwgMHgwQTAzLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5E
T1JfSURfSU5URUwsIDB4MTBDNiwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDEwREIsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsg
UENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMERELCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0s
Cgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBFMSwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2Fj
cyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEwRjEsIHBjaV9xdWlya19tZl9lbmRwb2lu
dF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEY3LCBwY2lfcXVpcmtfbWZfZW5k
cG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBGOCwgcGNpX3F1aXJrX21m
X2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEwRjksIHBjaV9xdWly
a19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEZBLCBwY2lf
cXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBGQiwg
cGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEw
RkMsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHgxNTA3LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTUxNCwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lE
X0lOVEVMLCAweDE1MUMsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgMHgxNTI5LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MTUyQSwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQ
Q0lfVkVORE9SX0lEX0lOVEVMLCAweDE1NEQsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwK
CXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTRGLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNz
IH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTU1MSwgcGNpX3F1aXJrX21mX2VuZHBvaW50
X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1NTgsIHBjaV9xdWlya19tZl9lbmRw
b2ludF9hY3MgfSwKCS8qIDgyNTgwICovCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUwOSwg
cGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1
MEUsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHgxNTBGLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTUxMCwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lE
X0lOVEVMLCAweDE1MTEsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRP
Ul9JRF9JTlRFTCwgMHgxNTE2LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9W
RU5ET1JfSURfSU5URUwsIDB4MTUyNywgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJLyog
ODI1NzYgKi8KCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEM5LCBwY2lfcXVpcmtfbWZfZW5k
cG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBFNiwgcGNpX3F1aXJrX21m
X2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEwRTcsIHBjaV9xdWly
a19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEU4LCBwY2lf
cXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUwQSwg
cGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1
MEQsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHgxNTE4LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5U
RUwsIDB4MTUyNiwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJLyogODI1NzUgKi8KCXsg
UENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxMEE3LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0s
Cgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTBBOSwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2Fj
cyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDEwRDYsIHBjaV9xdWlya19tZl9lbmRwb2lu
dF9hY3MgfSwKCS8qIEkzNTAgKi8KCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNTIxLCBwY2lf
cXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUyMiwg
cGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1
MjMsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwg
MHgxNTI0LCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgkvKiA4MjU3MSAoUXVhZHMgb21p
dHRlZCBkdWUgdG8gbm9uLUFDUyBzd2l0Y2gpICovCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIDB4
MTA1RSwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVM
LCAweDEwNUYsIHBjaV9xdWlya19tZl9lbmRwb2ludF9hY3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9J
TlRFTCwgMHgxMDYwLCBwY2lfcXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sCgl7IFBDSV9WRU5ET1Jf
SURfSU5URUwsIDB4MTBEOSwgcGNpX3F1aXJrX21mX2VuZHBvaW50X2FjcyB9LAoJLyogSTIxOSAq
LwoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCAweDE1YjcsIHBjaV9xdWlya19tZl9lbmRwb2ludF9h
Y3MgfSwKCXsgUENJX1ZFTkRPUl9JRF9JTlRFTCwgMHgxNWI4LCBwY2lfcXVpcmtfbWZfZW5kcG9p
bnRfYWNzIH0sCgkvKiBRQ09NIFFERjJ4eHggcm9vdCBwb3J0cyAqLwoJeyBQQ0lfVkVORE9SX0lE
X1FDT00sIDB4MDQwMCwgcGNpX3F1aXJrX3Fjb21fcnBfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURf
UUNPTSwgMHgwNDAxLCBwY2lfcXVpcmtfcWNvbV9ycF9hY3MgfSwKCS8qIEludGVsIFBDSCByb290
IHBvcnRzICovCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9BTllfSUQsIHBjaV9xdWlya19p
bnRlbF9wY2hfYWNzIH0sCgl7IFBDSV9WRU5ET1JfSURfSU5URUwsIFBDSV9BTllfSUQsIHBjaV9x
dWlya19pbnRlbF9zcHRfcGNoX2FjcyB9LAoJeyAweDE5YTIsIDB4NzEwLCBwY2lfcXVpcmtfbWZf
ZW5kcG9pbnRfYWNzIH0sIC8qIEVtdWxleCBCRTMtUiAqLwoJeyAweDEwZGYsIDB4NzIwLCBwY2lf
cXVpcmtfbWZfZW5kcG9pbnRfYWNzIH0sIC8qIEVtdWxleCBTa3loYXdrLVIgKi8KCS8qIENhdml1
bSBUaHVuZGVyWCAqLwoJeyBQQ0lfVkVORE9SX0lEX0NBVklVTSwgUENJX0FOWV9JRCwgcGNpX3F1
aXJrX2Nhdml1bV9hY3MgfSwKCS8qIEFQTSBYLUdlbmUgKi8KCXsgUENJX1ZFTkRPUl9JRF9BTUND
LCAweEUwMDQsIHBjaV9xdWlya194Z2VuZV9hY3MgfSwKCS8qIEFtcGVyZSBDb21wdXRpbmcgKi8K
CXsgUENJX1ZFTkRPUl9JRF9BTVBFUkUsIDB4RTAwNSwgcGNpX3F1aXJrX3hnZW5lX2FjcyB9LAoJ
eyBQQ0lfVkVORE9SX0lEX0FNUEVSRSwgMHhFMDA2LCBwY2lfcXVpcmtfeGdlbmVfYWNzIH0sCgl7
IFBDSV9WRU5ET1JfSURfQU1QRVJFLCAweEUwMDcsIHBjaV9xdWlya194Z2VuZV9hY3MgfSwKCXsg
UENJX1ZFTkRPUl9JRF9BTVBFUkUsIDB4RTAwOCwgcGNpX3F1aXJrX3hnZW5lX2FjcyB9LAoJeyBQ
Q0lfVkVORE9SX0lEX0FNUEVSRSwgMHhFMDA5LCBwY2lfcXVpcmtfeGdlbmVfYWNzIH0sCgl7IFBD
SV9WRU5ET1JfSURfQU1QRVJFLCAweEUwMEEsIHBjaV9xdWlya194Z2VuZV9hY3MgfSwKCXsgUENJ
X1ZFTkRPUl9JRF9BTVBFUkUsIDB4RTAwQiwgcGNpX3F1aXJrX3hnZW5lX2FjcyB9LAoJeyBQQ0lf
VkVORE9SX0lEX0FNUEVSRSwgMHhFMDBDLCBwY2lfcXVpcmtfeGdlbmVfYWNzIH0sCgl7IDAgfQp9
OwoKaW50IHBjaV9kZXZfc3BlY2lmaWNfYWNzX2VuYWJsZWQoc3RydWN0IHBjaV9kZXYgKmRldiwg
dTE2IGFjc19mbGFncykKewoJY29uc3Qgc3RydWN0IHBjaV9kZXZfYWNzX2VuYWJsZWQgKmk7Cglp
bnQgcmV0OwoKCS8qCgkgKiBBbGxvdyBkZXZpY2VzIHRoYXQgZG8gbm90IGV4cG9zZSBzdGFuZGFy
ZCBQQ0llIEFDUyBjYXBhYmlsaXRpZXMKCSAqIG9yIGNvbnRyb2wgdG8gaW5kaWNhdGUgdGhlaXIg
c3VwcG9ydCBoZXJlLiAgTXVsdGktZnVuY3Rpb24gZXhwcmVzcwoJICogZGV2aWNlcyB3aGljaCBk
byBub3QgYWxsb3cgaW50ZXJuYWwgcGVlci10by1wZWVyIGJldHdlZW4gZnVuY3Rpb25zLAoJICog
YnV0IGRvIG5vdCBpbXBsZW1lbnQgUENJZSBBQ1MgbWF5IHdpc2ggdG8gcmV0dXJuIHRydWUgaGVy
ZS4KCSAqLwoJZm9yIChpID0gcGNpX2Rldl9hY3NfZW5hYmxlZDsgaS0+YWNzX2VuYWJsZWQ7IGkr
KykgewoJCWlmICgoaS0+dmVuZG9yID09IGRldi0+dmVuZG9yIHx8CgkJICAgICBpLT52ZW5kb3Ig
PT0gKHUxNilQQ0lfQU5ZX0lEKSAmJgoJCSAgICAoaS0+ZGV2aWNlID09IGRldi0+ZGV2aWNlIHx8
CgkJICAgICBpLT5kZXZpY2UgPT0gKHUxNilQQ0lfQU5ZX0lEKSkgewoJCQlyZXQgPSBpLT5hY3Nf
ZW5hYmxlZChkZXYsIGFjc19mbGFncyk7CgkJCWlmIChyZXQgPj0gMCkKCQkJCXJldHVybiByZXQ7
CgkJfQoJfQoKCXJldHVybiAtRU5PVFRZOwp9CgovKiBDb25maWcgc3BhY2Ugb2Zmc2V0IG9mIFJv
b3QgQ29tcGxleCBCYXNlIEFkZHJlc3MgcmVnaXN0ZXIgKi8KI2RlZmluZSBJTlRFTF9MUENfUkNC
QV9SRUcgMHhmMAovKiAzMToxNCBSQ0JBIGFkZHJlc3MgKi8KI2RlZmluZSBJTlRFTF9MUENfUkNC
QV9NQVNLIDB4ZmZmZmMwMDAKLyogUkNCQSBFbmFibGUgKi8KI2RlZmluZSBJTlRFTF9MUENfUkNC
QV9FTkFCTEUgKDEgPDwgMCkKCi8qIEJhY2tib25lIFNjcmF0Y2ggUGFkIFJlZ2lzdGVyICovCiNk
ZWZpbmUgSU5URUxfQlNQUl9SRUcgMHgxMTA0Ci8qIEJhY2tib25lIFBlZXIgTm9uLVBvc3RlZCBE
aXNhYmxlICovCiNkZWZpbmUgSU5URUxfQlNQUl9SRUdfQlBOUEQgKDEgPDwgOCkKLyogQmFja2Jv
bmUgUGVlciBQb3N0ZWQgRGlzYWJsZSAqLwojZGVmaW5lIElOVEVMX0JTUFJfUkVHX0JQUEQgICgx
IDw8IDkpCgovKiBVcHN0cmVhbSBQZWVyIERlY29kZSBDb25maWd1cmF0aW9uIFJlZ2lzdGVyICov
CiNkZWZpbmUgSU5URUxfVVBEQ1JfUkVHIDB4MTExNAovKiA1OjAgUGVlciBEZWNvZGUgRW5hYmxl
IGJpdHMgKi8KI2RlZmluZSBJTlRFTF9VUERDUl9SRUdfTUFTSyAweDNmCgpzdGF0aWMgaW50IHBj
aV9xdWlya19lbmFibGVfaW50ZWxfbHBjX2FjcyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1MzIg
cmNiYSwgYnNwciwgdXBkY3I7Cgl2b2lkIF9faW9tZW0gKnJjYmFfbWVtOwoKCS8qCgkgKiBSZWFk
IHRoZSBSQ0JBIHJlZ2lzdGVyIGZyb20gdGhlIExQQyAoRDMxOkYwKS4gIFBDSCByb290IHBvcnRz
CgkgKiBhcmUgRDI4OkYqIGFuZCB0aGVyZWZvcmUgZ2V0IHByb2JlZCBiZWZvcmUgTFBDLCB0aHVz
IHdlIGNhbid0CgkgKiB1c2UgcGNpX2dldF9zbG90KCkvcGNpX3JlYWRfY29uZmlnX2R3b3JkKCkg
aGVyZS4KCSAqLwoJcGNpX2J1c19yZWFkX2NvbmZpZ19kd29yZChkZXYtPmJ1cywgUENJX0RFVkZO
KDMxLCAwKSwKCQkJCSAgSU5URUxfTFBDX1JDQkFfUkVHLCAmcmNiYSk7CglpZiAoIShyY2JhICYg
SU5URUxfTFBDX1JDQkFfRU5BQkxFKSkKCQlyZXR1cm4gLUVJTlZBTDsKCglyY2JhX21lbSA9IGlv
cmVtYXBfbm9jYWNoZShyY2JhICYgSU5URUxfTFBDX1JDQkFfTUFTSywKCQkJCSAgIFBBR0VfQUxJ
R04oSU5URUxfVVBEQ1JfUkVHKSk7CglpZiAoIXJjYmFfbWVtKQoJCXJldHVybiAtRU5PTUVNOwoK
CS8qCgkgKiBUaGUgQlNQUiBjYW4gZGlzYWxsb3cgcGVlciBjeWNsZXMsIGJ1dCBpdCdzIHNldCBi
eSBzb2Z0IHN0cmFwIGFuZAoJICogdGhlcmVmb3JlIHJlYWQtb25seS4gIElmIGJvdGggcG9zdGVk
IGFuZCBub24tcG9zdGVkIHBlZXIgY3ljbGVzIGFyZQoJICogZGlzYWxsb3dlZCwgd2UncmUgb2su
ICBJZiBlaXRoZXIgYXJlIGFsbG93ZWQsIHRoZW4gd2UgbmVlZCB0byB1c2UKCSAqIHRoZSBVUERD
UiB0byBkaXNhYmxlIHBlZXIgZGVjb2RlcyBmb3IgZWFjaCBwb3J0LiAgVGhpcyBwcm92aWRlcyB0
aGUKCSAqIFBDSWUgQUNTIGVxdWl2YWxlbnQgb2YgUENJX0FDU19SUiB8IFBDSV9BQ1NfQ1IgfCBQ
Q0lfQUNTX1VGCgkgKi8KCWJzcHIgPSByZWFkbChyY2JhX21lbSArIElOVEVMX0JTUFJfUkVHKTsK
CWJzcHIgJj0gSU5URUxfQlNQUl9SRUdfQlBOUEQgfCBJTlRFTF9CU1BSX1JFR19CUFBEOwoJaWYg
KGJzcHIgIT0gKElOVEVMX0JTUFJfUkVHX0JQTlBEIHwgSU5URUxfQlNQUl9SRUdfQlBQRCkpIHsK
CQl1cGRjciA9IHJlYWRsKHJjYmFfbWVtICsgSU5URUxfVVBEQ1JfUkVHKTsKCQlpZiAodXBkY3Ig
JiBJTlRFTF9VUERDUl9SRUdfTUFTSykgewoJCQlwY2lfaW5mbyhkZXYsICJEaXNhYmxpbmcgVVBE
Q1IgcGVlciBkZWNvZGVzXG4iKTsKCQkJdXBkY3IgJj0gfklOVEVMX1VQRENSX1JFR19NQVNLOwoJ
CQl3cml0ZWwodXBkY3IsIHJjYmFfbWVtICsgSU5URUxfVVBEQ1JfUkVHKTsKCQl9Cgl9CgoJaW91
bm1hcChyY2JhX21lbSk7CglyZXR1cm4gMDsKfQoKLyogTWlzY2VsbGFuZW91cyBQb3J0IENvbmZp
Z3VyYXRpb24gcmVnaXN0ZXIgKi8KI2RlZmluZSBJTlRFTF9NUENfUkVHIDB4ZDgKLyogTVBDOiBJ
bnZhbGlkIFJlY2VpdmUgQnVzIE51bWJlciBDaGVjayBFbmFibGUgKi8KI2RlZmluZSBJTlRFTF9N
UENfUkVHX0lSQk5DRSAoMSA8PCAyNikKCnN0YXRpYyB2b2lkIHBjaV9xdWlya19lbmFibGVfaW50
ZWxfcnBfbXBjX2FjcyhzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7Cgl1MzIgbXBjOwoKCS8qCgkgKiBX
aGVuIGVuYWJsZWQsIHRoZSBJUkJOQ0UgYml0IG9mIHRoZSBNUEMgcmVnaXN0ZXIgZW5hYmxlcyB0
aGUKCSAqIGVxdWl2YWxlbnQgb2YgUENJIEFDUyBTb3VyY2UgVmFsaWRhdGlvbiAoUENJX0FDU19T
ViksIHdoaWNoCgkgKiBlbnN1cmVzIHRoYXQgcmVxdWVzdGVyIElEcyBmYWxsIHdpdGhpbiB0aGUg
YnVzIG51bWJlciByYW5nZQoJICogb2YgdGhlIGJyaWRnZS4gIEVuYWJsZSBpZiBub3QgYWxyZWFk
eS4KCSAqLwoJcGNpX3JlYWRfY29uZmlnX2R3b3JkKGRldiwgSU5URUxfTVBDX1JFRywgJm1wYyk7
CglpZiAoIShtcGMgJiBJTlRFTF9NUENfUkVHX0lSQk5DRSkpIHsKCQlwY2lfaW5mbyhkZXYsICJF
bmFibGluZyBNUEMgSVJCTkNFXG4iKTsKCQltcGMgfD0gSU5URUxfTVBDX1JFR19JUkJOQ0U7CgkJ
cGNpX3dyaXRlX2NvbmZpZ193b3JkKGRldiwgSU5URUxfTVBDX1JFRywgbXBjKTsKCX0KfQoKc3Rh
dGljIGludCBwY2lfcXVpcmtfZW5hYmxlX2ludGVsX3BjaF9hY3Moc3RydWN0IHBjaV9kZXYgKmRl
dikKewoJaWYgKCFwY2lfcXVpcmtfaW50ZWxfcGNoX2Fjc19tYXRjaChkZXYpKQoJCXJldHVybiAt
RU5PVFRZOwoKCWlmIChwY2lfcXVpcmtfZW5hYmxlX2ludGVsX2xwY19hY3MoZGV2KSkgewoJCXBj
aV93YXJuKGRldiwgIkZhaWxlZCB0byBlbmFibGUgSW50ZWwgUENIIEFDUyBxdWlya1xuIik7CgkJ
cmV0dXJuIDA7Cgl9CgoJcGNpX3F1aXJrX2VuYWJsZV9pbnRlbF9ycF9tcGNfYWNzKGRldik7CgoJ
ZGV2LT5kZXZfZmxhZ3MgfD0gUENJX0RFVl9GTEFHU19BQ1NfRU5BQkxFRF9RVUlSSzsKCglwY2lf
aW5mbyhkZXYsICJJbnRlbCBQQ0ggcm9vdCBwb3J0IEFDUyB3b3JrYXJvdW5kIGVuYWJsZWRcbiIp
OwoKCXJldHVybiAwOwp9CgpzdGF0aWMgaW50IHBjaV9xdWlya19lbmFibGVfaW50ZWxfc3B0X3Bj
aF9hY3Moc3RydWN0IHBjaV9kZXYgKmRldikKewoJaW50IHBvczsKCXUzMiBjYXAsIGN0cmw7CgoJ
aWYgKCFwY2lfcXVpcmtfaW50ZWxfc3B0X3BjaF9hY3NfbWF0Y2goZGV2KSkKCQlyZXR1cm4gLUVO
T1RUWTsKCglwb3MgPSBwY2lfZmluZF9leHRfY2FwYWJpbGl0eShkZXYsIFBDSV9FWFRfQ0FQX0lE
X0FDUyk7CglpZiAoIXBvcykKCQlyZXR1cm4gLUVOT1RUWTsKCglwY2lfcmVhZF9jb25maWdfZHdv
cmQoZGV2LCBwb3MgKyBQQ0lfQUNTX0NBUCwgJmNhcCk7CglwY2lfcmVhZF9jb25maWdfZHdvcmQo
ZGV2LCBwb3MgKyBJTlRFTF9TUFRfQUNTX0NUUkwsICZjdHJsKTsKCgljdHJsIHw9IChjYXAgJiBQ
Q0lfQUNTX1NWKTsKCWN0cmwgfD0gKGNhcCAmIFBDSV9BQ1NfUlIpOwoJY3RybCB8PSAoY2FwICYg
UENJX0FDU19DUik7CgljdHJsIHw9IChjYXAgJiBQQ0lfQUNTX1VGKTsKCglwY2lfd3JpdGVfY29u
ZmlnX2R3b3JkKGRldiwgcG9zICsgSU5URUxfU1BUX0FDU19DVFJMLCBjdHJsKTsKCglwY2lfaW5m
byhkZXYsICJJbnRlbCBTUFQgUENIIHJvb3QgcG9ydCBBQ1Mgd29ya2Fyb3VuZCBlbmFibGVkXG4i
KTsKCglyZXR1cm4gMDsKfQoKc3RhdGljIGludCBwY2lfcXVpcmtfZGlzYWJsZV9pbnRlbF9zcHRf
cGNoX2Fjc19yZWRpcihzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglpbnQgcG9zOwoJdTMyIGNhcCwg
Y3RybDsKCglpZiAoIXBjaV9xdWlya19pbnRlbF9zcHRfcGNoX2Fjc19tYXRjaChkZXYpKQoJCXJl
dHVybiAtRU5PVFRZOwoKCXBvcyA9IHBjaV9maW5kX2V4dF9jYXBhYmlsaXR5KGRldiwgUENJX0VY
VF9DQVBfSURfQUNTKTsKCWlmICghcG9zKQoJCXJldHVybiAtRU5PVFRZOwoKCXBjaV9yZWFkX2Nv
bmZpZ19kd29yZChkZXYsIHBvcyArIFBDSV9BQ1NfQ0FQLCAmY2FwKTsKCXBjaV9yZWFkX2NvbmZp
Z19kd29yZChkZXYsIHBvcyArIElOVEVMX1NQVF9BQ1NfQ1RSTCwgJmN0cmwpOwoKCWN0cmwgJj0g
fihQQ0lfQUNTX1JSIHwgUENJX0FDU19DUiB8IFBDSV9BQ1NfRUMpOwoKCXBjaV93cml0ZV9jb25m
aWdfZHdvcmQoZGV2LCBwb3MgKyBJTlRFTF9TUFRfQUNTX0NUUkwsIGN0cmwpOwoKCXBjaV9pbmZv
KGRldiwgIkludGVsIFNQVCBQQ0ggcm9vdCBwb3J0IHdvcmthcm91bmQ6IGRpc2FibGVkIEFDUyBy
ZWRpcmVjdFxuIik7CgoJcmV0dXJuIDA7Cn0KCnN0YXRpYyBjb25zdCBzdHJ1Y3QgcGNpX2Rldl9h
Y3Nfb3BzIHsKCXUxNiB2ZW5kb3I7Cgl1MTYgZGV2aWNlOwoJaW50ICgqZW5hYmxlX2Fjcykoc3Ry
dWN0IHBjaV9kZXYgKmRldik7CglpbnQgKCpkaXNhYmxlX2Fjc19yZWRpcikoc3RydWN0IHBjaV9k
ZXYgKmRldik7Cn0gcGNpX2Rldl9hY3Nfb3BzW10gPSB7Cgl7IFBDSV9WRU5ET1JfSURfSU5URUws
IFBDSV9BTllfSUQsCgkgICAgLmVuYWJsZV9hY3MgPSBwY2lfcXVpcmtfZW5hYmxlX2ludGVsX3Bj
aF9hY3MsCgl9LAoJeyBQQ0lfVkVORE9SX0lEX0lOVEVMLCBQQ0lfQU5ZX0lELAoJICAgIC5lbmFi
bGVfYWNzID0gcGNpX3F1aXJrX2VuYWJsZV9pbnRlbF9zcHRfcGNoX2FjcywKCSAgICAuZGlzYWJs
ZV9hY3NfcmVkaXIgPSBwY2lfcXVpcmtfZGlzYWJsZV9pbnRlbF9zcHRfcGNoX2Fjc19yZWRpciwK
CX0sCn07CgppbnQgcGNpX2Rldl9zcGVjaWZpY19lbmFibGVfYWNzKHN0cnVjdCBwY2lfZGV2ICpk
ZXYpCnsKCWNvbnN0IHN0cnVjdCBwY2lfZGV2X2Fjc19vcHMgKnA7CglpbnQgaSwgcmV0OwoKCWZv
ciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKHBjaV9kZXZfYWNzX29wcyk7IGkrKykgewoJCXAgPSAm
cGNpX2Rldl9hY3Nfb3BzW2ldOwoJCWlmICgocC0+dmVuZG9yID09IGRldi0+dmVuZG9yIHx8CgkJ
ICAgICBwLT52ZW5kb3IgPT0gKHUxNilQQ0lfQU5ZX0lEKSAmJgoJCSAgICAocC0+ZGV2aWNlID09
IGRldi0+ZGV2aWNlIHx8CgkJICAgICBwLT5kZXZpY2UgPT0gKHUxNilQQ0lfQU5ZX0lEKSAmJgoJ
CSAgICBwLT5lbmFibGVfYWNzKSB7CgkJCXJldCA9IHAtPmVuYWJsZV9hY3MoZGV2KTsKCQkJaWYg
KHJldCA+PSAwKQoJCQkJcmV0dXJuIHJldDsKCQl9Cgl9CgoJcmV0dXJuIC1FTk9UVFk7Cn0KCmlu
dCBwY2lfZGV2X3NwZWNpZmljX2Rpc2FibGVfYWNzX3JlZGlyKHN0cnVjdCBwY2lfZGV2ICpkZXYp
CnsKCWNvbnN0IHN0cnVjdCBwY2lfZGV2X2Fjc19vcHMgKnA7CglpbnQgaSwgcmV0OwoKCWZvciAo
aSA9IDA7IGkgPCBBUlJBWV9TSVpFKHBjaV9kZXZfYWNzX29wcyk7IGkrKykgewoJCXAgPSAmcGNp
X2Rldl9hY3Nfb3BzW2ldOwoJCWlmICgocC0+dmVuZG9yID09IGRldi0+dmVuZG9yIHx8CgkJICAg
ICBwLT52ZW5kb3IgPT0gKHUxNilQQ0lfQU5ZX0lEKSAmJgoJCSAgICAocC0+ZGV2aWNlID09IGRl
di0+ZGV2aWNlIHx8CgkJICAgICBwLT5kZXZpY2UgPT0gKHUxNilQQ0lfQU5ZX0lEKSAmJgoJCSAg
ICBwLT5kaXNhYmxlX2Fjc19yZWRpcikgewoJCQlyZXQgPSBwLT5kaXNhYmxlX2Fjc19yZWRpcihk
ZXYpOwoJCQlpZiAocmV0ID49IDApCgkJCQlyZXR1cm4gcmV0OwoJCX0KCX0KCglyZXR1cm4gLUVO
T1RUWTsKfQoKLyoKICogVGhlIFBDSSBjYXBhYmlsaXRpZXMgbGlzdCBmb3IgSW50ZWwgREg4OTV4
Q0MgVkZzIChkZXZpY2UgSUQgMHgwNDQzKSB3aXRoCiAqIFF1aWNrQXNzaXN0IFRlY2hub2xvZ3kg
KFFBVCkgaXMgcHJlbWF0dXJlbHkgdGVybWluYXRlZCBpbiBoYXJkd2FyZS4gIFRoZQogKiBOZXh0
IENhcGFiaWxpdHkgcG9pbnRlciBpbiB0aGUgTVNJIENhcGFiaWxpdHkgU3RydWN0dXJlIHNob3Vs
ZCBwb2ludCB0bwogKiB0aGUgUENJZSBDYXBhYmlsaXR5IFN0cnVjdHVyZSBidXQgaXMgaW5jb3Jy
ZWN0bHkgaGFyZHdpcmVkIGFzIDAgdGVybWluYXRpbmcKICogdGhlIGxpc3QuCiAqLwpzdGF0aWMg
dm9pZCBxdWlya19pbnRlbF9xYXRfdmZfY2FwKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7CglpbnQg
cG9zLCBpID0gMDsKCXU4IG5leHRfY2FwOwoJdTE2IHJlZzE2LCAqY2FwOwoJc3RydWN0IHBjaV9j
YXBfc2F2ZWRfc3RhdGUgKnN0YXRlOwoKCS8qIEJhaWwgaWYgdGhlIGhhcmR3YXJlIGJ1ZyBpcyBm
aXhlZCAqLwoJaWYgKHBkZXYtPnBjaWVfY2FwIHx8IHBjaV9maW5kX2NhcGFiaWxpdHkocGRldiwg
UENJX0NBUF9JRF9FWFApKQoJCXJldHVybjsKCgkvKiBCYWlsIGlmIE1TSSBDYXBhYmlsaXR5IFN0
cnVjdHVyZSBpcyBub3QgZm91bmQgZm9yIHNvbWUgcmVhc29uICovCglwb3MgPSBwY2lfZmluZF9j
YXBhYmlsaXR5KHBkZXYsIFBDSV9DQVBfSURfTVNJKTsKCWlmICghcG9zKQoJCXJldHVybjsKCgkv
KgoJICogQmFpbCBpZiBOZXh0IENhcGFiaWxpdHkgcG9pbnRlciBpbiB0aGUgTVNJIENhcGFiaWxp
dHkgU3RydWN0dXJlCgkgKiBpcyBub3QgdGhlIGV4cGVjdGVkIGluY29ycmVjdCAweDAwLgoJICov
CglwY2lfcmVhZF9jb25maWdfYnl0ZShwZGV2LCBwb3MgKyAxLCAmbmV4dF9jYXApOwoJaWYgKG5l
eHRfY2FwKQoJCXJldHVybjsKCgkvKgoJICogUENJZSBDYXBhYmlsaXR5IFN0cnVjdHVyZSBpcyBl
eHBlY3RlZCB0byBiZSBhdCAweDUwIGFuZCBzaG91bGQKCSAqIHRlcm1pbmF0ZSB0aGUgbGlzdCAo
TmV4dCBDYXBhYmlsaXR5IHBvaW50ZXIgaXMgMHgwMCkuICBWZXJpZnkKCSAqIENhcGFiaWxpdHkg
SWQgYW5kIE5leHQgQ2FwYWJpbGl0eSBwb2ludGVyIGlzIGFzIGV4cGVjdGVkLgoJICogT3Blbi1j
b2RlIHNvbWUgb2Ygc2V0X3BjaWVfcG9ydF90eXBlKCkgYW5kIHBjaV9jZmdfc3BhY2Vfc2l6ZV9l
eHQoKQoJICogdG8gY29ycmVjdGx5IHNldCBrZXJuZWwgZGF0YSBzdHJ1Y3R1cmVzIHdoaWNoIGhh
dmUgYWxyZWFkeSBiZWVuCgkgKiBzZXQgaW5jb3JyZWN0bHkgZHVlIHRvIHRoZSBoYXJkd2FyZSBi
dWcuCgkgKi8KCXBvcyA9IDB4NTA7CglwY2lfcmVhZF9jb25maWdfd29yZChwZGV2LCBwb3MsICZy
ZWcxNik7CglpZiAocmVnMTYgPT0gKDB4MDAwMCB8IFBDSV9DQVBfSURfRVhQKSkgewoJCXUzMiBz
dGF0dXM7CiNpZm5kZWYgUENJX0VYUF9TQVZFX1JFR1MKI2RlZmluZSBQQ0lfRVhQX1NBVkVfUkVH
UyAgICAgNwojZW5kaWYKCQlpbnQgc2l6ZSA9IFBDSV9FWFBfU0FWRV9SRUdTICogc2l6ZW9mKHUx
Nik7CgoJCXBkZXYtPnBjaWVfY2FwID0gcG9zOwoJCXBjaV9yZWFkX2NvbmZpZ193b3JkKHBkZXYs
IHBvcyArIFBDSV9FWFBfRkxBR1MsICZyZWcxNik7CgkJcGRldi0+cGNpZV9mbGFnc19yZWcgPSBy
ZWcxNjsKCQlwY2lfcmVhZF9jb25maWdfd29yZChwZGV2LCBwb3MgKyBQQ0lfRVhQX0RFVkNBUCwg
JnJlZzE2KTsKCQlwZGV2LT5wY2llX21wc3MgPSByZWcxNiAmIFBDSV9FWFBfREVWQ0FQX1BBWUxP
QUQ7CgoJCXBkZXYtPmNmZ19zaXplID0gUENJX0NGR19TUEFDRV9FWFBfU0laRTsKCQlpZiAocGNp
X3JlYWRfY29uZmlnX2R3b3JkKHBkZXYsIFBDSV9DRkdfU1BBQ0VfU0laRSwgJnN0YXR1cykgIT0K
CQkgICAgUENJQklPU19TVUNDRVNTRlVMIHx8IChzdGF0dXMgPT0gMHhmZmZmZmZmZikpCgkJCXBk
ZXYtPmNmZ19zaXplID0gUENJX0NGR19TUEFDRV9TSVpFOwoKCQlpZiAocGNpX2ZpbmRfc2F2ZWRf
Y2FwKHBkZXYsIFBDSV9DQVBfSURfRVhQKSkKCQkJcmV0dXJuOwoKCQkvKiBTYXZlIFBDSWUgY2Fw
ICovCgkJc3RhdGUgPSBremFsbG9jKHNpemVvZigqc3RhdGUpICsgc2l6ZSwgR0ZQX0tFUk5FTCk7
CgkJaWYgKCFzdGF0ZSkKCQkJcmV0dXJuOwoKCQlzdGF0ZS0+Y2FwLmNhcF9uciA9IFBDSV9DQVBf
SURfRVhQOwoJCXN0YXRlLT5jYXAuY2FwX2V4dGVuZGVkID0gMDsKCQlzdGF0ZS0+Y2FwLnNpemUg
PSBzaXplOwoJCWNhcCA9ICh1MTYgKikmc3RhdGUtPmNhcC5kYXRhWzBdOwoJCXBjaWVfY2FwYWJp
bGl0eV9yZWFkX3dvcmQocGRldiwgUENJX0VYUF9ERVZDVEwsICZjYXBbaSsrXSk7CgkJcGNpZV9j
YXBhYmlsaXR5X3JlYWRfd29yZChwZGV2LCBQQ0lfRVhQX0xOS0NUTCwgJmNhcFtpKytdKTsKCQlw
Y2llX2NhcGFiaWxpdHlfcmVhZF93b3JkKHBkZXYsIFBDSV9FWFBfU0xUQ1RMLCAmY2FwW2krK10p
OwoJCXBjaWVfY2FwYWJpbGl0eV9yZWFkX3dvcmQocGRldiwgUENJX0VYUF9SVENUTCwgICZjYXBb
aSsrXSk7CgkJcGNpZV9jYXBhYmlsaXR5X3JlYWRfd29yZChwZGV2LCBQQ0lfRVhQX0RFVkNUTDIs
ICZjYXBbaSsrXSk7CgkJcGNpZV9jYXBhYmlsaXR5X3JlYWRfd29yZChwZGV2LCBQQ0lfRVhQX0xO
S0NUTDIsICZjYXBbaSsrXSk7CgkJcGNpZV9jYXBhYmlsaXR5X3JlYWRfd29yZChwZGV2LCBQQ0lf
RVhQX1NMVENUTDIsICZjYXBbaSsrXSk7CgkJaGxpc3RfYWRkX2hlYWQoJnN0YXRlLT5uZXh0LCAm
cGRldi0+c2F2ZWRfY2FwX3NwYWNlKTsKCX0KfQpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDQ0MywgcXVpcmtfaW50ZWxfcWF0X3ZmX2NhcCk7CgovKiBGTFIg
bWF5IGNhdXNlIHNvbWUgODI1NzkgZGV2aWNlcyB0byBoYW5nICovCnN0YXRpYyB2b2lkIHF1aXJr
X2ludGVsX25vX2ZscihzdHJ1Y3QgcGNpX2RldiAqZGV2KQp7CglkZXYtPmRldl9mbGFncyB8PSBQ
Q0lfREVWX0ZMQUdTX05PX0ZMUl9SRVNFVDsKfQpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lf
VkVORE9SX0lEX0lOVEVMLCAweDE1MDIsIHF1aXJrX2ludGVsX25vX2Zscik7CkRFQ0xBUkVfUENJ
X0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfSU5URUwsIDB4MTUwMywgcXVpcmtfaW50ZWxfbm9f
ZmxyKTsKCnN0YXRpYyB2b2lkIHF1aXJrX25vX2V4dF90YWdzKHN0cnVjdCBwY2lfZGV2ICpwZGV2
KQp7CglzdHJ1Y3QgcGNpX2hvc3RfYnJpZGdlICpicmlkZ2UgPSBwY2lfZmluZF9ob3N0X2JyaWRn
ZShwZGV2LT5idXMpOwoKCWlmICghYnJpZGdlKQoJCXJldHVybjsKCglicmlkZ2UtPm5vX2V4dF90
YWdzID0gMTsKCXBjaV9pbmZvKHBkZXYsICJkaXNhYmxpbmcgRXh0ZW5kZWQgVGFncyAodGhpcyBk
ZXZpY2UgY2FuJ3QgaGFuZGxlIHRoZW0pXG4iKTsKCglwY2lfd2Fsa19idXMoYnJpZGdlLT5idXMs
IHBjaV9jb25maWd1cmVfZXh0ZW5kZWRfdGFncywgTlVMTCk7Cn0KREVDTEFSRV9QQ0lfRklYVVBf
RUFSTFkoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgMHgwMTMyLCBxdWlya19ub19leHRfdGFn
cyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfU0VSVkVSV09SS1MsIDB4
MDE0MCwgcXVpcmtfbm9fZXh0X3RhZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9FQVJMWShQQ0lfVkVO
RE9SX0lEX1NFUlZFUldPUktTLCAweDAxNDEsIHF1aXJrX25vX2V4dF90YWdzKTsKREVDTEFSRV9Q
Q0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgMHgwMTQyLCBxdWlya19u
b19leHRfdGFncyk7CkRFQ0xBUkVfUENJX0ZJWFVQX0VBUkxZKFBDSV9WRU5ET1JfSURfU0VSVkVS
V09SS1MsIDB4MDE0NCwgcXVpcmtfbm9fZXh0X3RhZ3MpOwpERUNMQVJFX1BDSV9GSVhVUF9FQVJM
WShQQ0lfVkVORE9SX0lEX1NFUlZFUldPUktTLCAweDA0MjAsIHF1aXJrX25vX2V4dF90YWdzKTsK
REVDTEFSRV9QQ0lfRklYVVBfRUFSTFkoUENJX1ZFTkRPUl9JRF9TRVJWRVJXT1JLUywgMHgwNDIy
LCBxdWlya19ub19leHRfdGFncyk7CgojaWZkZWYgQ09ORklHX1BDSV9BVFMKLyoKICogU29tZSBk
ZXZpY2VzIGhhdmUgYSBicm9rZW4gQVRTIGltcGxlbWVudGF0aW9uIGNhdXNpbmcgSU9NTVUgc3Rh
bGxzLgogKiBEb24ndCB1c2UgQVRTIGZvciB0aG9zZSBkZXZpY2VzLgogKi8Kc3RhdGljIHZvaWQg
cXVpcmtfbm9fYXRzKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7CglwY2lfaW5mbyhwZGV2LCAiZGlz
YWJsaW5nIEFUUyAoYnJva2VuIG9uIHRoaXMgZGV2aWNlKVxuIik7CglwZGV2LT5hdHNfY2FwID0g
MDsKfQoKLyogQU1EIFN0b25leSBwbGF0Zm9ybSBHUFUgKi8KREVDTEFSRV9QQ0lfRklYVVBfRklO
QUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4OThlNCwgcXVpcmtfbm9fYXRzKTsKREVDTEFSRV9QQ0lf
RklYVVBfRklOQUwoUENJX1ZFTkRPUl9JRF9BVEksIDB4NjkwMCwgcXVpcmtfbm9fYXRzKTsKI2Vu
ZGlmIC8qIENPTkZJR19QQ0lfQVRTICovCgovKiBGcmVlc2NhbGUgUENJZSBkb2Vzbid0IHN1cHBv
cnQgTVNJIGluIFJDIG1vZGUgKi8Kc3RhdGljIHZvaWQgcXVpcmtfZnNsX25vX21zaShzdHJ1Y3Qg
cGNpX2RldiAqcGRldikKewoJaWYgKHBjaV9wY2llX3R5cGUocGRldikgPT0gUENJX0VYUF9UWVBF
X1JPT1RfUE9SVCkKCQlwZGV2LT5ub19tc2kgPSAxOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0ZJTkFM
KFBDSV9WRU5ET1JfSURfRlJFRVNDQUxFLCBQQ0lfQU5ZX0lELCBxdWlya19mc2xfbm9fbXNpKTsK
Ci8qCiAqIEdQVXMgd2l0aCBpbnRlZ3JhdGVkIEhEQSBjb250cm9sbGVyIGZvciBzdHJlYW1pbmcg
YXVkaW8gdG8gYXR0YWNoZWQgZGlzcGxheXMKICogbmVlZCBhIGRldmljZSBsaW5rIGZyb20gdGhl
IEhEQSBjb250cm9sbGVyIChjb25zdW1lcikgdG8gdGhlIEdQVSAoc3VwcGxpZXIpCiAqIHNvIHRo
YXQgdGhlIEdQVSBpcyBwb3dlcmVkIHVwIHdoZW5ldmVyIHRoZSBIREEgY29udHJvbGxlciBpcyBh
Y2Nlc3NlZC4KICogVGhlIEdQVSBhbmQgSERBIGNvbnRyb2xsZXIgYXJlIGZ1bmN0aW9ucyAwIGFu
ZCAxIG9mIHRoZSBzYW1lIFBDSSBkZXZpY2UuCiAqIFRoZSBkZXZpY2UgbGluayBzdGF5cyBpbiBw
bGFjZSB1bnRpbCBzaHV0ZG93biAob3IgcmVtb3ZhbCBvZiB0aGUgUENJIGRldmljZQogKiBpZiBp
dCdzIGhvdHBsdWdnZWQpLiAgUnVudGltZSBQTSBpcyBhbGxvd2VkIGJ5IGRlZmF1bHQgb24gdGhl
IEhEQSBjb250cm9sbGVyCiAqIHRvIHByZXZlbnQgaXQgZnJvbSBwZXJtYW5lbnRseSBrZWVwaW5n
IHRoZSBHUFUgYXdha2UuCiAqLwpzdGF0aWMgdm9pZCBxdWlya19ncHVfaGRhKHN0cnVjdCBwY2lf
ZGV2ICpoZGEpCnsKCXN0cnVjdCBwY2lfZGV2ICpncHU7CgoJaWYgKFBDSV9GVU5DKGhkYS0+ZGV2
Zm4pICE9IDEpCgkJcmV0dXJuOwoKCWdwdSA9IHBjaV9nZXRfZG9tYWluX2J1c19hbmRfc2xvdChw
Y2lfZG9tYWluX25yKGhkYS0+YnVzKSwKCQkJCQkgIGhkYS0+YnVzLT5udW1iZXIsCgkJCQkJICBQ
Q0lfREVWRk4oUENJX1NMT1QoaGRhLT5kZXZmbiksIDApKTsKCWlmICghZ3B1IHx8IChncHUtPmNs
YXNzID4+IDE2KSAhPSBQQ0lfQkFTRV9DTEFTU19ESVNQTEFZKSB7CgkJcGNpX2Rldl9wdXQoZ3B1
KTsKCQlyZXR1cm47Cgl9CgoJaWYgKCFkZXZpY2VfbGlua19hZGQoJmhkYS0+ZGV2LCAmZ3B1LT5k
ZXYsCgkJCSAgICAgRExfRkxBR19TVEFURUxFU1MgfCBETF9GTEFHX1BNX1JVTlRJTUUpKQoJCXBj
aV9lcnIoaGRhLCAiY2Fubm90IGxpbmsgSERBIHRvIEdQVSAlc1xuIiwgcGNpX25hbWUoZ3B1KSk7
CgoJcG1fcnVudGltZV9hbGxvdygmaGRhLT5kZXYpOwoJcGNpX2Rldl9wdXQoZ3B1KTsKfQpERUNM
QVJFX1BDSV9GSVhVUF9DTEFTU19GSU5BTChQQ0lfVkVORE9SX0lEX0FUSSwgUENJX0FOWV9JRCwK
CQkJICAgICAgUENJX0NMQVNTX01VTFRJTUVESUFfSERfQVVESU8sIDgsIHF1aXJrX2dwdV9oZGEp
OwpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19GSU5BTChQQ0lfVkVORE9SX0lEX0FNRCwgUENJX0FO
WV9JRCwKCQkJICAgICAgUENJX0NMQVNTX01VTFRJTUVESUFfSERfQVVESU8sIDgsIHF1aXJrX2dw
dV9oZGEpOwpERUNMQVJFX1BDSV9GSVhVUF9DTEFTU19GSU5BTChQQ0lfVkVORE9SX0lEX05WSURJ
QSwgUENJX0FOWV9JRCwKCQkJICAgICAgUENJX0NMQVNTX01VTFRJTUVESUFfSERfQVVESU8sIDgs
IHF1aXJrX2dwdV9oZGEpOwoKLyoKICogU29tZSBJRFQgc3dpdGNoZXMgaW5jb3JyZWN0bHkgZmxh
ZyBhbiBBQ1MgU291cmNlIFZhbGlkYXRpb24gZXJyb3Igb24KICogY29tcGxldGlvbnMgZm9yIGNv
bmZpZyByZWFkIHJlcXVlc3RzIGV2ZW4gdGhvdWdoIFBDSWUgcjQuMCwgc2VjCiAqIDYuMTIuMS4x
LCBzYXlzIHRoYXQgY29tcGxldGlvbnMgYXJlIG5ldmVyIGFmZmVjdGVkIGJ5IEFDUyBTb3VyY2UK
ICogVmFsaWRhdGlvbi4gIEhlcmUncyB0aGUgdGV4dCBvZiBJRFQgODlIMzJIOEczLVlDLCBlcnJh
dHVtICMzNjoKICoKICogICBJdGVtICMzNiAtIERvd25zdHJlYW0gcG9ydCBhcHBsaWVzIEFDUyBT
b3VyY2UgVmFsaWRhdGlvbiB0byBDb21wbGV0aW9ucwogKiAgIFNlY3Rpb24gNi4xMi4xLjEgb2Yg
dGhlIFBDSSBFeHByZXNzIEJhc2UgU3BlY2lmaWNhdGlvbiAzLjEgc3RhdGVzIHRoYXQKICogICBj
b21wbGV0aW9ucyBhcmUgbmV2ZXIgYWZmZWN0ZWQgYnkgQUNTIFNvdXJjZSBWYWxpZGF0aW9uLiAg
SG93ZXZlciwKICogICBjb21wbGV0aW9ucyByZWNlaXZlZCBieSBhIGRvd25zdHJlYW0gcG9ydCBv
ZiB0aGUgUENJZSBzd2l0Y2ggZnJvbSBhCiAqICAgZGV2aWNlIHRoYXQgaGFzIG5vdCB5ZXQgY2Fw
dHVyZWQgYSBQQ0llIGJ1cyBudW1iZXIgYXJlIGluY29ycmVjdGx5CiAqICAgZHJvcHBlZCBieSBB
Q1MgU291cmNlIFZhbGlkYXRpb24gYnkgdGhlIHN3aXRjaCBkb3duc3RyZWFtIHBvcnQuCiAqCiAq
IFRoZSB3b3JrYXJvdW5kIHN1Z2dlc3RlZCBieSBJRFQgaXMgdG8gaXNzdWUgYSBjb25maWcgd3Jp
dGUgdG8gdGhlCiAqIGRvd25zdHJlYW0gZGV2aWNlIGJlZm9yZSBpc3N1aW5nIHRoZSBmaXJzdCBj
b25maWcgcmVhZC4gIFRoaXMgYWxsb3dzIHRoZQogKiBkb3duc3RyZWFtIGRldmljZSB0byBjYXB0
dXJlIGl0cyBidXMgYW5kIGRldmljZSBudW1iZXJzIChzZWUgUENJZSByNC4wLAogKiBzZWMgMi4y
LjkpLCB0aHVzIGF2b2lkaW5nIHRoZSBBQ1MgZXJyb3Igb24gdGhlIGNvbXBsZXRpb24uCiAqCiAq
IEhvd2V2ZXIsIHdlIGRvbid0IGtub3cgd2hlbiB0aGUgZGV2aWNlIGlzIHJlYWR5IHRvIGFjY2Vw
dCB0aGUgY29uZmlnCiAqIHdyaXRlLCBzbyB3ZSBkbyBjb25maWcgcmVhZHMgdW50aWwgd2UgcmVj
ZWl2ZSBhIG5vbi1Db25maWcgUmVxdWVzdCBSZXRyeQogKiBTdGF0dXMsIHRoZW4gZG8gdGhlIGNv
bmZpZyB3cml0ZS4KICoKICogVG8gYXZvaWQgaGl0dGluZyB0aGUgZXJyYXR1bSB3aGVuIGRvaW5n
IHRoZSBjb25maWcgcmVhZHMsIHdlIGRpc2FibGUgQUNTCiAqIFNWIGFyb3VuZCB0aGlzIHByb2Nl
c3MuCiAqLwppbnQgcGNpX2lkdF9idXNfcXVpcmsoc3RydWN0IHBjaV9idXMgKmJ1cywgaW50IGRl
dmZuLCB1MzIgKmwsIGludCB0aW1lb3V0KQp7CglpbnQgcG9zOwoJdTE2IGN0cmwgPSAwOwoJYm9v
bCBmb3VuZDsKCXN0cnVjdCBwY2lfZGV2ICpicmlkZ2UgPSBidXMtPnNlbGY7CgoJcG9zID0gcGNp
X2ZpbmRfZXh0X2NhcGFiaWxpdHkoYnJpZGdlLCBQQ0lfRVhUX0NBUF9JRF9BQ1MpOwoKCS8qIERp
c2FibGUgQUNTIFNWIGJlZm9yZSBpbml0aWFsIGNvbmZpZyByZWFkcyAqLwoJaWYgKHBvcykgewoJ
CXBjaV9yZWFkX2NvbmZpZ193b3JkKGJyaWRnZSwgcG9zICsgUENJX0FDU19DVFJMLCAmY3RybCk7
CgkJaWYgKGN0cmwgJiBQQ0lfQUNTX1NWKQoJCQlwY2lfd3JpdGVfY29uZmlnX3dvcmQoYnJpZGdl
LCBwb3MgKyBQQ0lfQUNTX0NUUkwsCgkJCQkJICAgICAgY3RybCAmIH5QQ0lfQUNTX1NWKTsKCX0K
Cglmb3VuZCA9IHBjaV9idXNfZ2VuZXJpY19yZWFkX2Rldl92ZW5kb3JfaWQoYnVzLCBkZXZmbiwg
bCwgdGltZW91dCk7CgoJLyogV3JpdGUgVmVuZG9yIElEIChyZWFkLW9ubHkpIHNvIHRoZSBlbmRw
b2ludCBsYXRjaGVzIGl0cyBidXMvZGV2ICovCglpZiAoZm91bmQpCgkJcGNpX2J1c193cml0ZV9j
b25maWdfd29yZChidXMsIGRldmZuLCBQQ0lfVkVORE9SX0lELCAwKTsKCgkvKiBSZS1lbmFibGUg
QUNTX1NWIGlmIGl0IHdhcyBwcmV2aW91c2x5IGVuYWJsZWQgKi8KCWlmIChjdHJsICYgUENJX0FD
U19TVikKCQlwY2lfd3JpdGVfY29uZmlnX3dvcmQoYnJpZGdlLCBwb3MgKyBQQ0lfQUNTX0NUUkws
IGN0cmwpOwoKCXJldHVybiBmb3VuZDsKfQoKLyoKICogTWljcm9zZW1pIFN3aXRjaHRlYyBOVEIg
dXNlcyBkZXZmbiBwcm94eSBJRHMgdG8gbW92ZSBUTFBzIGJldHdlZW4KICogTlQgZW5kcG9pbnRz
IHZpYSB0aGUgaW50ZXJuYWwgc3dpdGNoIGZhYnJpYy4gVGhlc2UgSURzIHJlcGxhY2UgdGhlCiAq
IG9yaWdpbmF0aW5nIHJlcXVlc3RvciBJRCBUTFBzIHdoaWNoIGFjY2VzcyBob3N0IG1lbW9yeSBv
biBwZWVyIE5UQgogKiBwb3J0cy4gVGhlcmVmb3JlLCBhbGwgcHJveHkgSURzIG11c3QgYmUgYWxp
YXNlZCB0byB0aGUgTlRCIGRldmljZQogKiB0byBwZXJtaXQgYWNjZXNzIHdoZW4gdGhlIElPTU1V
IGlzIHR1cm5lZCBvbi4KICovCnN0YXRpYyB2b2lkIHF1aXJrX3N3aXRjaHRlY19udGJfZG1hX2Fs
aWFzKHN0cnVjdCBwY2lfZGV2ICpwZGV2KQp7Cgl2b2lkIF9faW9tZW0gKm1taW87CglzdHJ1Y3Qg
bnRiX2luZm9fcmVncyBfX2lvbWVtICptbWlvX250YjsKCXN0cnVjdCBudGJfY3RybF9yZWdzIF9f
aW9tZW0gKm1taW9fY3RybDsKCXN0cnVjdCBzeXNfaW5mb19yZWdzIF9faW9tZW0gKm1taW9fc3lz
X2luZm87Cgl1NjQgcGFydGl0aW9uX21hcDsKCXU4IHBhcnRpdGlvbjsKCWludCBwcDsKCglpZiAo
cGNpX2VuYWJsZV9kZXZpY2UocGRldikpIHsKCQlwY2lfZXJyKHBkZXYsICJDYW5ub3QgZW5hYmxl
IFN3aXRjaHRlYyBkZXZpY2VcbiIpOwoJCXJldHVybjsKCX0KCgltbWlvID0gcGNpX2lvbWFwKHBk
ZXYsIDAsIDApOwoJaWYgKG1taW8gPT0gTlVMTCkgewoJCXBjaV9kaXNhYmxlX2RldmljZShwZGV2
KTsKCQlwY2lfZXJyKHBkZXYsICJDYW5ub3QgaW9tYXAgU3dpdGNodGVjIGRldmljZVxuIik7CgkJ
cmV0dXJuOwoJfQoKCXBjaV9pbmZvKHBkZXYsICJTZXR0aW5nIFN3aXRjaHRlYyBwcm94eSBJRCBh
bGlhc2VzXG4iKTsKCgltbWlvX250YiA9IG1taW8gKyBTV0lUQ0hURUNfR0FTX05UQl9PRkZTRVQ7
CgltbWlvX2N0cmwgPSAodm9pZCBfX2lvbWVtICopIG1taW9fbnRiICsgU1dJVENIVEVDX05UQl9S
RUdfQ1RSTF9PRkZTRVQ7CgltbWlvX3N5c19pbmZvID0gbW1pbyArIFNXSVRDSFRFQ19HQVNfU1lT
X0lORk9fT0ZGU0VUOwoKCXBhcnRpdGlvbiA9IGlvcmVhZDgoJm1taW9fbnRiLT5wYXJ0aXRpb25f
aWQpOwoKCXBhcnRpdGlvbl9tYXAgPSBpb3JlYWQzMigmbW1pb19udGItPmVwX21hcCk7CglwYXJ0
aXRpb25fbWFwIHw9ICgodTY0KSBpb3JlYWQzMigmbW1pb19udGItPmVwX21hcCArIDQpKSA8PCAz
MjsKCXBhcnRpdGlvbl9tYXAgJj0gfigxVUxMIDw8IHBhcnRpdGlvbik7CgoJZm9yIChwcCA9IDA7
IHBwIDwgKHNpemVvZihwYXJ0aXRpb25fbWFwKSAqIDgpOyBwcCsrKSB7CgkJc3RydWN0IG50Yl9j
dHJsX3JlZ3MgX19pb21lbSAqbW1pb19wZWVyX2N0cmw7CgkJdTMyIHRhYmxlX3N6ID0gMDsKCQlp
bnQgdGU7CgoJCWlmICghKHBhcnRpdGlvbl9tYXAgJiAoMVVMTCA8PCBwcCkpKQoJCQljb250aW51
ZTsKCgkJcGNpX2RiZyhwZGV2LCAiUHJvY2Vzc2luZyBwYXJ0aXRpb24gJWRcbiIsIHBwKTsKCgkJ
bW1pb19wZWVyX2N0cmwgPSAmbW1pb19jdHJsW3BwXTsKCgkJdGFibGVfc3ogPSBpb3JlYWQxNigm
bW1pb19wZWVyX2N0cmwtPnJlcV9pZF90YWJsZV9zaXplKTsKCQlpZiAoIXRhYmxlX3N6KSB7CgkJ
CXBjaV93YXJuKHBkZXYsICJQYXJ0aXRpb24gJWQgdGFibGVfc3ogMFxuIiwgcHApOwoJCQljb250
aW51ZTsKCQl9CgoJCWlmICh0YWJsZV9zeiA+IDUxMikgewoJCQlwY2lfd2FybihwZGV2LAoJCQkJ
ICJJbnZhbGlkIFN3aXRjaHRlYyBwYXJ0aXRpb24gJWQgdGFibGVfc3ogJWRcbiIsCgkJCQkgcHAs
IHRhYmxlX3N6KTsKCQkJY29udGludWU7CgkJfQoKCQlmb3IgKHRlID0gMDsgdGUgPCB0YWJsZV9z
ejsgdGUrKykgewoJCQl1MzIgcmlkX2VudHJ5OwoJCQl1OCBkZXZmbjsKCgkJCXJpZF9lbnRyeSA9
IGlvcmVhZDMyKCZtbWlvX3BlZXJfY3RybC0+cmVxX2lkX3RhYmxlW3RlXSk7CgkJCWRldmZuID0g
KHJpZF9lbnRyeSA+PiAxKSAmIDB4RkY7CgkJCXBjaV9kYmcocGRldiwKCQkJCSJBbGlhc2luZyBQ
YXJ0aXRpb24gJWQgUHJveHkgSUQgJTAyeC4lZFxuIiwKCQkJCXBwLCBQQ0lfU0xPVChkZXZmbiks
IFBDSV9GVU5DKGRldmZuKSk7CgkJCXBjaV9hZGRfZG1hX2FsaWFzKHBkZXYsIGRldmZuKTsKCQl9
Cgl9CgoJcGNpX2lvdW5tYXAocGRldiwgbW1pbyk7CglwY2lfZGlzYWJsZV9kZXZpY2UocGRldik7
Cn0KI2RlZmluZSBTV0lUQ0hURUNfUVVJUksodmlkKSBcCglERUNMQVJFX1BDSV9GSVhVUF9GSU5B
TChQQ0lfVkVORE9SX0lEX01JQ1JPU0VNSSwgdmlkLCBcCgkJCQlxdWlya19zd2l0Y2h0ZWNfbnRi
X2RtYV9hbGlhcykKClNXSVRDSFRFQ19RVUlSSygweDg1MzEpOyAgLyogUEZYIDI0eEczICovClNX
SVRDSFRFQ19RVUlSSygweDg1MzIpOyAgLyogUEZYIDMyeEczICovClNXSVRDSFRFQ19RVUlSSygw
eDg1MzMpOyAgLyogUEZYIDQ4eEczICovClNXSVRDSFRFQ19RVUlSSygweDg1MzQpOyAgLyogUEZY
IDY0eEczICovClNXSVRDSFRFQ19RVUlSSygweDg1MzUpOyAgLyogUEZYIDgweEczICovClNXSVRD
SFRFQ19RVUlSSygweDg1MzYpOyAgLyogUEZYIDk2eEczICovClNXSVRDSFRFQ19RVUlSSygweDg1
NDEpOyAgLyogUFNYIDI0eEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NDIpOyAgLyogUFNYIDMy
eEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NDMpOyAgLyogUFNYIDQ4eEczICovClNXSVRDSFRF
Q19RVUlSSygweDg1NDQpOyAgLyogUFNYIDY0eEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NDUp
OyAgLyogUFNYIDgweEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NDYpOyAgLyogUFNYIDk2eEcz
ICovClNXSVRDSFRFQ19RVUlSSygweDg1NTEpOyAgLyogUEFYIDI0WEczICovClNXSVRDSFRFQ19R
VUlSSygweDg1NTIpOyAgLyogUEFYIDMyWEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NTMpOyAg
LyogUEFYIDQ4WEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NTQpOyAgLyogUEFYIDY0WEczICov
ClNXSVRDSFRFQ19RVUlSSygweDg1NTUpOyAgLyogUEFYIDgwWEczICovClNXSVRDSFRFQ19RVUlS
SygweDg1NTYpOyAgLyogUEFYIDk2WEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NjEpOyAgLyog
UEZYTCAyNFhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTYyKTsgIC8qIFBGWEwgMzJYRzMgKi8K
U1dJVENIVEVDX1FVSVJLKDB4ODU2Myk7ICAvKiBQRlhMIDQ4WEczICovClNXSVRDSFRFQ19RVUlS
SygweDg1NjQpOyAgLyogUEZYTCA2NFhHMyAqLwpTV0lUQ0hURUNfUVVJUksoMHg4NTY1KTsgIC8q
IFBGWEwgODBYRzMgKi8KU1dJVENIVEVDX1FVSVJLKDB4ODU2Nik7ICAvKiBQRlhMIDk2WEczICov
ClNXSVRDSFRFQ19RVUlSSygweDg1NzEpOyAgLyogUEZYSSAyNFhHMyAqLwpTV0lUQ0hURUNfUVVJ
UksoMHg4NTcyKTsgIC8qIFBGWEkgMzJYRzMgKi8KU1dJVENIVEVDX1FVSVJLKDB4ODU3Myk7ICAv
KiBQRlhJIDQ4WEczICovClNXSVRDSFRFQ19RVUlSSygweDg1NzQpOyAgLyogUEZYSSA2NFhHMyAq
LwpTV0lUQ0hURUNfUVVJUksoMHg4NTc1KTsgIC8qIFBGWEkgODBYRzMgKi8KU1dJVENIVEVDX1FV
SVJLKDB4ODU3Nik7ICAvKiBQRlhJIDk2WEczICovCgovKgogKiBPbiBMZW5vdm8gVGhpbmtwYWQg
UDUwIFNLVXMgd2l0aCBhIE52aWRpYSBRdWFkcm8gTTEwMDBNLCB0aGUgQklPUyBkb2VzCiAqIG5v
dCBhbHdheXMgcmVzZXQgdGhlIHNlY29uZGFyeSBOdmlkaWEgR1BVIGJldHdlZW4gcmVib290cyBp
ZiB0aGUgc3lzdGVtCiAqIGlzIGNvbmZpZ3VyZWQgdG8gdXNlIEh5YnJpZCBHcmFwaGljcyBtb2Rl
LiAgVGhpcyByZXN1bHRzIGluIHRoZSBHUFUKICogYmVpbmcgbGVmdCBpbiB3aGF0ZXZlciBzdGF0
ZSBpdCB3YXMgaW4gZHVyaW5nIHRoZSAqcHJldmlvdXMqIGJvb3QsIHdoaWNoCiAqIGNhdXNlcyBz
cHVyaW91cyBpbnRlcnJ1cHRzIGZyb20gdGhlIEdQVSwgd2hpY2ggaW4gdHVybiBjYXVzZXMgdXMg
dG8KICogZGlzYWJsZSB0aGUgd3JvbmcgSVJRIGFuZCBlbmQgdXAgYnJlYWtpbmcgdGhlIHRvdWNo
cGFkLiAgVW5zdXJwcmlzaW5nbHksCiAqIHRoaXMgYWxzbyBjb21wbGV0ZWx5IGJyZWFrcyBub3V2
ZWF1LgogKgogKiBMdWNraWx5LCBpdCBzZWVtcyBhIHNpbXBsZSByZXNldCBvZiB0aGUgTnZpZGlh
IEdQVSBicmluZ3MgaXQgYmFjayB0byBhCiAqIGNsZWFuIHN0YXRlIGFuZCBmaXhlcyBhbGwgdGhl
c2UgaXNzdWVzLgogKgogKiBXaGVuIHRoZSBtYWNoaW5lIGlzIGNvbmZpZ3VyZWQgaW4gRGVkaWNh
dGVkIGRpc3BsYXkgbW9kZSwgdGhlIGlzc3VlCiAqIGRvZXNuJ3Qgb2NjdXIuICBGb3J0dW5hdGVs
eSB0aGUgR1BVIGFkdmVydGlzZXMgTm9SZXNldCsgd2hlbiBpbiB0aGlzCiAqIG1vZGUsIHNvIHdl
IGNhbiBkZXRlY3QgdGhhdCBhbmQgYXZvaWQgcmVzZXR0aW5nIGl0LgogKi8Kc3RhdGljIHZvaWQg
cXVpcmtfcmVzZXRfbGVub3ZvX3RoaW5rcGFkX3A1MF9udmdwdShzdHJ1Y3QgcGNpX2RldiAqcGRl
dikKewoJdm9pZCBfX2lvbWVtICptYXA7CglpbnQgcmV0OwoKCWlmIChwZGV2LT5zdWJzeXN0ZW1f
dmVuZG9yICE9IFBDSV9WRU5ET1JfSURfTEVOT1ZPIHx8CgkgICAgcGRldi0+c3Vic3lzdGVtX2Rl
dmljZSAhPSAweDIyMmUgfHwKCSAgICAhcGRldi0+cmVzZXRfZm4pCgkJcmV0dXJuOwoKCWlmIChw
Y2lfZW5hYmxlX2RldmljZV9tZW0ocGRldikpCgkJcmV0dXJuOwoKCS8qCgkgKiBCYXNlZCBvbiBu
dmttX2RldmljZV9jdG9yKCkgaW4KCSAqIGRyaXZlcnMvZ3B1L2RybS9ub3V2ZWF1L252a20vZW5n
aW5lL2RldmljZS9iYXNlLmMKCSAqLwoJbWFwID0gcGNpX2lvbWFwKHBkZXYsIDAsIDB4MjMwMDAp
OwoJaWYgKCFtYXApIHsKCQlwY2lfZXJyKHBkZXYsICJDYW4ndCBtYXAgTU1JTyBzcGFjZVxuIik7
CgkJZ290byBvdXRfZGlzYWJsZTsKCX0KCgkvKgoJICogTWFrZSBzdXJlIHRoZSBHUFUgbG9va3Mg
bGlrZSBpdCdzIGJlZW4gUE9TVGVkIGJlZm9yZSByZXNldHRpbmcKCSAqIGl0LgoJICovCglpZiAo
aW9yZWFkMzIobWFwICsgMHgyMjQwYykgJiAweDIpIHsKCQlwY2lfaW5mbyhwZGV2LCBGV19CVUcg
IkdQVSBsZWZ0IGluaXRpYWxpemVkIGJ5IEVGSSwgcmVzZXR0aW5nXG4iKTsKCQlyZXQgPSBwY2lf
cmVzZXRfYnVzKHBkZXYpOwoJCWlmIChyZXQgPCAwKQoJCQlwY2lfZXJyKHBkZXYsICJGYWlsZWQg
dG8gcmVzZXQgR1BVOiAlZFxuIiwgcmV0KTsKCX0KCglpb3VubWFwKG1hcCk7Cm91dF9kaXNhYmxl
OgoJcGNpX2Rpc2FibGVfZGV2aWNlKHBkZXYpOwp9CkRFQ0xBUkVfUENJX0ZJWFVQX0NMQVNTX0ZJ
TkFMKFBDSV9WRU5ET1JfSURfTlZJRElBLCAweDEzYjEsCgkJCSAgICAgIFBDSV9DTEFTU19ESVNQ
TEFZX1ZHQSwgOCwKCQkJICAgICAgcXVpcmtfcmVzZXRfbGVub3ZvX3RoaW5rcGFkX3A1MF9udmdw
dSk7Cg==
--000000000000f7a9680595b04fb2--
