Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 35E54719AE
	for <lists+linux-kernel@lfdr.de>; Tue, 23 Jul 2019 15:47:51 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390390AbfGWNrt (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Tue, 23 Jul 2019 09:47:49 -0400
Received: from mx2.suse.de ([195.135.220.15]:39306 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726260AbfGWNrt (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 23 Jul 2019 09:47:49 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 1BCF6AF7E;
        Tue, 23 Jul 2019 13:47:48 +0000 (UTC)
Date:   Tue, 23 Jul 2019 15:47:47 +0200
Message-ID: <s5htvbc50cc.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     "Jia-Ju Bai" <baijiaju1990@gmail.com>
Cc:     <huangfq.daxian@gmail.com>, <tglx@linutronix.de>,
        <allison@lohutok.net>, <perex@perex.cz>,
        <alsa-devel@alsa-project.org>, <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] ALSA: isa: gus: Fix a possible null-pointer dereference in snd_gf1_mem_xfree()
In-Reply-To: <20190723134020.25972-1-baijiaju1990@gmail.com>
References: <20190723134020.25972-1-baijiaju1990@gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, 23 Jul 2019 15:40:20 +0200,
Jia-Ju Bai wrote:
> 
> In snd_gf1_mem_xfree(), there is an if statement on line 72 and line 74
> to check whether block->next is NULL:
>     if (block->next)
> 
> When block->next is NULL, block->next is used on line 84:
>     block->next->prev = block->prev;
> 
> Thus, a possible null-pointer dereference may occur in this case.

There is already a check beforehand:

	if (alloc->last == block) {

and the code path you're referring to is only after this check fails,
i.e. it's no last entry, hence block->next can be never NULL.

So the current code is OK.


thanks,

Takashi

> 
> To fix this possible bug, block->next is checked before using it.
> 
> This bug is found by a static analysis tool STCheck written by us.
> 
> Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
> ---
>  sound/isa/gus/gus_mem.c | 3 ++-
>  1 file changed, 2 insertions(+), 1 deletion(-)
> 
> diff --git a/sound/isa/gus/gus_mem.c b/sound/isa/gus/gus_mem.c
> index cb02d18dde60..ed6205b88057 100644
> --- a/sound/isa/gus/gus_mem.c
> +++ b/sound/isa/gus/gus_mem.c
> @@ -81,7 +81,8 @@ int snd_gf1_mem_xfree(struct snd_gf1_mem * alloc, struct snd_gf1_mem_block * blo
>  		if (block->prev)
>  			block->prev->next = NULL;
>  	} else {
> -		block->next->prev = block->prev;
> +		if (block->next)
> +			block->next->prev = block->prev;
>  		if (block->prev)
>  			block->prev->next = block->next;
>  	}
> -- 
> 2.17.0
> 
> 
